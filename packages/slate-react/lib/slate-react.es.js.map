{"version":3,"file":"slate-react.es.js","sources":["../src/constants/event-handlers.js","../src/constants/plugin-props.js","../src/constants/environment.js","../src/constants/hotkeys.js","../src/utils/offset-key.js","../src/components/leaf.js","../src/components/text.js","../src/components/void.js","../src/components/node.js","../src/utils/find-dom-node.js","../src/utils/find-dom-point.js","../src/utils/find-dom-range.js","../src/utils/find-point.js","../src/utils/find-range.js","../src/utils/scroll-to-selection.js","../src/components/content.js","../src/utils/clone-fragment.js","../src/utils/find-node.js","../src/utils/get-event-range.js","../src/constants/transfer-types.js","../src/utils/get-event-transfer.js","../src/utils/set-event-transfer.js","../src/plugins/after.js","../src/plugins/before.js","../src/utils/noop.js","../src/components/editor.js","../src/index.js"],"sourcesContent":["/**\n * Event handlers used by Slate plugins.\n *\n * @type {Array}\n */\n\nconst EVENT_HANDLERS = [\n  'onBeforeInput',\n  'onBlur',\n  'onClick',\n  'onCompositionEnd',\n  'onCompositionStart',\n  'onCopy',\n  'onCut',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onInput',\n  'onFocus',\n  'onKeyDown',\n  'onKeyUp',\n  'onPaste',\n  'onSelect',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default EVENT_HANDLERS\n","import EVENT_HANDLERS from './event-handlers'\n\n/**\n * Props that can be defined by plugins.\n *\n * @type {Array}\n */\n\nconst PLUGIN_PROPS = [\n  ...EVENT_HANDLERS,\n  'decorateNode',\n  'onChange',\n  'renderMark',\n  'renderNode',\n  'renderPlaceholder',\n  'renderPortal',\n  'schema',\n  'validateNode',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default PLUGIN_PROPS\n","import browser from 'is-in-browser'\n\n/**\n * Browser matching rules.\n *\n * @type {Array}\n */\n\nconst BROWSER_RULES = [\n  ['edge', /Edge\\/([0-9\\._]+)/],\n  ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n  ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n  ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n  ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)$/],\n  ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+)\\).*Gecko$/],\n  ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n  ['ie', /MSIE\\s(7\\.0)/],\n  ['android', /Android\\s([0-9\\.]+)/],\n  ['safari', /Version\\/([0-9\\._]+).*Safari/],\n]\n\n/**\n * DOM event matching rules.\n *\n * @type {Array}\n */\n\nconst EVENT_RULES = [['beforeinput', el => 'onbeforeinput' in el]]\n\n/**\n * Operating system matching rules.\n *\n * @type {Array}\n */\n\nconst OS_RULES = [\n  ['ios', /os ([\\.\\_\\d]+) like mac os/i], // must be before the macos rule\n  ['macos', /mac os x/i],\n  ['android', /android/i],\n  ['firefoxos', /mozilla\\/[a-z\\.\\_\\d]+ \\((?:mobile)|(?:tablet)/i],\n  ['windows', /windows\\s*(?:nt)?\\s*([\\.\\_\\d]+)/i],\n]\n\n/**\n * Define variables to store the result.\n */\n\nlet BROWSER\nconst EVENTS = {}\nlet OS\n\n/**\n * Run the matchers when in browser.\n */\n\nif (browser) {\n  const { userAgent } = window.navigator\n\n  for (const [name, regexp] of BROWSER_RULES) {\n    if (regexp.test(userAgent)) {\n      BROWSER = name\n      break\n    }\n  }\n\n  for (const [name, regexp] of OS_RULES) {\n    if (regexp.test(userAgent)) {\n      OS = name\n      break\n    }\n  }\n\n  const testEl = window.document.createElement('div')\n  testEl.contentEditable = true\n\n  for (const [name, testFn] of EVENT_RULES) {\n    EVENTS[name] = testFn(testEl)\n  }\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport const IS_CHROME = BROWSER === 'chrome'\nexport const IS_FIREFOX = BROWSER === 'firefox'\nexport const IS_SAFARI = BROWSER === 'safari'\nexport const IS_IE = BROWSER === 'ie'\nexport const IS_EDGE = BROWSER === 'edge'\n\nexport const IS_ANDROID = OS === 'android'\nexport const IS_IOS = OS === 'ios'\nexport const IS_MAC = OS === 'macos'\nexport const IS_WINDOWS = OS === 'windows'\n\nexport const SUPPORTED_EVENTS = EVENTS\n","import { isKeyHotkey } from 'is-hotkey'\n\nimport { IS_IOS, IS_MAC } from './environment'\n\n/**\n * Is Apple?\n *\n * @type {Boolean}\n */\n\nconst IS_APPLE = IS_IOS || IS_MAC\n\n/**\n * Hotkeys.\n *\n * @type {Function}\n */\n\nconst BOLD = isKeyHotkey('mod+b')\nconst ITALIC = isKeyHotkey('mod+i')\n\nconst ENTER = isKeyHotkey('enter')\nconst SHIFT_ENTER = isKeyHotkey('shift+enter')\nconst SPLIT_BLOCK = e => ENTER(e) || SHIFT_ENTER(e)\n\nconst BACKSPACE = isKeyHotkey('backspace')\nconst SHIFT_BACKSPACE = isKeyHotkey('shift+backspace')\nconst DELETE = isKeyHotkey('delete')\nconst SHIFT_DELETE = isKeyHotkey('shift+delete')\nconst DELETE_BACKWARD = e => BACKSPACE(e) || SHIFT_BACKSPACE(e)\nconst DELETE_FORWARD = e => DELETE(e) || SHIFT_DELETE(e)\n\nconst DELETE_CHAR_BACKWARD_MAC = isKeyHotkey('ctrl+h')\nconst DELETE_CHAR_FORWARD_MAC = isKeyHotkey('ctrl+d')\nconst DELETE_CHAR_BACKWARD = e =>\n  DELETE_BACKWARD(e) || (IS_APPLE && DELETE_CHAR_BACKWARD_MAC(e))\nconst DELETE_CHAR_FORWARD = e =>\n  DELETE_FORWARD(e) || (IS_APPLE && DELETE_CHAR_FORWARD_MAC(e))\n\nconst DELETE_LINE_BACKWARD_MAC = e =>\n  isKeyHotkey('cmd+shift+backspace', e) || isKeyHotkey('cmd+backspace', e)\nconst DELETE_LINE_FORWARD_MAC = isKeyHotkey('ctrl+k')\nconst DELETE_LINE_BACKWARD = e => IS_APPLE && DELETE_LINE_BACKWARD_MAC(e)\nconst DELETE_LINE_FORWARD = e => IS_APPLE && DELETE_LINE_FORWARD_MAC(e)\n\nconst DELETE_WORD_BACKWARD_MAC = e =>\n  isKeyHotkey('shift+option+backspace', e) || isKeyHotkey('option+backspace', e)\nconst DELETE_WORD_BACKWARD_PC = isKeyHotkey('ctrl+backspace')\nconst DELETE_WORD_FORWARD_MAC = e =>\n  isKeyHotkey('shift+option+delete', e) || isKeyHotkey('option+delete', e)\nconst DELETE_WORD_FORWARD_PC = isKeyHotkey('ctrl+delete')\nconst DELETE_WORD_BACKWARD = e =>\n  IS_APPLE ? DELETE_WORD_BACKWARD_MAC(e) : DELETE_WORD_BACKWARD_PC(e)\nconst DELETE_WORD_FORWARD = e =>\n  IS_APPLE ? DELETE_WORD_FORWARD_MAC(e) : DELETE_WORD_FORWARD_PC(e)\n\nconst RIGHT_ARROW = isKeyHotkey('right')\nconst LEFT_ARROW = isKeyHotkey('left')\nconst COLLAPSE_CHAR_FORWARD = e => RIGHT_ARROW(e) && !EXTEND_CHAR_FORWARD(e)\nconst COLLAPSE_CHAR_BACKWARD = e => LEFT_ARROW(e) && !EXTEND_CHAR_BACKWARD(e)\n\nconst COLLAPSE_LINE_BACKWARD_MAC = isKeyHotkey('option+up')\nconst COLLAPSE_LINE_FORWARD_MAC = isKeyHotkey('option+down')\nconst COLLAPSE_LINE_BACKWARD = e => IS_APPLE && COLLAPSE_LINE_BACKWARD_MAC(e)\nconst COLLAPSE_LINE_FORWARD = e => IS_APPLE && COLLAPSE_LINE_FORWARD_MAC(e)\n\nconst EXTEND_CHAR_FORWARD = isKeyHotkey('shift+right')\nconst EXTEND_CHAR_BACKWARD = isKeyHotkey('shift+left')\n\nconst EXTEND_LINE_BACKWARD_MAC = isKeyHotkey('option+shift+up')\nconst EXTEND_LINE_FORWARD_MAC = isKeyHotkey('option+shift+down')\nconst EXTEND_LINE_BACKWARD = e => IS_APPLE && EXTEND_LINE_BACKWARD_MAC(e)\nconst EXTEND_LINE_FORWARD = e => IS_APPLE && EXTEND_LINE_FORWARD_MAC(e)\n\nconst UNDO = isKeyHotkey('mod+z')\nconst REDO_MAC = isKeyHotkey('mod+shift+z')\nconst REDO_PC = isKeyHotkey('mod+y')\nconst REDO = e => (IS_APPLE ? REDO_MAC(e) : REDO_PC(e))\n\nconst TRANSPOSE_CHARACTER_MAC = isKeyHotkey('ctrl+t')\nconst TRANSPOSE_CHARACTER = e => IS_APPLE && TRANSPOSE_CHARACTER_MAC(e)\n\nconst CONTENTEDITABLE = e =>\n  BOLD(e) ||\n  DELETE_CHAR_BACKWARD(e) ||\n  DELETE_CHAR_FORWARD(e) ||\n  DELETE_LINE_BACKWARD(e) ||\n  DELETE_LINE_FORWARD(e) ||\n  DELETE_WORD_BACKWARD(e) ||\n  DELETE_WORD_FORWARD(e) ||\n  ITALIC(e) ||\n  REDO(e) ||\n  SPLIT_BLOCK(e) ||\n  TRANSPOSE_CHARACTER(e) ||\n  UNDO(e)\n\nconst COMPOSING = e =>\n  e.key == 'ArrowDown' ||\n  e.key == 'ArrowLeft' ||\n  e.key == 'ArrowRight' ||\n  e.key == 'ArrowUp' ||\n  e.key == 'Backspace' ||\n  e.key == 'Enter'\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default {\n  BOLD,\n  COLLAPSE_LINE_BACKWARD,\n  COLLAPSE_LINE_FORWARD,\n  COLLAPSE_CHAR_FORWARD,\n  COLLAPSE_CHAR_BACKWARD,\n  COMPOSING,\n  CONTENTEDITABLE,\n  DELETE_CHAR_BACKWARD,\n  DELETE_CHAR_FORWARD,\n  DELETE_LINE_BACKWARD,\n  DELETE_LINE_FORWARD,\n  DELETE_WORD_BACKWARD,\n  DELETE_WORD_FORWARD,\n  EXTEND_LINE_BACKWARD,\n  EXTEND_LINE_FORWARD,\n  EXTEND_CHAR_FORWARD,\n  EXTEND_CHAR_BACKWARD,\n  ITALIC,\n  REDO,\n  SPLIT_BLOCK,\n  UNDO,\n}\n","/**\n * Offset key parser regex.\n *\n * @type {RegExp}\n */\n\nconst PARSER = /^([\\w-]+)(?::(\\d+))?$/\n\n/**\n * Parse an offset key `string`.\n *\n * @param {String} string\n * @return {Object}\n */\n\nfunction parse(string) {\n  const matches = PARSER.exec(string)\n\n  if (!matches) {\n    throw new Error(`Invalid offset key string \"${string}\".`)\n  }\n\n  const [original, key, index] = matches // eslint-disable-line no-unused-vars\n  return {\n    key,\n    index: parseInt(index, 10),\n  }\n}\n\n/**\n * Stringify an offset key `object`.\n *\n * @param {Object} object\n *   @property {String} key\n *   @property {Number} index\n * @return {String}\n */\n\nfunction stringify(object) {\n  return `${object.key}:${object.index}`\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default {\n  parse,\n  stringify,\n}\n","import Debug from 'debug'\nimport React from 'react'\nimport Types from 'prop-types'\nimport SlateTypes from 'slate-prop-types'\n\nimport OffsetKey from '../utils/offset-key'\n\n/**\n * Debugger.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:leaves')\n\n/**\n * Leaf.\n *\n * @type {Component}\n */\n\nclass Leaf extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block.isRequired,\n    editor: Types.object.isRequired,\n    index: Types.number.isRequired,\n    leaves: SlateTypes.leaves.isRequired,\n    marks: SlateTypes.marks.isRequired,\n    node: SlateTypes.node.isRequired,\n    offset: Types.number.isRequired,\n    parent: SlateTypes.node.isRequired,\n    text: Types.string.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    debug(message, `${this.props.node.key}-${this.props.index}`, ...args)\n  }\n\n  /**\n   * Should component update?\n   *\n   * @param {Object} props\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate(props) {\n    // If any of the regular properties have changed, re-render.\n    if (\n      props.index != this.props.index ||\n      props.marks != this.props.marks ||\n      props.text != this.props.text ||\n      props.parent != this.props.parent\n    ) {\n      return true\n    }\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render the leaf.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n\n    const { node, index } = this.props\n    const offsetKey = OffsetKey.stringify({\n      key: node.key,\n      index,\n    })\n\n    return <span data-offset-key={offsetKey}>{this.renderMarks()}</span>\n  }\n\n  /**\n   * Render all of the leaf's mark components.\n   *\n   * @return {Element}\n   */\n\n  renderMarks() {\n    const { marks, node, offset, text, editor } = this.props\n    const { stack } = editor\n    const leaf = this.renderText()\n\n    return marks.reduce((children, mark) => {\n      const props = { editor, mark, marks, node, offset, text, children }\n      const element = stack.find('renderMark', props)\n      return element || children\n    }, leaf)\n  }\n\n  /**\n   * Render the text content of the leaf, accounting for browsers.\n   *\n   * @return {Element}\n   */\n\n  renderText() {\n    const { block, node, parent, text, index, leaves } = this.props\n\n    // COMPAT: Render text inside void nodes with a zero-width space.\n    // So the node can contain selection but the text is not visible.\n    if (parent.isVoid) {\n      return <span data-slate-zero-width=\"z\">{'\\u200B'}</span>\n    }\n\n    // COMPAT: If this is the last text node in an empty block, render a zero-\n    // width space that will convert into a line break when copying and pasting\n    // to support expected plain text.\n    if (\n      text === '' &&\n      parent.object === 'block' &&\n      parent.text === '' &&\n      parent.nodes.size === 1\n    ) {\n      return <span data-slate-zero-width=\"n\">{'\\u200B'}</span>\n    }\n\n    // COMPAT: If the text is empty, it's because it's on the edge of an inline\n    // void node, so we render a zero-width space so that the selection can be\n    // inserted next to it still.\n    if (text === '') {\n      return <span data-slate-zero-width=\"z\">{'\\u200B'}</span>\n    }\n\n    // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n    // so we need to add an extra trailing new lines to prevent that.\n    const lastText = block.getLastText()\n    const lastChar = text.charAt(text.length - 1)\n    const isLastText = node === lastText\n    const isLastLeaf = index === leaves.size - 1\n    if (isLastText && isLastLeaf && lastChar === '\\n') return `${text}\\n`\n\n    // Otherwise, just return the text.\n    return text\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Leaf\n","import Debug from 'debug'\nimport ImmutableTypes from 'react-immutable-proptypes'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\n\nimport Leaf from './leaf'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:node')\n\n/**\n * Text.\n *\n * @type {Component}\n */\n\nclass Text extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    decorations: ImmutableTypes.list.isRequired,\n    editor: Types.object.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    style: Types.object,\n  }\n\n  /**\n   * Default prop types.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    style: null,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key } = node\n    debug(message, `${key} (text)`, ...args)\n  }\n\n  /**\n   * Should the node update?\n   *\n   * @param {Object} nextProps\n   * @param {Object} value\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate = nextProps => {\n    const { props } = this\n    const n = nextProps\n    const p = props\n\n    // If the node has changed, update. PERF: There are cases where it will have\n    // changed, but it's properties will be exactly the same (eg. copy-paste)\n    // which this won't catch. But that's rare and not a drag on performance, so\n    // for simplicity we just let them through.\n    if (n.node != p.node) return true\n\n    // If the node parent is a block node, and it was the last child of the\n    // block, re-render to cleanup extra `\\n`.\n    if (n.parent.object == 'block') {\n      const pLast = p.parent.nodes.last()\n      const nLast = n.parent.nodes.last()\n      if (p.node == pLast && n.node != nLast) return true\n    }\n\n    // Re-render if the current decorations have changed.\n    if (!n.decorations.equals(p.decorations)) return true\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n\n    const { decorations, editor, node, style } = this.props\n    const { value } = editor\n    const { document } = value\n    const { key } = node\n\n    const decs = decorations.filter(d => {\n      const { startKey, endKey } = d\n      if (startKey == key || endKey == key) return true\n      const startsBefore = document.areDescendantsSorted(startKey, key)\n      const endsAfter = document.areDescendantsSorted(key, endKey)\n      return startsBefore && endsAfter\n    })\n\n    const leaves = node.getLeaves(decs)\n    let offset = 0\n\n    const children = leaves.map((leaf, i) => {\n      const child = this.renderLeaf(leaves, leaf, i, offset)\n      offset += leaf.text.length\n      return child\n    })\n\n    return (\n      <span data-key={key} style={style}>\n        {children}\n      </span>\n    )\n  }\n\n  /**\n   * Render a single leaf given a `leaf` and `offset`.\n   *\n   * @param {List<Leaf>} leaves\n   * @param {Leaf} leaf\n   * @param {Number} index\n   * @param {Number} offset\n   * @return {Element} leaf\n   */\n\n  renderLeaf = (leaves, leaf, index, offset) => {\n    const { block, node, parent, editor } = this.props\n    const { text, marks } = leaf\n\n    return (\n      <Leaf\n        key={`${node.key}-${index}`}\n        block={block}\n        editor={editor}\n        index={index}\n        marks={marks}\n        node={node}\n        offset={offset}\n        parent={parent}\n        leaves={leaves}\n        text={text}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Text\n","import Debug from 'debug'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\n\nimport Text from './text'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:void')\n\n/**\n * Void.\n *\n * @type {Component}\n */\n\nclass Void extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    children: Types.any.isRequired,\n    editor: Types.object.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    readOnly: Types.bool.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key, type } = node\n    const id = `${key} (${type})`\n    debug(message, `${id}`, ...args)\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    const { props } = this\n    const { children, node, readOnly } = props\n    const Tag = node.object == 'block' ? 'div' : 'span'\n    const style = {\n      height: '0',\n      color: 'transparent',\n      outline: 'none',\n    }\n\n    const spacer = (\n      <Tag\n        contentEditable\n        data-slate-spacer\n        suppressContentEditableWarning\n        style={style}\n      >\n        {this.renderText()}\n      </Tag>\n    )\n\n    const content = <Tag draggable={readOnly ? null : true}>{children}</Tag>\n\n    this.debug('render', { props })\n\n    return (\n      <Tag\n        data-slate-void\n        data-key={node.key}\n        contentEditable={readOnly ? null : false}\n      >\n        {readOnly ? null : spacer}\n        {content}\n      </Tag>\n    )\n  }\n\n  /**\n   * Render the void node's text node, which will catch the cursor when it the\n   * void node is navigated to with the arrow keys.\n   *\n   * Having this text node there means the browser continues to manage the\n   * selection natively, so it keeps track of the right offset when moving\n   * across the block.\n   *\n   * @return {Element}\n   */\n\n  renderText = () => {\n    const {\n      block,\n      decorations,\n      isSelected,\n      node,\n      readOnly,\n      editor,\n    } = this.props\n    const child = node.getFirstText()\n    return (\n      <Text\n        block={node.object == 'block' ? node : block}\n        decorations={decorations}\n        editor={editor}\n        isSelected={isSelected}\n        key={child.key}\n        node={child}\n        parent={node}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Void\n","import Debug from 'debug'\nimport ImmutableTypes from 'react-immutable-proptypes'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport logger from 'slate-dev-logger'\nimport Types from 'prop-types'\n\nimport Void from './void'\nimport Text from './text'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:node')\n\n/**\n * Node.\n *\n * @type {Component}\n */\n\nclass Node extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    decorations: ImmutableTypes.list.isRequired,\n    editor: Types.object.isRequired,\n    isSelected: Types.bool.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    readOnly: Types.bool.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key, type } = node\n    debug(message, `${key} (${type})`, ...args)\n  }\n\n  /**\n   * Should the node update?\n   *\n   * @param {Object} nextProps\n   * @param {Object} value\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate = nextProps => {\n    const { props } = this\n    const { stack } = props.editor\n    const shouldUpdate = stack.find(\n      'shouldNodeComponentUpdate',\n      props,\n      nextProps\n    )\n    const n = nextProps\n    const p = props\n\n    // If the `Component` has a custom logic to determine whether the component\n    // needs to be updated or not, return true if it returns true. If it returns\n    // false, we need to ignore it, because it shouldn't be allowed it.\n    if (shouldUpdate != null) {\n      if (shouldUpdate) {\n        return true\n      }\n\n      if (shouldUpdate === false) {\n        logger.warn(\n          \"Returning false in `shouldNodeComponentUpdate` does not disable Slate's internal `shouldComponentUpdate` logic. If you want to prevent updates, use React's `shouldComponentUpdate` instead.\"\n        )\n      }\n    }\n\n    // If the `readOnly` status has changed, re-render in case there is any\n    // user-land logic that depends on it, like nested editable contents.\n    if (n.readOnly != p.readOnly) return true\n\n    // If the node has changed, update. PERF: There are cases where it will have\n    // changed, but it's properties will be exactly the same (eg. copy-paste)\n    // which this won't catch. But that's rare and not a drag on performance, so\n    // for simplicity we just let them through.\n    if (n.node != p.node) return true\n\n    // If the selection value of the node or of some of its children has changed,\n    // re-render in case there is any user-land logic depends on it to render.\n    // if the node is selected update it, even if it was already selected: the\n    // selection value of some of its children could have been changed and they\n    // need to be rendered again.\n    if (n.isSelected || p.isSelected) return true\n\n    // If the decorations have changed, update.\n    if (!n.decorations.equals(p.decorations)) return true\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n\n    const { editor, isSelected, node, parent, readOnly } = this.props\n    const { value } = editor\n    const { selection } = value\n    const { stack } = editor\n    const indexes = node.getSelectionIndexes(selection, isSelected)\n    let children = node.nodes.toArray().map((child, i) => {\n      const isChildSelected = !!indexes && indexes.start <= i && i < indexes.end\n      return this.renderNode(child, isChildSelected)\n    })\n\n    // Attributes that the developer must to mix into the element in their\n    // custom node renderer component.\n    const attributes = { 'data-key': node.key }\n\n    // If it's a block node with inline children, add the proper `dir` attribute\n    // for text direction.\n    if (node.object == 'block' && node.nodes.first().object != 'block') {\n      const direction = node.getTextDirection()\n      if (direction == 'rtl') attributes.dir = 'rtl'\n    }\n\n    const props = {\n      key: node.key,\n      editor,\n      isSelected,\n      node,\n      parent,\n      readOnly,\n    }\n\n    let placeholder = stack.find('renderPlaceholder', props)\n\n    if (placeholder) {\n      placeholder = React.cloneElement(placeholder, {\n        key: `${node.key}-placeholder`,\n      })\n      children = [placeholder, ...children]\n    }\n\n    const element = stack.find('renderNode', {\n      ...props,\n      attributes,\n      children,\n    })\n\n    return node.isVoid ? <Void {...this.props}>{element}</Void> : element\n  }\n\n  /**\n   * Render a `child` node.\n   *\n   * @param {Node} child\n   * @param {Boolean} isSelected\n   * @return {Element}\n   */\n\n  renderNode = (child, isSelected) => {\n    const { block, decorations, editor, node, readOnly } = this.props\n    const { stack } = editor\n    const Component = child.object == 'text' ? Text : Node\n    const decs = decorations.concat(node.getDecorations(stack))\n    return (\n      <Component\n        block={node.object == 'block' ? node : block}\n        decorations={decs}\n        editor={editor}\n        isSelected={isSelected}\n        key={child.key}\n        node={child}\n        parent={node}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Node\n","import { Node } from 'slate'\n\n/**\n * Find the DOM node for a `key`.\n *\n * @param {String|Node} key\n * @param {Window} win (optional)\n * @return {Element}\n */\n\nfunction findDOMNode(key, win = window) {\n  if (Node.isNode(key)) {\n    key = key.key\n  }\n\n  const el = win.document.querySelector(`[data-key=\"${key}\"]`)\n\n  if (!el) {\n    throw new Error(\n      `Unable to find a DOM node for \"${key}\". This is often because of forgetting to add \\`props.attributes\\` to a custom component.`\n    )\n  }\n\n  return el\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMNode\n","import findDOMNode from './find-dom-node'\n\n/**\n * Find a native DOM selection point from a Slate `key` and `offset`.\n *\n * @param {String} key\n * @param {Number} offset\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMPoint(key, offset, win = window) {\n  const el = findDOMNode(key, win)\n  let start = 0\n  let n\n\n  // COMPAT: In IE, this method's arguments are not optional, so we have to\n  // pass in all four even though the last two are defaults. (2017/10/25)\n  const iterator = win.document.createNodeIterator(\n    el,\n    NodeFilter.SHOW_TEXT,\n    () => NodeFilter.FILTER_ACCEPT,\n    false\n  )\n\n  while ((n = iterator.nextNode())) {\n    const { length } = n.textContent\n    const end = start + length\n\n    if (offset <= end) {\n      const o = offset - start\n      return { node: n, offset: o >= 0 ? o : 0 }\n    }\n\n    start = end\n  }\n\n  return null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMPoint\n","import findDOMPoint from './find-dom-point'\n\n/**\n * Find a native DOM range Slate `range`.\n *\n * @param {Range} range\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMRange(range, win = window) {\n  const {\n    anchorKey,\n    anchorOffset,\n    focusKey,\n    focusOffset,\n    isBackward,\n    isCollapsed,\n  } = range\n  const anchor = findDOMPoint(anchorKey, anchorOffset, win)\n  const focus = isCollapsed ? anchor : findDOMPoint(focusKey, focusOffset, win)\n  if (!anchor || !focus) return null\n\n  const r = win.document.createRange()\n  const start = isBackward ? focus : anchor\n  const end = isBackward ? anchor : focus\n  r.setStart(start.node, start.offset)\n  r.setEnd(end.node, end.offset)\n  return r\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMRange\n","import getWindow from 'get-window'\n\nimport OffsetKey from './offset-key'\n\n/**\n * Constants.\n *\n * @type {String}\n */\n\nexport const ZERO_WIDTH_ATTRIBUTE = 'data-slate-zero-width'\nexport const ZERO_WIDTH_SELECTOR = `[${ZERO_WIDTH_ATTRIBUTE}]`\nconst OFFSET_KEY_ATTRIBUTE = 'data-offset-key'\nconst RANGE_SELECTOR = `[${OFFSET_KEY_ATTRIBUTE}]`\nconst TEXT_SELECTOR = `[data-key]`\nconst VOID_SELECTOR = '[data-slate-void]'\n\n/**\n * Find a Slate point from a DOM selection's `nativeNode` and `nativeOffset`.\n *\n * @param {Element} nativeNode\n * @param {Number} nativeOffset\n * @param {Value} value\n * @return {Object}\n */\n\nfunction findPoint(nativeNode, nativeOffset, value) {\n  const { node: nearestNode, offset: nearestOffset } = normalizeNodeAndOffset(\n    nativeNode,\n    nativeOffset\n  )\n\n  const window = getWindow(nativeNode)\n  const { parentNode } = nearestNode\n  let rangeNode = parentNode.closest(RANGE_SELECTOR)\n  let offset\n  let node\n\n  // Calculate how far into the text node the `nearestNode` is, so that we can\n  // determine what the offset relative to the text node is.\n  if (rangeNode) {\n    const range = window.document.createRange()\n    const textNode = rangeNode.closest(TEXT_SELECTOR)\n    range.setStart(textNode, 0)\n    range.setEnd(nearestNode, nearestOffset)\n    node = textNode\n    offset = range.toString().length\n  } else {\n    // For void nodes, the element with the offset key will be a cousin, not an\n    // ancestor, so find it by going down from the nearest void parent.\n    const voidNode = parentNode.closest(VOID_SELECTOR)\n    if (!voidNode) return null\n    rangeNode = voidNode.querySelector(RANGE_SELECTOR)\n    if (!rangeNode) return null\n    node = rangeNode\n    offset = node.textContent.length\n  }\n\n  // COMPAT: If the parent node is a Slate zero-width space, this is because the\n  // text node should have no characters. However, during IME composition the\n  // ASCII characters will be prepended to the zero-width space, so subtract 1\n  // from the offset to account for the zero-width space character.\n  if (\n    offset == node.textContent.length &&\n    parentNode.hasAttribute(ZERO_WIDTH_ATTRIBUTE)\n  ) {\n    offset--\n  }\n\n  // Get the string value of the offset key attribute.\n  const offsetKey = rangeNode.getAttribute(OFFSET_KEY_ATTRIBUTE)\n  if (!offsetKey) return null\n\n  const { key } = OffsetKey.parse(offsetKey)\n\n  // COMPAT: If someone is clicking from one Slate editor into another, the\n  // select event fires twice, once for the old editor's `element` first, and\n  // then afterwards for the correct `element`. (2017/03/03)\n  if (!value.document.hasDescendant(key)) return null\n\n  return {\n    key,\n    offset,\n  }\n}\n\n/**\n * From a DOM selection's `node` and `offset`, normalize so that it always\n * refers to a text node.\n *\n * @param {Element} node\n * @param {Number} offset\n * @return {Object}\n */\n\nfunction normalizeNodeAndOffset(node, offset) {\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (node.nodeType == 1 && node.childNodes.length) {\n    const isLast = offset == node.childNodes.length\n    const direction = isLast ? 'backward' : 'forward'\n    const index = isLast ? offset - 1 : offset\n    node = getEditableChild(node, index, direction)\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (node.nodeType == 1 && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, direction)\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return { node, offset }\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n *\n * @param {Element} parent\n * @param {Number} index\n * @param {String} direction ('forward' or 'backward')\n * @return {Element|Null}\n */\n\nfunction getEditableChild(parent, index, direction) {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    child.nodeType == 8 ||\n    (child.nodeType == 1 && child.childNodes.length == 0) ||\n    (child.nodeType == 1 && child.getAttribute('contenteditable') == 'false')\n  ) {\n    if (triedForward && triedBackward) break\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    if (direction == 'forward') i++\n    if (direction == 'backward') i--\n  }\n\n  return child || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findPoint\n","import getWindow from 'get-window'\nimport isBackward from 'selection-is-backward'\nimport { Range } from 'slate'\n\nimport findPoint from './find-point'\nimport findDOMPoint from './find-dom-point'\nimport { IS_IE, IS_EDGE } from '../constants/environment'\n\n/**\n * Find a Slate range from a DOM `native` selection.\n *\n * @param {Selection} native\n * @param {Value} value\n * @return {Range}\n */\n\nfunction findRange(native, value) {\n  const el = native.anchorNode || native.startContainer\n  if (!el) return null\n\n  const window = getWindow(el)\n\n  // If the `native` object is a DOM `Range` or `StaticRange` object, change it\n  // into something that looks like a DOM `Selection` instead.\n  if (\n    native instanceof window.Range ||\n    (window.StaticRange && native instanceof window.StaticRange)\n  ) {\n    native = {\n      anchorNode: native.startContainer,\n      anchorOffset: native.startOffset,\n      focusNode: native.endContainer,\n      focusOffset: native.endOffset,\n    }\n  }\n\n  const {\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset,\n    isCollapsed,\n  } = native\n  const anchor = findPoint(anchorNode, anchorOffset, value)\n  const focus = isCollapsed ? anchor : findPoint(focusNode, focusOffset, value)\n  if (!anchor || !focus) return null\n\n  // COMPAT: ??? The Edge browser seems to have a case where if you select the\n  // last word of a span, it sets the endContainer to the containing span.\n  // `selection-is-backward` doesn't handle this case.\n  if (IS_IE || IS_EDGE) {\n    const domAnchor = findDOMPoint(anchor.key, anchor.offset)\n    const domFocus = findDOMPoint(focus.key, focus.offset)\n\n    native = {\n      anchorNode: domAnchor.node,\n      anchorOffset: domAnchor.offset,\n      focusNode: domFocus.node,\n      focusOffset: domFocus.offset,\n    }\n  }\n\n  const range = Range.create({\n    anchorKey: anchor.key,\n    anchorOffset: anchor.offset,\n    focusKey: focus.key,\n    focusOffset: focus.offset,\n    isBackward: isCollapsed ? false : isBackward(native),\n    isFocused: true,\n  })\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findRange\n","import getWindow from 'get-window'\nimport isBackward from 'selection-is-backward'\nimport { IS_SAFARI, IS_IOS } from '../constants/environment'\n\n/**\n * CSS overflow values that would cause scrolling.\n *\n * @type {Array}\n */\n\nconst OVERFLOWS = ['auto', 'overlay', 'scroll']\n\n/**\n * Detect whether we are running IOS version 11\n */\n\nconst IS_IOS_11 = IS_IOS && !!window.navigator.userAgent.match(/os 11_/i)\n\n/**\n * Find the nearest parent with scrolling, or window.\n *\n * @param {el} Element\n */\n\nfunction findScrollContainer(el, window) {\n  let parent = el.parentNode\n  let scroller\n\n  while (!scroller) {\n    if (!parent.parentNode) break\n\n    const style = window.getComputedStyle(parent)\n    const { overflowY } = style\n\n    if (OVERFLOWS.includes(overflowY)) {\n      scroller = parent\n      break\n    }\n\n    parent = parent.parentNode\n  }\n\n  // COMPAT: Because Chrome does not allow doucment.body.scrollTop, we're\n  // assuming that window.scrollTo() should be used if the scrollable element\n  // turns out to be document.body or document.documentElement. This will work\n  // unless body is intentionally set to scrollable by restricting its height\n  // (e.g. height: 100vh).\n  if (!scroller) {\n    return window.document.body\n  }\n\n  return scroller\n}\n\n/**\n * Scroll the current selection's focus point into view if needed.\n *\n * @param {Selection} selection\n */\n\nfunction scrollToSelection(selection) {\n  if (IS_IOS_11) return\n  if (!selection.anchorNode) return\n\n  const window = getWindow(selection.anchorNode)\n  const scroller = findScrollContainer(selection.anchorNode, window)\n  const isWindow =\n    scroller == window.document.body ||\n    scroller == window.document.documentElement\n  const backward = isBackward(selection)\n\n  const range = selection.getRangeAt(0).cloneRange()\n  range.collapse(backward)\n  let cursorRect = range.getBoundingClientRect()\n\n  // COMPAT: range.getBoundingClientRect() returns 0s in Safari when range is\n  // collapsed. Expanding the range by 1 is a relatively effective workaround\n  // for vertical scroll, although horizontal may be off by 1 character.\n  // https://bugs.webkit.org/show_bug.cgi?id=138949\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=435438\n  if (IS_SAFARI) {\n    if (range.collapsed && cursorRect.top == 0 && cursorRect.height == 0) {\n      if (range.startOffset == 0) {\n        range.setEnd(range.endContainer, 1)\n      } else {\n        range.setStart(range.startContainer, range.startOffset - 1)\n      }\n\n      cursorRect = range.getBoundingClientRect()\n\n      if (cursorRect.top == 0 && cursorRect.height == 0) {\n        if (range.getClientRects().length) {\n          cursorRect = range.getClientRects()[0]\n        }\n      }\n    }\n  }\n\n  let width\n  let height\n  let yOffset\n  let xOffset\n  let scrollerTop = 0\n  let scrollerLeft = 0\n  let scrollerBordersY = 0\n  let scrollerBordersX = 0\n  let scrollerPaddingTop = 0\n  let scrollerPaddingBottom = 0\n  let scrollerPaddingLeft = 0\n  let scrollerPaddingRight = 0\n\n  if (isWindow) {\n    const { innerWidth, innerHeight, pageYOffset, pageXOffset } = window\n    width = innerWidth\n    height = innerHeight\n    yOffset = pageYOffset\n    xOffset = pageXOffset\n  } else {\n    const { offsetWidth, offsetHeight, scrollTop, scrollLeft } = scroller\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n    } = window.getComputedStyle(scroller)\n\n    const scrollerRect = scroller.getBoundingClientRect()\n    width = offsetWidth\n    height = offsetHeight\n    scrollerTop = scrollerRect.top + parseInt(borderTopWidth, 10)\n    scrollerLeft = scrollerRect.left + parseInt(borderLeftWidth, 10)\n    scrollerBordersY =\n      parseInt(borderTopWidth, 10) + parseInt(borderBottomWidth, 10)\n    scrollerBordersX =\n      parseInt(borderLeftWidth, 10) + parseInt(borderRightWidth, 10)\n    scrollerPaddingTop = parseInt(paddingTop, 10)\n    scrollerPaddingBottom = parseInt(paddingBottom, 10)\n    scrollerPaddingLeft = parseInt(paddingLeft, 10)\n    scrollerPaddingRight = parseInt(paddingRight, 10)\n    yOffset = scrollTop\n    xOffset = scrollLeft\n  }\n\n  const cursorTop = cursorRect.top + yOffset - scrollerTop\n  const cursorLeft = cursorRect.left + xOffset - scrollerLeft\n\n  let x = xOffset\n  let y = yOffset\n\n  if (cursorLeft < xOffset) {\n    // selection to the left of viewport\n    x = cursorLeft - scrollerPaddingLeft\n  } else if (\n    cursorLeft + cursorRect.width + scrollerBordersX >\n    xOffset + width\n  ) {\n    // selection to the right of viewport\n    x = cursorLeft + scrollerBordersX + scrollerPaddingRight - width\n  }\n\n  if (cursorTop < yOffset) {\n    // selection above viewport\n    y = cursorTop - scrollerPaddingTop\n  } else if (\n    cursorTop + cursorRect.height + scrollerBordersY >\n    yOffset + height\n  ) {\n    // selection below viewport\n    y =\n      cursorTop +\n      scrollerBordersY +\n      scrollerPaddingBottom +\n      cursorRect.height -\n      height\n  }\n\n  if (isWindow) {\n    window.scrollTo(x, y)\n  } else {\n    scroller.scrollTop = y\n    scroller.scrollLeft = x\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default scrollToSelection\n","import Debug from 'debug'\nimport React from 'react'\nimport Types from 'prop-types'\nimport getWindow from 'get-window'\nimport logger from 'slate-dev-logger'\nimport throttle from 'lodash/throttle'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport Node from './node'\nimport findDOMRange from '../utils/find-dom-range'\nimport findRange from '../utils/find-range'\nimport scrollToSelection from '../utils/scroll-to-selection'\nimport {\n  IS_FIREFOX,\n  IS_IOS,\n  IS_ANDROID,\n  SUPPORTED_EVENTS,\n} from '../constants/environment'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:content')\n\n/**\n * Content.\n *\n * @type {Component}\n */\n\nclass Content extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    autoCorrect: Types.bool.isRequired,\n    children: Types.any.isRequired,\n    className: Types.string,\n    editor: Types.object.isRequired,\n    readOnly: Types.bool.isRequired,\n    role: Types.string,\n    spellCheck: Types.bool.isRequired,\n    style: Types.object,\n    tabIndex: Types.number,\n    tagName: Types.string,\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    style: {},\n    tagName: 'div',\n  }\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} props\n   */\n\n  constructor(props) {\n    super(props)\n    this.tmp = {}\n    this.tmp.key = 0\n    this.tmp.isUpdatingSelection = false\n\n    EVENT_HANDLERS.forEach(handler => {\n      this[handler] = event => {\n        this.onEvent(handler, event)\n      }\n    })\n  }\n\n  /**\n   * When the editor first mounts in the DOM we need to:\n   *\n   *   - Add native DOM event listeners.\n   *   - Update the selection, in case it starts focused.\n   */\n\n  componentDidMount = () => {\n    const window = getWindow(this.element)\n\n    window.document.addEventListener(\n      'selectionchange',\n      this.onNativeSelectionChange\n    )\n\n    // COMPAT: Restrict scope of `beforeinput` to mobile.\n    if ((IS_IOS || IS_ANDROID) && SUPPORTED_EVENTS.beforeinput) {\n      this.element.addEventListener('beforeinput', this.onNativeBeforeInput)\n    }\n\n    this.updateSelection()\n  }\n\n  /**\n   * When unmounting, remove DOM event listeners.\n   */\n\n  componentWillUnmount() {\n    const window = getWindow(this.element)\n\n    if (window) {\n      window.document.removeEventListener(\n        'selectionchange',\n        this.onNativeSelectionChange\n      )\n    }\n\n    // COMPAT: Restrict scope of `beforeinput` to mobile.\n    if ((IS_IOS || IS_ANDROID) && SUPPORTED_EVENTS.beforeinput) {\n      this.element.removeEventListener('beforeinput', this.onNativeBeforeInput)\n    }\n  }\n\n  /**\n   * On update, update the selection.\n   */\n\n  componentDidUpdate = () => {\n    this.updateSelection()\n  }\n\n  /**\n   * Update the native DOM selection to reflect the internal model.\n   */\n\n  updateSelection = () => {\n    const { editor } = this.props\n    const { value } = editor\n    const { selection } = value\n    const { isBackward } = selection\n    const window = getWindow(this.element)\n    const native = window.getSelection()\n    const { rangeCount, anchorNode } = native\n\n    // If both selections are blurred, do nothing.\n    if (!rangeCount && selection.isBlurred) return\n\n    // If the selection has been blurred, but is still inside the editor in the\n    // DOM, blur it manually.\n    if (selection.isBlurred) {\n      if (!this.isInEditor(anchorNode)) return\n      native.removeAllRanges()\n      this.element.blur()\n      debug('updateSelection', { selection, native })\n      return\n    }\n\n    // If the selection isn't set, do nothing.\n    if (selection.isUnset) return\n\n    // Otherwise, figure out which DOM nodes should be selected...\n    const current = !!rangeCount && native.getRangeAt(0)\n    const range = findDOMRange(selection, window)\n\n    if (!range) {\n      logger.error(\n        'Unable to find a native DOM range from the current selection.',\n        { selection }\n      )\n      return\n    }\n\n    const { startContainer, startOffset, endContainer, endOffset } = range\n\n    // If the new range matches the current selection, there is nothing to fix.\n    // COMPAT: The native `Range` object always has it's \"start\" first and \"end\"\n    // last in the DOM. It has no concept of \"backwards/forwards\", so we have\n    // to check both orientations here. (2017/10/31)\n    if (current) {\n      if (\n        (startContainer == current.startContainer &&\n          startOffset == current.startOffset &&\n          endContainer == current.endContainer &&\n          endOffset == current.endOffset) ||\n        (startContainer == current.endContainer &&\n          startOffset == current.endOffset &&\n          endContainer == current.startContainer &&\n          endOffset == current.startOffset)\n      ) {\n        return\n      }\n    }\n\n    // Otherwise, set the `isUpdatingSelection` flag and update the selection.\n    this.tmp.isUpdatingSelection = true\n    native.removeAllRanges()\n\n    // COMPAT: IE 11 does not support Selection.setBaseAndExtent\n    if (native.setBaseAndExtent) {\n      // COMPAT: Since the DOM range has no concept of backwards/forwards\n      // we need to check and do the right thing here.\n      if (isBackward) {\n        native.setBaseAndExtent(\n          range.endContainer,\n          range.endOffset,\n          range.startContainer,\n          range.startOffset\n        )\n      } else {\n        native.setBaseAndExtent(\n          range.startContainer,\n          range.startOffset,\n          range.endContainer,\n          range.endOffset\n        )\n      }\n    } else {\n      // COMPAT: IE 11 does not support Selection.extend, fallback to addRange\n      native.addRange(range)\n    }\n\n    // Scroll to the selection, in case it's out of view.\n    scrollToSelection(native)\n\n    // Then unset the `isUpdatingSelection` flag after a delay.\n    setTimeout(() => {\n      // COMPAT: In Firefox, it's not enough to create a range, you also need to\n      // focus the contenteditable element too. (2016/11/16)\n      if (IS_FIREFOX && this.element) this.element.focus()\n      this.tmp.isUpdatingSelection = false\n    })\n\n    debug('updateSelection', { selection, native })\n  }\n\n  /**\n   * The React ref method to set the root content element locally.\n   *\n   * @param {Element} element\n   */\n\n  ref = element => {\n    this.element = element\n  }\n\n  /**\n   * Check if an event `target` is fired from within the contenteditable\n   * element. This should be false for edits happening in non-contenteditable\n   * children, such as void nodes and other nested Slate editors.\n   *\n   * @param {Element} target\n   * @return {Boolean}\n   */\n\n  isInEditor = target => {\n    const { element } = this\n    // COMPAT: Text nodes don't have `isContentEditable` property. So, when\n    // `target` is a text node use its parent node for check.\n    const el = target.nodeType === 3 ? target.parentNode : target\n    return (\n      el.isContentEditable &&\n      (el === element || el.closest('[data-slate-editor]') === element)\n    )\n  }\n\n  /**\n   * On `event` with `handler`.\n   *\n   * @param {String} handler\n   * @param {Event} event\n   */\n\n  onEvent(handler, event) {\n    debug('onEvent', handler)\n\n    // COMPAT: Composition events can change the DOM out of under React, so we\n    // increment this key to ensure that a full re-render happens. (2017/10/16)\n    if (handler == 'onCompositionEnd') {\n      this.tmp.key++\n    }\n\n    // Ignore `onBlur`, `onFocus` and `onSelect` events generated\n    // programmatically while updating selection.\n    if (\n      this.tmp.isUpdatingSelection &&\n      (handler == 'onSelect' || handler == 'onBlur' || handler == 'onFocus')\n    ) {\n      return\n    }\n\n    // COMPAT: There are situations where a select event will fire with a new\n    // native selection that resolves to the same internal position. In those\n    // cases we don't need to trigger any changes, since our internal model is\n    // already up to date, but we do want to update the native selection again\n    // to make sure it is in sync. (2017/10/16)\n    if (handler == 'onSelect') {\n      const { editor } = this.props\n      const { value } = editor\n      const { selection } = value\n      const window = getWindow(event.target)\n      const native = window.getSelection()\n      const range = findRange(native, value)\n\n      if (range && range.equals(selection)) {\n        this.updateSelection()\n        return\n      }\n    }\n\n    // Don't handle drag and drop events coming from embedded editors.\n    if (\n      handler == 'onDragEnd' ||\n      handler == 'onDragEnter' ||\n      handler == 'onDragExit' ||\n      handler == 'onDragLeave' ||\n      handler == 'onDragOver' ||\n      handler == 'onDragStart' ||\n      handler == 'onDrop'\n    ) {\n      const { target } = event\n      const targetEditorNode = target.closest('[data-slate-editor]')\n      if (targetEditorNode !== this.element) return\n    }\n\n    // Some events require being in editable in the editor, so if the event\n    // target isn't, ignore them.\n    if (\n      handler == 'onBeforeInput' ||\n      handler == 'onBlur' ||\n      handler == 'onCompositionEnd' ||\n      handler == 'onCompositionStart' ||\n      handler == 'onCopy' ||\n      handler == 'onCut' ||\n      handler == 'onFocus' ||\n      handler == 'onInput' ||\n      handler == 'onKeyDown' ||\n      handler == 'onKeyUp' ||\n      handler == 'onPaste' ||\n      handler == 'onSelect'\n    ) {\n      if (!this.isInEditor(event.target)) return\n    }\n\n    this.props[handler](event)\n  }\n\n  /**\n   * On a native `beforeinput` event, use the additional range information\n   * provided by the event to manipulate text exactly as the browser would.\n   *\n   * This is currently only used on iOS and Android.\n   *\n   * @param {InputEvent} event\n   */\n\n  onNativeBeforeInput = event => {\n    if (this.props.readOnly) return\n    if (!this.isInEditor(event.target)) return\n\n    const [targetRange] = event.getTargetRanges()\n    if (!targetRange) return\n\n    const { editor } = this.props\n\n    switch (event.inputType) {\n      case 'deleteContentBackward': {\n        event.preventDefault()\n\n        const range = findRange(targetRange, editor.value)\n        editor.change(change => change.deleteAtRange(range))\n        break\n      }\n\n      case 'insertLineBreak': // intentional fallthru\n      case 'insertParagraph': {\n        event.preventDefault()\n        const range = findRange(targetRange, editor.value)\n\n        editor.change(change => {\n          if (change.value.isInVoid) {\n            change.collapseToStartOfNextText()\n          } else {\n            change.splitBlockAtRange(range)\n          }\n        })\n        break\n      }\n\n      case 'insertReplacementText': // intentional fallthru\n      case 'insertText': {\n        // `data` should have the text for the `insertText` input type and\n        // `dataTransfer` should have the text for the `insertReplacementText`\n        // input type, but Safari uses `insertText` for spell check replacements\n        // and sets `data` to `null`.\n        const text =\n          event.data == null\n            ? event.dataTransfer.getData('text/plain')\n            : event.data\n\n        if (text == null) return\n\n        event.preventDefault()\n\n        const { value } = editor\n        const { selection } = value\n        const range = findRange(targetRange, value)\n\n        editor.change(change => {\n          change.insertTextAtRange(range, text, selection.marks)\n\n          // If the text was successfully inserted, and the selection had marks\n          // on it, unset the selection's marks.\n          if (selection.marks && value.document != change.value.document) {\n            change.select({ marks: null })\n          }\n        })\n\n        break\n      }\n    }\n  }\n\n  /**\n   * On native `selectionchange` event, trigger the `onSelect` handler. This is\n   * needed to account for React's `onSelect` being non-standard and not firing\n   * until after a selection has been released. This causes issues in situations\n   * where another change happens while a selection is being made.\n   *\n   * @param {Event} event\n   */\n\n  onNativeSelectionChange = throttle(event => {\n    if (this.props.readOnly) return\n\n    const window = getWindow(event.target)\n    const { activeElement } = window.document\n    if (activeElement !== this.element) return\n\n    this.props.onSelect(event)\n  }, 100)\n\n  /**\n   * Render the editor content.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    const { props } = this\n    const { className, readOnly, editor, tabIndex, role, tagName } = props\n    const { value } = editor\n    const Container = tagName\n    const { document, selection } = value\n    const indexes = document.getSelectionIndexes(selection, selection.isFocused)\n    const children = document.nodes.toArray().map((child, i) => {\n      const isSelected = !!indexes && indexes.start <= i && i < indexes.end\n      return this.renderNode(child, isSelected)\n    })\n\n    const handlers = EVENT_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = this[handler]\n      return obj\n    }, {})\n\n    const style = {\n      // Prevent the default outline styles.\n      outline: 'none',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word',\n      // COMPAT: In iOS, a formatting menu with bold, italic and underline\n      // buttons is shown which causes our internal value to get out of sync in\n      // weird ways. This hides that. (2016/06/21)\n      ...(readOnly ? {} : { WebkitUserModify: 'read-write-plaintext-only' }),\n      // Allow for passed-in styles to override anything.\n      ...props.style,\n    }\n\n    // COMPAT: In Firefox, spellchecking can remove entire wrapping elements\n    // including inline ones like `<a>`, which is jarring for the user but also\n    // causes the DOM to get into an irreconcilable value. (2016/09/01)\n    const spellCheck = IS_FIREFOX ? false : props.spellCheck\n\n    debug('render', { props })\n\n    return (\n      <Container\n        {...handlers}\n        data-slate-editor\n        key={this.tmp.key}\n        ref={this.ref}\n        data-key={document.key}\n        contentEditable={readOnly ? null : true}\n        suppressContentEditableWarning\n        className={className}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n        onCompositionEnd={this.onCompositionEnd}\n        onCompositionStart={this.onCompositionStart}\n        onCopy={this.onCopy}\n        onCut={this.onCut}\n        onDragEnd={this.onDragEnd}\n        onDragOver={this.onDragOver}\n        onDragStart={this.onDragStart}\n        onDrop={this.onDrop}\n        onInput={this.onInput}\n        onKeyDown={this.onKeyDown}\n        onKeyUp={this.onKeyUp}\n        onPaste={this.onPaste}\n        onSelect={this.onSelect}\n        autoCorrect={props.autoCorrect ? 'on' : 'off'}\n        spellCheck={spellCheck}\n        style={style}\n        role={readOnly ? null : role || 'textbox'}\n        tabIndex={tabIndex}\n        // COMPAT: The Grammarly Chrome extension works by changing the DOM out\n        // from under `contenteditable` elements, which leads to weird behaviors\n        // so we have to disable it like this. (2017/04/24)\n        data-gramm={false}\n      >\n        {children}\n        {this.props.children}\n      </Container>\n    )\n  }\n\n  /**\n   * Render a `child` node of the document.\n   *\n   * @param {Node} child\n   * @param {Boolean} isSelected\n   * @return {Element}\n   */\n\n  renderNode = (child, isSelected) => {\n    const { editor, readOnly } = this.props\n    const { value } = editor\n    const { document, decorations } = value\n    const { stack } = editor\n    let decs = document.getDecorations(stack)\n    if (decorations) decs = decorations.concat(decs)\n    return (\n      <Node\n        block={null}\n        editor={editor}\n        decorations={decs}\n        isSelected={isSelected}\n        key={child.key}\n        node={child}\n        parent={document}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Mix in handler prop types.\n */\n\nEVENT_HANDLERS.forEach(handler => {\n  Content.propTypes[handler] = Types.func.isRequired\n})\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Content\n","import Base64 from 'slate-base64-serializer'\n\nimport getWindow from 'get-window'\nimport findDOMNode from './find-dom-node'\nimport { ZERO_WIDTH_SELECTOR, ZERO_WIDTH_ATTRIBUTE } from './find-point'\nimport { IS_CHROME, IS_SAFARI } from '../constants/environment'\n\n/**\n * Prepares a Slate document fragment to be copied to the clipboard.\n *\n * @param {Event} event\n * @param {Value} value\n * @param {Document} [fragment]\n */\n\nfunction cloneFragment(event, value, fragment = value.fragment) {\n  const window = getWindow(event.target)\n  const native = window.getSelection()\n  const { startKey, endKey, startText, endBlock, endInline } = value\n  const isVoidBlock = endBlock && endBlock.isVoid\n  const isVoidInline = endInline && endInline.isVoid\n  const isVoid = isVoidBlock || isVoidInline\n\n  // If the selection is collapsed, and it isn't inside a void node, abort.\n  if (native.isCollapsed && !isVoid) return\n\n  // Create a fake selection so that we can add a Base64-encoded copy of the\n  // fragment to the HTML, to decode on future pastes.\n  const encoded = Base64.serializeNode(fragment)\n  const range = native.getRangeAt(0)\n  let contents = range.cloneContents()\n  let attach = contents.childNodes[0]\n\n  // If the end node is a void node, we need to move the end of the range from\n  // the void node's spacer span, to the end of the void node's content.\n  if (isVoid) {\n    const r = range.cloneRange()\n    const n = isVoidBlock ? endBlock : endInline\n    const node = findDOMNode(n, window)\n    r.setEndAfter(node)\n    contents = r.cloneContents()\n    attach = contents.childNodes[contents.childNodes.length - 1].firstChild\n  }\n\n  // COMPAT: in Safari and Chrome when selecting a single marked word,\n  // marks are not preserved when copying.\n  // If the attatched is not void, and the startKey and endKey is the same,\n  // check if there is marks involved. If so, set the range start just before the\n  // startText node\n  if ((IS_CHROME || IS_SAFARI) && !isVoid && startKey === endKey) {\n    const hasMarks =\n      startText.characters\n        .slice(value.selection.anchorOffset, value.selection.focusOffset)\n        .filter(char => char.marks.size !== 0).size !== 0\n    if (hasMarks) {\n      const r = range.cloneRange()\n      const node = findDOMNode(startText, window)\n      r.setStartBefore(node)\n      contents = r.cloneContents()\n      attach = contents.childNodes[contents.childNodes.length - 1].firstChild\n    }\n  }\n\n  // Remove any zero-width space spans from the cloned DOM so that they don't\n  // show up elsewhere when pasted.\n  ;[].slice.call(contents.querySelectorAll(ZERO_WIDTH_SELECTOR)).forEach(zw => {\n    const isNewline = zw.getAttribute(ZERO_WIDTH_ATTRIBUTE) === 'n'\n    zw.textContent = isNewline ? '\\n' : ''\n  })\n\n  // COMPAT: In Chrome and Safari, if the last element in the selection to\n  // copy has `contenteditable=\"false\"` the copy will fail, and nothing will\n  // be put in the clipboard. So we remove them all. (2017/05/04)\n  if (IS_CHROME || IS_SAFARI) {\n    const els = [].slice.call(\n      contents.querySelectorAll('[contenteditable=\"false\"]')\n    )\n    els.forEach(el => el.removeAttribute('contenteditable'))\n  }\n\n  // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n  // in the HTML, and can be used for intra-Slate pasting. If it's a text\n  // node, wrap it in a `<span>` so we have something to set an attribute on.\n  if (attach.nodeType == 3) {\n    const span = window.document.createElement('span')\n\n    // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n    // then leading and trailing spaces will be ignored. (2017/09/21)\n    span.style.whiteSpace = 'pre'\n\n    span.appendChild(attach)\n    contents.appendChild(span)\n    attach = span\n  }\n\n  attach.setAttribute('data-slate-fragment', encoded)\n\n  // Add the phony content to the DOM, and select it, so it will be copied.\n  const editor = event.target.closest('[data-slate-editor]')\n  const div = window.document.createElement('div')\n  div.setAttribute('contenteditable', true)\n  div.style.position = 'absolute'\n  div.style.left = '-9999px'\n\n  // COMPAT: In Firefox, the viewport jumps to find the phony div, so it\n  // should be created at the current scroll offset with `style.top`.\n  // The box model attributes which can interact with 'top' are also reset.\n  div.style.border = '0px'\n  div.style.padding = '0px'\n  div.style.margin = '0px'\n  div.style.top = `${window.pageYOffset ||\n    window.document.documentElement.scrollTop}px`\n\n  div.appendChild(contents)\n  editor.appendChild(div)\n\n  // COMPAT: In Firefox, trying to use the terser `native.selectAllChildren`\n  // throws an error, so we use the older `range` equivalent. (2016/06/21)\n  const r = window.document.createRange()\n  r.selectNodeContents(div)\n  native.removeAllRanges()\n  native.addRange(r)\n\n  // Revert to the previous selection right after copying.\n  window.requestAnimationFrame(() => {\n    editor.removeChild(div)\n    native.removeAllRanges()\n    native.addRange(range)\n  })\n}\n\nexport default cloneFragment\n","/**\n * Find a Slate node from a DOM `element`.\n *\n * @param {Element} element\n * @param {Value} value\n * @return {Node|Null}\n */\n\nfunction findNode(element, value) {\n  const closest = element.closest('[data-key]')\n  if (!closest) return null\n\n  const key = closest.getAttribute('data-key')\n  if (!key) return null\n\n  const node = value.document.getNode(key)\n  return node || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findNode\n","import getWindow from 'get-window'\n\nimport { Range } from 'slate'\nimport findNode from './find-node'\nimport findRange from './find-range'\n\n/**\n * Get the target range from a DOM `event`.\n *\n * @param {Event} event\n * @param {Value} value\n * @return {Range}\n */\n\nfunction getEventRange(event, value) {\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const { x, y, target } = event\n  if (x == null || y == null) return null\n\n  const { document } = value\n  const node = findNode(target, value)\n  if (!node) return null\n\n  // If the drop target is inside a void node, move it into either the next or\n  // previous node, depending on which side the `x` and `y` coordinates are\n  // closest to.\n  if (node.isVoid) {\n    const rect = target.getBoundingClientRect()\n    const isPrevious =\n      node.object == 'inline'\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n    const text = node.getFirstText()\n    const range = Range.create()\n    return isPrevious\n      ? range.moveToEndOf(document.getPreviousText(text.key))\n      : range.moveToStartOf(document.getNextText(text.key))\n  }\n\n  // Else resolve a range from the caret position where the drop occured.\n  const window = getWindow(target)\n  let native\n\n  // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n  if (window.document.caretRangeFromPoint) {\n    native = window.document.caretRangeFromPoint(x, y)\n  } else {\n    const position = window.document.caretPositionFromPoint(x, y)\n    native = window.document.createRange()\n    native.setStart(position.offsetNode, position.offset)\n    native.setEnd(position.offsetNode, position.offset)\n  }\n\n  // Resolve a Slate range from the DOM range.\n  const range = findRange(native, value)\n  if (!range) return null\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventRange\n","/**\n * The transfer types that Slate recognizes.\n *\n * @type {Object}\n */\n\nconst TRANSFER_TYPES = {\n  FRAGMENT: 'application/x-slate-fragment',\n  HTML: 'text/html',\n  NODE: 'application/x-slate-node',\n  RICH: 'text/rtf',\n  TEXT: 'text/plain',\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default TRANSFER_TYPES\n","import Base64 from 'slate-base64-serializer'\n\nimport TRANSFER_TYPES from '../constants/transfer-types'\n\n/**\n * Transfer types.\n *\n * @type {String}\n */\n\nconst { FRAGMENT, HTML, NODE, RICH, TEXT } = TRANSFER_TYPES\n\n/**\n * Fragment matching regexp for HTML nodes.\n *\n * @type {RegExp}\n */\n\nconst FRAGMENT_MATCHER = / data-slate-fragment=\"([^\\s\"]+)\"/\n\n/**\n * Get the transfer data from an `event`.\n *\n * @param {Event} event\n * @return {Object}\n */\n\nfunction getEventTransfer(event) {\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n  let fragment = getType(transfer, FRAGMENT)\n  let node = getType(transfer, NODE)\n  const html = getType(transfer, HTML)\n  const rich = getType(transfer, RICH)\n  let text = getType(transfer, TEXT)\n  let files\n\n  // If there isn't a fragment, but there is HTML, check to see if the HTML is\n  // actually an encoded fragment.\n  if (!fragment && html && ~html.indexOf(' data-slate-fragment=\"')) {\n    const matches = FRAGMENT_MATCHER.exec(html)\n    const [full, encoded] = matches // eslint-disable-line no-unused-vars\n    if (encoded) fragment = encoded\n  }\n\n  // COMPAT: Edge doesn't handle custom data types\n  // These will be embedded in text/plain in this case (2017/7/12)\n  if (text) {\n    const embeddedTypes = getEmbeddedTypes(text)\n\n    if (embeddedTypes[FRAGMENT]) fragment = embeddedTypes[FRAGMENT]\n    if (embeddedTypes[NODE]) node = embeddedTypes[NODE]\n    if (embeddedTypes[TEXT]) text = embeddedTypes[TEXT]\n  }\n\n  // Decode a fragment or node if they exist.\n  if (fragment) fragment = Base64.deserializeNode(fragment)\n  if (node) node = Base64.deserializeNode(node)\n\n  // COMPAT: Edge sometimes throws 'NotSupportedError'\n  // when accessing `transfer.items` (2017/7/12)\n  try {\n    // Get and normalize files if they exist.\n    if (transfer.items && transfer.items.length) {\n      files = Array.from(transfer.items)\n        .map(item => (item.kind == 'file' ? item.getAsFile() : null))\n        .filter(exists => exists)\n    } else if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  } catch (err) {\n    if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  }\n\n  // Determine the type of the data.\n  const data = { files, fragment, html, node, rich, text }\n  data.type = getTransferType(data)\n  return data\n}\n\n/**\n * Takes text input, checks whether contains embedded data\n * and returns object with original text +/- additional data\n *\n * @param {String} text\n * @return {Object}\n */\n\nfunction getEmbeddedTypes(text) {\n  const prefix = 'SLATE-DATA-EMBED::'\n\n  if (text.substring(0, prefix.length) != prefix) {\n    return { TEXT: text }\n  }\n\n  // Attempt to parse, if fails then just standard text/plain\n  // Otherwise, already had data embedded\n  try {\n    return JSON.parse(text.substring(prefix.length))\n  } catch (err) {\n    throw new Error('Unable to parse custom Slate drag event data.')\n  }\n}\n\n/**\n * Get the type of a transfer from its `data`.\n *\n * @param {Object} data\n * @return {String}\n */\n\nfunction getTransferType(data) {\n  if (data.fragment) return 'fragment'\n  if (data.node) return 'node'\n\n  // COMPAT: Microsoft Word adds an image of the selected text to the data.\n  // Since files are preferred over HTML or text, this would cause the type to\n  // be considered `files`. But it also adds rich text data so we can check\n  // for that and properly set the type to `html` or `text`. (2016/11/21)\n  if (data.rich && data.html) return 'html'\n  if (data.rich && data.text) return 'text'\n\n  if (data.files && data.files.length) return 'files'\n  if (data.html) return 'html'\n  if (data.text) return 'text'\n  return 'unknown'\n}\n\n/**\n * Get one of types `TYPES.FRAGMENT`, `TYPES.NODE`, `text/html`, `text/rtf` or\n * `text/plain` from transfers's `data` if possible, otherwise return null.\n *\n * @param {Object} transfer\n * @param {String} type\n * @return {String}\n */\n\nfunction getType(transfer, type) {\n  if (!transfer.types || !transfer.types.length) {\n    // COMPAT: In IE 11, there is no `types` field but `getData('Text')`\n    // is supported`. (2017/06/23)\n    return type == TEXT ? transfer.getData('Text') || null : null\n  }\n\n  // COMPAT: In Edge, transfer.types doesn't respond to `indexOf`. (2017/10/25)\n  const types = Array.from(transfer.types)\n\n  return types.indexOf(type) !== -1 ? transfer.getData(type) || null : null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventTransfer\n","import TRANSFER_TYPES from '../constants/transfer-types'\n\n/**\n * The default plain text transfer type.\n *\n * @type {String}\n */\n\nconst { TEXT } = TRANSFER_TYPES\n\n/**\n * Set data with `type` and `content` on an `event`.\n *\n * COMPAT: In Edge, custom types throw errors, so embed all non-standard\n * types in text/plain compound object. (2017/7/12)\n *\n * @param {Event} event\n * @param {String} type\n * @param {String} content\n */\n\nfunction setEventTransfer(event, type, content) {\n  const mime = TRANSFER_TYPES[type.toUpperCase()]\n\n  if (!mime) {\n    throw new Error(`Cannot set unknown transfer type \"${mime}\".`)\n  }\n\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n\n  try {\n    transfer.setData(mime, content)\n  } catch (err) {\n    const prefix = 'SLATE-DATA-EMBED::'\n    const text = transfer.getData(TEXT)\n    let obj = {}\n\n    // If the existing plain text data is prefixed, it's Slate JSON data.\n    if (text.substring(0, prefix.length) === prefix) {\n      try {\n        obj = JSON.parse(text.substring(prefix.length))\n      } catch (e) {\n        throw new Error(\n          'Failed to parse Slate data from `DataTransfer` object.'\n        )\n      }\n    } else {\n      // Otherwise, it's just set it as is.\n      obj[TEXT] = text\n    }\n\n    obj[mime] = content\n    const string = `${prefix}${JSON.stringify(obj)}`\n    transfer.setData(TEXT, string)\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default setEventTransfer\n","import Base64 from 'slate-base64-serializer'\nimport Debug from 'debug'\nimport Plain from 'slate-plain-serializer'\nimport React from 'react'\nimport getWindow from 'get-window'\nimport { Block, Inline, Text } from 'slate'\n\nimport { IS_IOS } from '../constants/environment'\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport HOTKEYS from '../constants/hotkeys'\nimport Content from '../components/content'\nimport cloneFragment from '../utils/clone-fragment'\nimport findDOMNode from '../utils/find-dom-node'\nimport findNode from '../utils/find-node'\nimport findPoint from '../utils/find-point'\nimport findRange from '../utils/find-range'\nimport getEventRange from '../utils/get-event-range'\nimport getEventTransfer from '../utils/get-event-transfer'\nimport setEventTransfer from '../utils/set-event-transfer'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:after')\n\n/**\n * The after plugin.\n *\n * @return {Object}\n */\n\nfunction AfterPlugin() {\n  let isDraggingInternally = null\n\n  /**\n   * On before input, correct any browser inconsistencies.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBeforeInput(event, change, editor) {\n    debug('onBeforeInput', { event })\n\n    event.preventDefault()\n    change.insertText(event.data)\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBlur(event, change, editor) {\n    debug('onBlur', { event })\n\n    change.blur()\n  }\n\n  /**\n   * On click.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onClick(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    const { value } = change\n    const { document } = value\n    const node = findNode(event.target, value)\n    const isVoid = node && (node.isVoid || document.hasVoidParent(node.key))\n\n    if (isVoid) {\n      // COMPAT: In Chrome & Safari, selections that are at the zero offset of\n      // an inline node will be automatically replaced to be at the last offset\n      // of a previous inline node, which screws us up, so we always want to set\n      // it to the end of the node. (2016/11/29)\n      change.focus().collapseToEndOf(node)\n    }\n\n    debug('onClick', { event })\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCopy(event, change, editor) {\n    debug('onCopy', { event })\n\n    cloneFragment(event, change.value)\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCut(event, change, editor) {\n    debug('onCut', { event })\n\n    cloneFragment(event, change.value)\n    const window = getWindow(event.target)\n\n    // Once the fake cut content has successfully been added to the clipboard,\n    // delete the content in the current selection.\n    window.requestAnimationFrame(() => {\n      // If user cuts a void block node or a void inline node,\n      // manually removes it since selection is collapsed in this case.\n      const { value } = change\n      const { endBlock, endInline, isCollapsed } = value\n      const isVoidBlock = endBlock && endBlock.isVoid && isCollapsed\n      const isVoidInline = endInline && endInline.isVoid && isCollapsed\n\n      if (isVoidBlock) {\n        editor.change(c => c.removeNodeByKey(endBlock.key))\n      } else if (isVoidInline) {\n        editor.change(c => c.removeNodeByKey(endInline.key))\n      } else {\n        editor.change(c => c.delete())\n      }\n    })\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragEnd(event, change, editor) {\n    debug('onDragEnd', { event })\n\n    isDraggingInternally = null\n  }\n\n  /**\n   * On drag over.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragOver(event, change, editor) {\n    debug('onDragOver', { event })\n\n    isDraggingInternally = false\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragStart(event, change, editor) {\n    debug('onDragStart', { event })\n\n    isDraggingInternally = true\n\n    const { value } = change\n    const { document } = value\n    const node = findNode(event.target, value)\n    const isVoid = node && (node.isVoid || document.hasVoidParent(node.key))\n\n    if (isVoid) {\n      const encoded = Base64.serializeNode(node, { preserveKeys: true })\n      setEventTransfer(event, 'node', encoded)\n    } else {\n      const { fragment } = value\n      const encoded = Base64.serializeNode(fragment)\n      setEventTransfer(event, 'fragment', encoded)\n    }\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDrop(event, change, editor) {\n    debug('onDrop', { event })\n\n    const { value } = change\n    const { document, selection } = value\n    const window = getWindow(event.target)\n    let target = getEventRange(event, value)\n    if (!target) return\n\n    const transfer = getEventTransfer(event)\n    const { type, fragment, node, text } = transfer\n\n    change.focus()\n\n    // If the drag is internal and the target is after the selection, it\n    // needs to account for the selection's content being deleted.\n    if (\n      isDraggingInternally &&\n      selection.endKey == target.endKey &&\n      selection.endOffset < target.endOffset\n    ) {\n      target = target.move(\n        selection.startKey == selection.endKey\n          ? 0 - selection.endOffset + selection.startOffset\n          : 0 - selection.endOffset\n      )\n    }\n\n    if (isDraggingInternally) {\n      change.delete()\n    }\n\n    change.select(target)\n\n    if (type == 'text' || type == 'html') {\n      const { anchorKey } = target\n      let hasVoidParent = document.hasVoidParent(anchorKey)\n\n      if (hasVoidParent) {\n        let n = document.getNode(anchorKey)\n\n        while (hasVoidParent) {\n          n = document.getNextText(n.key)\n          if (!n) break\n          hasVoidParent = document.hasVoidParent(n.key)\n        }\n\n        if (n) change.collapseToStartOf(n)\n      }\n\n      if (text) {\n        text.split('\\n').forEach((line, i) => {\n          if (i > 0) change.splitBlock()\n          change.insertText(line)\n        })\n      }\n    }\n\n    if (type == 'fragment') {\n      change.insertFragment(fragment)\n    }\n\n    if (type == 'node' && Block.isBlock(node)) {\n      change.insertBlock(node.regenerateKey()).removeNodeByKey(node.key)\n    }\n\n    if (type == 'node' && Inline.isInline(node)) {\n      change.insertInline(node.regenerateKey()).removeNodeByKey(node.key)\n    }\n\n    // COMPAT: React's onSelect event breaks after an onDrop event\n    // has fired in a node: https://github.com/facebook/react/issues/11379.\n    // Until this is fixed in React, we dispatch a mouseup event on that\n    // DOM node, since that will make it go back to normal.\n    const focusNode = document.getNode(target.focusKey)\n    const el = findDOMNode(focusNode, window)\n    if (!el) return\n\n    el.dispatchEvent(\n      new MouseEvent('mouseup', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n      })\n    )\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} eventvent\n   * @param {Change} change\n   */\n\n  function onInput(event, change, editor) {\n    debug('onInput', { event })\n\n    const window = getWindow(event.target)\n    const { value } = change\n\n    // Get the selection point.\n    const native = window.getSelection()\n    const { anchorNode, anchorOffset } = native\n    const point = findPoint(anchorNode, anchorOffset, value)\n    if (!point) return\n\n    // Get the text node and leaf in question.\n    const { document, selection } = value\n    const node = document.getDescendant(point.key)\n    const block = document.getClosestBlock(node.key)\n    const leaves = node.getLeaves()\n    const lastText = block.getLastText()\n    const lastLeaf = leaves.last()\n    let start = 0\n    let end = 0\n\n    const leaf =\n      leaves.find(r => {\n        start = end\n        end += r.text.length\n        if (end >= point.offset) return true\n      }) || lastLeaf\n\n    // Get the text information.\n    const { text } = leaf\n    let { textContent } = anchorNode\n    const isLastText = node == lastText\n    const isLastLeaf = leaf == lastLeaf\n    const lastChar = textContent.charAt(textContent.length - 1)\n\n    // COMPAT: If this is the last leaf, and the DOM text ends in a new line,\n    // we will have added another new line in <Leaf>'s render method to account\n    // for browsers collapsing a single trailing new lines, so remove it.\n    if (isLastText && isLastLeaf && lastChar == '\\n') {\n      textContent = textContent.slice(0, -1)\n    }\n\n    // If the text is no different, abort.\n    if (textContent == text) return\n\n    // Determine what the selection should be after changing the text.\n    const delta = textContent.length - text.length\n    const corrected = selection.collapseToEnd().move(delta)\n    const entire = selection\n      .moveAnchorTo(point.key, start)\n      .moveFocusTo(point.key, end)\n\n    // Change the current value to have the leaf's text replaced.\n    change.insertTextAtRange(entire, textContent, leaf.marks).select(corrected)\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onKeyDown(event, change, editor) {\n    debug('onKeyDown', { event })\n\n    const { value } = change\n\n    // COMPAT: In iOS, some of these hotkeys are handled in the\n    // `onNativeBeforeInput` handler of the `<Content>` component in order to\n    // preserve native autocorrect behavior, so they shouldn't be handled here.\n    if (HOTKEYS.SPLIT_BLOCK(event) && !IS_IOS) {\n      return value.isInVoid\n        ? change.collapseToStartOfNextText()\n        : change.splitBlock()\n    }\n\n    if (HOTKEYS.DELETE_CHAR_BACKWARD(event) && !IS_IOS) {\n      return change.deleteCharBackward()\n    }\n\n    if (HOTKEYS.DELETE_CHAR_FORWARD(event) && !IS_IOS) {\n      return change.deleteCharForward()\n    }\n\n    if (HOTKEYS.DELETE_LINE_BACKWARD(event)) {\n      return change.deleteLineBackward()\n    }\n\n    if (HOTKEYS.DELETE_LINE_FORWARD(event)) {\n      return change.deleteLineForward()\n    }\n\n    if (HOTKEYS.DELETE_WORD_BACKWARD(event)) {\n      return change.deleteWordBackward()\n    }\n\n    if (HOTKEYS.DELETE_WORD_FORWARD(event)) {\n      return change.deleteWordForward()\n    }\n\n    if (HOTKEYS.REDO(event)) {\n      return change.redo()\n    }\n\n    if (HOTKEYS.UNDO(event)) {\n      return change.undo()\n    }\n\n    // COMPAT: Certain browsers don't handle the selection updates properly. In\n    // Chrome, the selection isn't properly extended. And in Firefox, the\n    // selection isn't properly collapsed. (2017/10/17)\n    if (HOTKEYS.COLLAPSE_LINE_BACKWARD(event)) {\n      event.preventDefault()\n      return change.collapseLineBackward()\n    }\n\n    if (HOTKEYS.COLLAPSE_LINE_FORWARD(event)) {\n      event.preventDefault()\n      return change.collapseLineForward()\n    }\n\n    if (HOTKEYS.EXTEND_LINE_BACKWARD(event)) {\n      event.preventDefault()\n      return change.extendLineBackward()\n    }\n\n    if (HOTKEYS.EXTEND_LINE_FORWARD(event)) {\n      event.preventDefault()\n      return change.extendLineForward()\n    }\n\n    // COMPAT: If a void node is selected, or a zero-width text node adjacent to\n    // an inline is selected, we need to handle these hotkeys manually because\n    // browsers won't know what to do.\n    if (HOTKEYS.COLLAPSE_CHAR_BACKWARD(event)) {\n      const { document, isInVoid, previousText, startText } = value\n      const isPreviousInVoid =\n        previousText && document.hasVoidParent(previousText.key)\n      if (isInVoid || isPreviousInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.collapseCharBackward()\n      }\n    }\n\n    if (HOTKEYS.COLLAPSE_CHAR_FORWARD(event)) {\n      const { document, isInVoid, nextText, startText } = value\n      const isNextInVoid = nextText && document.hasVoidParent(nextText.key)\n      if (isInVoid || isNextInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.collapseCharForward()\n      }\n    }\n\n    if (HOTKEYS.EXTEND_CHAR_BACKWARD(event)) {\n      const { document, isInVoid, previousText, startText } = value\n      const isPreviousInVoid =\n        previousText && document.hasVoidParent(previousText.key)\n      if (isInVoid || isPreviousInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.extendCharBackward()\n      }\n    }\n\n    if (HOTKEYS.EXTEND_CHAR_FORWARD(event)) {\n      const { document, isInVoid, nextText, startText } = value\n      const isNextInVoid = nextText && document.hasVoidParent(nextText.key)\n      if (isInVoid || isNextInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.extendCharForward()\n      }\n    }\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onPaste(event, change, editor) {\n    debug('onPaste', { event })\n\n    const transfer = getEventTransfer(event)\n    const { type, fragment, text } = transfer\n\n    if (type == 'fragment') {\n      change.insertFragment(fragment)\n    }\n\n    if (type == 'text' || type == 'html') {\n      if (!text) return\n      const { value } = change\n      const { document, selection, startBlock } = value\n      if (startBlock.isVoid) return\n\n      const defaultBlock = startBlock\n      const defaultMarks = document.getInsertMarksAtRange(selection)\n      const frag = Plain.deserialize(text, { defaultBlock, defaultMarks })\n        .document\n      change.insertFragment(frag)\n    }\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onSelect(event, change, editor) {\n    debug('onSelect', { event })\n\n    const window = getWindow(event.target)\n    const { value } = change\n    const { document } = value\n    const native = window.getSelection()\n\n    // If there are no ranges, the editor was blurred natively.\n    if (!native.rangeCount) {\n      change.blur()\n      return\n    }\n\n    // Otherwise, determine the Slate selection from the native one.\n    let range = findRange(native, value)\n    if (!range) return\n\n    const { anchorKey, anchorOffset, focusKey, focusOffset } = range\n    const anchorText = document.getNode(anchorKey)\n    const focusText = document.getNode(focusKey)\n    const anchorInline = document.getClosestInline(anchorKey)\n    const focusInline = document.getClosestInline(focusKey)\n    const focusBlock = document.getClosestBlock(focusKey)\n    const anchorBlock = document.getClosestBlock(anchorKey)\n\n    // COMPAT: If the anchor point is at the start of a non-void, and the\n    // focus point is inside a void node with an offset that isn't `0`, set\n    // the focus offset to `0`. This is due to void nodes <span>'s being\n    // positioned off screen, resulting in the offset always being greater\n    // than `0`. Since we can't know what it really should be, and since an\n    // offset of `0` is less destructive because it creates a hanging\n    // selection, go with `0`. (2017/09/07)\n    if (\n      anchorBlock &&\n      !anchorBlock.isVoid &&\n      anchorOffset == 0 &&\n      focusBlock &&\n      focusBlock.isVoid &&\n      focusOffset != 0\n    ) {\n      range = range.set('focusOffset', 0)\n    }\n\n    // COMPAT: If the selection is at the end of a non-void inline node, and\n    // there is a node after it, put it in the node after instead. This\n    // standardizes the behavior, since it's indistinguishable to the user.\n    if (\n      anchorInline &&\n      !anchorInline.isVoid &&\n      anchorOffset == anchorText.text.length\n    ) {\n      const block = document.getClosestBlock(anchorKey)\n      const next = block.getNextText(anchorKey)\n      if (next) range = range.moveAnchorTo(next.key, 0)\n    }\n\n    if (\n      focusInline &&\n      !focusInline.isVoid &&\n      focusOffset == focusText.text.length\n    ) {\n      const block = document.getClosestBlock(focusKey)\n      const next = block.getNextText(focusKey)\n      if (next) range = range.moveFocusTo(next.key, 0)\n    }\n\n    range = range.normalize(document)\n    change.select(range)\n  }\n\n  /**\n   * Render editor.\n   *\n   * @param {Object} props\n   * @param {Editor} editor\n   * @return {Object}\n   */\n\n  function renderEditor(props, editor) {\n    const handlers = EVENT_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = editor[handler]\n      return obj\n    }, {})\n\n    return (\n      <Content\n        {...handlers}\n        autoCorrect={props.autoCorrect}\n        className={props.className}\n        children={props.children}\n        editor={editor}\n        readOnly={props.readOnly}\n        role={props.role}\n        spellCheck={props.spellCheck}\n        style={props.style}\n        tabIndex={props.tabIndex}\n        tagName={props.tagName}\n      />\n    )\n  }\n\n  /**\n   * Render node.\n   *\n   * @param {Object} props\n   * @return {Element}\n   */\n\n  function renderNode(props) {\n    const { attributes, children, node } = props\n    if (node.object != 'block' && node.object != 'inline') return\n    const Tag = node.object == 'block' ? 'div' : 'span'\n    const style = { position: 'relative' }\n    return (\n      <Tag {...attributes} style={style}>\n        {children}\n      </Tag>\n    )\n  }\n\n  /**\n   * Render placeholder.\n   *\n   * @param {Object} props\n   * @return {Element}\n   */\n\n  function renderPlaceholder(props) {\n    const { editor, node } = props\n    if (!editor.props.placeholder) return\n    if (editor.state.isComposing) return\n    if (node.object != 'block') return\n    if (!Text.isTextList(node.nodes)) return\n    if (node.text != '') return\n    if (editor.value.document.getBlocks().size > 1) return\n\n    const style = {\n      pointerEvents: 'none',\n      display: 'inline-block',\n      width: '0',\n      maxWidth: '100%',\n      whiteSpace: 'nowrap',\n      opacity: '0.333',\n    }\n\n    return (\n      <span contentEditable={false} style={style}>\n        {editor.props.placeholder}\n      </span>\n    )\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onClick,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onInput,\n    onKeyDown,\n    onPaste,\n    onSelect,\n    renderEditor,\n    renderNode,\n    renderPlaceholder,\n  }\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default AfterPlugin\n","import Debug from 'debug'\nimport getWindow from 'get-window'\nimport { findDOMNode } from 'react-dom'\n\nimport HOTKEYS from '../constants/hotkeys'\nimport {\n  IS_FIREFOX,\n  IS_IOS,\n  IS_ANDROID,\n  SUPPORTED_EVENTS,\n} from '../constants/environment'\nimport findNode from '../utils/find-node'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:before')\n\n/**\n * The core before plugin.\n *\n * @return {Object}\n */\n\nfunction BeforePlugin() {\n  let activeElement = null\n  let compositionCount = 0\n  let isComposing = false\n  let isCopying = false\n  let isDragging = false\n\n  /**\n   * On before input.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBeforeInput(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    // COMPAT: React's `onBeforeInput` synthetic event is based on the native\n    // `keypress` and `textInput` events. In browsers that support the native\n    // `beforeinput` event, we instead use that event to trigger text insertion,\n    // since it provides more useful information about the range being affected\n    // and also preserves compatibility with iOS autocorrect, which would be\n    // broken if we called `preventDefault()` on React's synthetic event here.\n    // Since native `onbeforeinput` mainly benefits autocorrect and spellcheck\n    // for mobile, on desktop it brings IME issue, limit its scope for now.\n    if ((IS_IOS || IS_ANDROID) && SUPPORTED_EVENTS.beforeinput) return true\n\n    debug('onBeforeInput', { event })\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBlur(event, change, editor) {\n    if (isCopying) return true\n    if (editor.props.readOnly) return true\n\n    const { value } = change\n    const { relatedTarget, target } = event\n    const window = getWindow(target)\n\n    // COMPAT: If the current `activeElement` is still the previous one, this is\n    // due to the window being blurred when the tab itself becomes unfocused, so\n    // we want to abort early to allow to editor to stay focused when the tab\n    // becomes focused again.\n    if (activeElement == window.document.activeElement) return true\n\n    // COMPAT: The `relatedTarget` can be null when the new focus target is not\n    // a \"focusable\" element (eg. a `<div>` without `tabindex` set).\n    if (relatedTarget) {\n      const el = findDOMNode(editor)\n\n      // COMPAT: The event should be ignored if the focus is returning to the\n      // editor from an embedded editable element (eg. an <input> element inside\n      // a void node).\n      if (relatedTarget == el) return true\n\n      // COMPAT: The event should be ignored if the focus is moving from the\n      // editor to inside a void node's spacer element.\n      if (relatedTarget.hasAttribute('data-slate-spacer')) return true\n\n      // COMPAT: The event should be ignored if the focus is moving to a non-\n      // editable section of an element that isn't a void node (eg. a list item\n      // of the check list example).\n      const node = findNode(relatedTarget, value)\n      if (el.contains(relatedTarget) && node && !node.isVoid) return true\n    }\n\n    debug('onBlur', { event })\n  }\n\n  /**\n   * On change.\n   *\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onChange(change, editor) {\n    const { value } = change\n\n    // If the value's schema isn't the editor's schema, update it. This can\n    // happen on the initialization of the editor, or if the schema changes.\n    // This change isn't save into history since only schema is updated.\n    if (value.schema != editor.schema) {\n      change.setValue({ schema: editor.schema }, { save: false }).normalize()\n    }\n\n    debug('onChange')\n  }\n\n  /**\n   * On composition end.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCompositionEnd(event, change, editor) {\n    const n = compositionCount\n\n    // The `count` check here ensures that if another composition starts\n    // before the timeout has closed out this one, we will abort unsetting the\n    // `isComposing` flag, since a composition is still in affect.\n    window.requestAnimationFrame(() => {\n      if (compositionCount > n) return\n      isComposing = false\n\n      // HACK: we need to re-render the editor here so that it will update its\n      // placeholder in case one is currently rendered. This should be handled\n      // differently ideally, in a less invasive way?\n      editor.setState({ isComposing: false })\n    })\n\n    debug('onCompositionEnd', { event })\n  }\n\n  /**\n   * On composition start.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCompositionStart(event, change, editor) {\n    isComposing = true\n    compositionCount++\n\n    // HACK: we need to re-render the editor here so that it will update its\n    // placeholder in case one is currently rendered. This should be handled\n    // differently ideally, in a less invasive way?\n    editor.setState({ isComposing: true })\n\n    debug('onCompositionStart', { event })\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCopy(event, change, editor) {\n    const window = getWindow(event.target)\n    isCopying = true\n    window.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCopy', { event })\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCut(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    const window = getWindow(event.target)\n    isCopying = true\n    window.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCut', { event })\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragEnd(event, change, editor) {\n    isDragging = false\n\n    debug('onDragEnd', { event })\n  }\n\n  /**\n   * On drag enter.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragEnter(event, change, editor) {\n    debug('onDragEnter', { event })\n  }\n\n  /**\n   * On drag exit.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragExit(event, change, editor) {\n    debug('onDragExit', { event })\n  }\n\n  /**\n   * On drag leave.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragLeave(event, change, editor) {\n    debug('onDragLeave', { event })\n  }\n\n  /**\n   * On drag over.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragOver(event, change, editor) {\n    // If the target is inside a void node, and only in this case,\n    // call `preventDefault` to signal that drops are allowed.\n    // When the target is editable, dropping is already allowed by\n    // default, and calling `preventDefault` hides the cursor.\n    const node = findNode(event.target, editor.value)\n    if (node.isVoid) event.preventDefault()\n\n    // If a drag is already in progress, don't do this again.\n    if (isDragging) return true\n\n    isDragging = true\n    event.nativeEvent.dataTransfer.dropEffect = 'move'\n\n    debug('onDragOver', { event })\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragStart(event, change, editor) {\n    isDragging = true\n\n    debug('onDragStart', { event })\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDrop(event, change, editor) {\n    // Nothing happens in read-only mode.\n    if (editor.props.readOnly) return true\n\n    // Prevent default so the DOM's value isn't corrupted.\n    event.preventDefault()\n\n    debug('onDrop', { event })\n  }\n\n  /**\n   * On focus.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onFocus(event, change, editor) {\n    if (isCopying) return true\n    if (editor.props.readOnly) return true\n\n    const el = findDOMNode(editor)\n\n    // Save the new `activeElement`.\n    const window = getWindow(event.target)\n    activeElement = window.document.activeElement\n\n    // COMPAT: If the editor has nested editable elements, the focus can go to\n    // those elements. In Firefox, this must be prevented because it results in\n    // issues with keyboard navigation. (2017/03/30)\n    if (IS_FIREFOX && event.target != el) {\n      el.focus()\n      return true\n    }\n\n    debug('onFocus', { event })\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onInput(event, change, editor) {\n    if (isComposing) return true\n    if (change.value.isBlurred) return true\n\n    debug('onInput', { event })\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onKeyDown(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    // When composing, we need to prevent all hotkeys from executing while\n    // typing. However, certain characters also move the selection before\n    // we're able to handle it, so prevent their default behavior.\n    if (isComposing) {\n      if (HOTKEYS.COMPOSING(event)) event.preventDefault()\n      return true\n    }\n\n    // Certain hotkeys have native behavior in contenteditable elements which\n    // will cause our value to be out of sync, so prevent them.\n    if (HOTKEYS.CONTENTEDITABLE(event) && !IS_IOS) {\n      event.preventDefault()\n    }\n\n    debug('onKeyDown', { event })\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onPaste(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    // Prevent defaults so the DOM state isn't corrupted.\n    event.preventDefault()\n\n    debug('onPaste', { event })\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onSelect(event, change, editor) {\n    if (isCopying) return true\n    if (isComposing) return true\n    if (editor.props.readOnly) return true\n\n    // Save the new `activeElement`.\n    const window = getWindow(event.target)\n    activeElement = window.document.activeElement\n\n    debug('onSelect', { event })\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onChange,\n    onCompositionEnd,\n    onCompositionStart,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragEnter,\n    onDragExit,\n    onDragLeave,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onFocus,\n    onInput,\n    onKeyDown,\n    onPaste,\n    onSelect,\n  }\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default BeforePlugin\n","/**\n * Noop.\n *\n * @return {Void}\n */\n\nfunction noop() {}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default noop\n","import Debug from 'debug'\nimport Portal from 'react-portal'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\nimport logger from 'slate-dev-logger'\nimport { Schema, Stack } from 'slate'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport PLUGINS_PROPS from '../constants/plugin-props'\nimport AfterPlugin from '../plugins/after'\nimport BeforePlugin from '../plugins/before'\nimport noop from '../utils/noop'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:editor')\n\n/**\n * Editor.\n *\n * @type {Component}\n */\n\nclass Editor extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    autoCorrect: Types.bool,\n    autoFocus: Types.bool,\n    className: Types.string,\n    onChange: Types.func,\n    placeholder: Types.any,\n    plugins: Types.array,\n    readOnly: Types.bool,\n    role: Types.string,\n    schema: Types.object,\n    spellCheck: Types.bool,\n    style: Types.object,\n    tabIndex: Types.number,\n    value: SlateTypes.value.isRequired,\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    autoFocus: false,\n    autoCorrect: true,\n    onChange: noop,\n    plugins: [],\n    readOnly: false,\n    schema: {},\n    spellCheck: true,\n  }\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} props\n   */\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.tmp = {}\n    this.tmp.updates = 0\n    this.tmp.resolves = 0\n\n    // Resolve the plugins and create a stack and schema from them.\n    const plugins = this.resolvePlugins(props.plugins, props.schema)\n    const stack = Stack.create({ plugins })\n    const schema = Schema.create({ plugins })\n    this.state.schema = schema\n    this.state.stack = stack\n\n    // Run `onChange` on the passed-in value because we need to ensure that it\n    // is normalized, and queue the resulting change.\n    const change = props.value.change()\n    stack.run('onChange', change, this)\n    this.queueChange(change)\n    this.state.value = change.value\n\n    // Create a bound event handler for each event.\n    EVENT_HANDLERS.forEach(handler => {\n      this[handler] = (...args) => {\n        this.onEvent(handler, ...args)\n      }\n    })\n  }\n\n  /**\n   * When the `props` are updated, create a new `Stack` if necessary and run\n   * `onChange` to ensure the value is normalized.\n   *\n   * @param {Object} props\n   */\n\n  componentWillReceiveProps = props => {\n    let { schema, stack } = this\n\n    // Increment the updates counter as a baseline.\n    this.tmp.updates++\n\n    // If the plugins or the schema have changed, we need to re-resolve the\n    // plugins, since it will result in a new stack and new validations.\n    if (\n      props.plugins != this.props.plugins ||\n      props.schema != this.props.schema\n    ) {\n      const plugins = this.resolvePlugins(props.plugins, props.schema)\n      stack = Stack.create({ plugins })\n      schema = Schema.create({ plugins })\n      this.setState({ schema, stack })\n\n      // Increment the resolves counter.\n      this.tmp.resolves++\n\n      // If we've resolved a few times already, and it's exactly in line with\n      // the updates, then warn the user that they may be doing something wrong.\n      if (this.tmp.resolves > 5 && this.tmp.resolves == this.tmp.updates) {\n        logger.warn(\n          'A Slate <Editor> is re-resolving `props.plugins` or `props.schema` on each update, which leads to poor performance. This is often due to passing in a new `schema` or `plugins` prop with each render by declaring them inline in your render function. Do not do this!'\n        )\n      }\n    }\n\n    // Run `onChange` on the passed-in value because we need to ensure that it\n    // is normalized, and queue the resulting change.\n    const change = props.value.change()\n    stack.run('onChange', change, this)\n    this.queueChange(change)\n    this.setState({ value: change.value })\n  }\n\n  /**\n   * When the component first mounts, flush any temporary changes,\n   * and then, focus the editor if `autoFocus` is set.\n   */\n\n  componentDidMount = () => {\n    this.flushChange()\n\n    if (this.props.autoFocus) {\n      this.focus()\n    }\n  }\n\n  /**\n   * When the component updates, flush any temporary change.\n   */\n\n  componentDidUpdate = () => {\n    this.flushChange()\n  }\n\n  /**\n   * Queue a `change` object, to be able to flush it later. This is required for\n   * when a change needs to be applied to the value, but because of the React\n   * lifecycle we can't apply that change immediately. So we cache it here and\n   * later can call `this.flushChange()` to flush it.\n   *\n   * @param {Change} change\n   */\n\n  queueChange = change => {\n    if (change.operations.size) {\n      debug('queueChange', { change })\n      this.tmp.change = change\n    }\n  }\n\n  /**\n   * Flush a temporarily stored `change` object, for when a change needed to be\n   * made but couldn't because of React's lifecycle.\n   */\n\n  flushChange = () => {\n    const { change } = this.tmp\n\n    if (change) {\n      debug('flushChange', { change })\n      delete this.tmp.change\n      this.props.onChange(change)\n    }\n  }\n\n  /**\n   * Perform a change on the editor, passing `...args` to `change.call`.\n   *\n   * @param {Mixed} ...args\n   */\n\n  change = (...args) => {\n    const change = this.value.change().call(...args)\n    this.onChange(change)\n  }\n\n  /**\n   * Programmatically blur the editor.\n   */\n\n  blur = () => {\n    this.change(c => c.blur())\n  }\n\n  /**\n   * Programmatically focus the editor.\n   */\n\n  focus = () => {\n    this.change(c => c.focus())\n  }\n\n  /**\n   * Getters for exposing public properties of the editor's state.\n   */\n\n  get schema() {\n    return this.state.schema\n  }\n\n  get stack() {\n    return this.state.stack\n  }\n\n  get value() {\n    return this.state.value\n  }\n\n  /**\n   * On event.\n   *\n   * @param {String} handler\n   * @param {Event} event\n   */\n\n  onEvent = (handler, event) => {\n    this.change(change => {\n      this.stack.run(handler, event, change, this)\n    })\n  }\n\n  /**\n   * On change.\n   *\n   * @param {Change} change\n   */\n\n  onChange = change => {\n    debug('onChange', { change })\n\n    this.stack.run('onChange', change, this)\n    const { value } = change\n    const { onChange } = this.props\n    if (value == this.value) return\n    onChange(change)\n  }\n\n  /**\n   * Render the editor.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    debug('render', this)\n\n    const children = this.stack\n      .map('renderPortal', this.value, this)\n      .map((child, i) => (\n        <Portal key={i} isOpened>\n          {child}\n        </Portal>\n      ))\n\n    const props = { ...this.props, children }\n    const tree = this.stack.render('renderEditor', props, this)\n    return tree\n  }\n\n  /**\n   * Resolve an array of plugins from `plugins` and `schema` props.\n   *\n   * In addition to the plugins provided in props, this will initialize three\n   * other plugins:\n   *\n   * - The top-level editor plugin, which allows for top-level handlers, etc.\n   * - The two \"core\" plugins, one before all the other and one after.\n   *\n   * @param {Array|Void} plugins\n   * @param {Schema|Object|Void} schema\n   * @return {Array}\n   */\n\n  resolvePlugins = (plugins, schema) => {\n    const beforePlugin = BeforePlugin()\n    const afterPlugin = AfterPlugin()\n    const editorPlugin = {\n      schema: schema || {},\n    }\n\n    for (const prop of PLUGINS_PROPS) {\n      // Skip `onChange` because the editor's `onChange` is special.\n      if (prop == 'onChange') continue\n\n      // Skip `schema` because it can't be proxied easily, so it must be\n      // passed in as an argument to this function instead.\n      if (prop == 'schema') continue\n\n      // Define a function that will just proxies into `props`.\n      editorPlugin[prop] = (...args) => {\n        return this.props[prop] && this.props[prop](...args)\n      }\n    }\n\n    return [beforePlugin, editorPlugin, ...(plugins || []), afterPlugin]\n  }\n}\n\n/**\n * Mix in the property types for the event handlers.\n */\n\nfor (const prop of EVENT_HANDLERS) {\n  Editor.propTypes[prop] = Types.func\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Editor\n","import Editor from './components/editor'\nimport cloneFragment from './utils/clone-fragment'\nimport findDOMNode from './utils/find-dom-node'\nimport findDOMRange from './utils/find-dom-range'\nimport findNode from './utils/find-node'\nimport findRange from './utils/find-range'\nimport getEventRange from './utils/get-event-range'\nimport getEventTransfer from './utils/get-event-transfer'\nimport setEventTransfer from './utils/set-event-transfer'\nimport AfterPlugin from './plugins/after'\nimport BeforePlugin from './plugins/before'\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMRange,\n  findNode,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  AfterPlugin,\n  BeforePlugin,\n}\n\nexport default {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMRange,\n  findNode,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  AfterPlugin,\n  BeforePlugin,\n}\n"],"names":["EVENT_HANDLERS","PLUGIN_PROPS","BROWSER_RULES","EVENT_RULES","el","OS_RULES","BROWSER","EVENTS","OS","browser","userAgent","window","navigator","name","regexp","test","testEl","document","createElement","contentEditable","testFn","IS_CHROME","IS_FIREFOX","IS_SAFARI","IS_IE","IS_EDGE","IS_ANDROID","IS_IOS","IS_MAC","SUPPORTED_EVENTS","IS_APPLE","BOLD","isKeyHotkey","ITALIC","ENTER","SHIFT_ENTER","SPLIT_BLOCK","e","BACKSPACE","SHIFT_BACKSPACE","DELETE","SHIFT_DELETE","DELETE_BACKWARD","DELETE_FORWARD","DELETE_CHAR_BACKWARD_MAC","DELETE_CHAR_FORWARD_MAC","DELETE_CHAR_BACKWARD","DELETE_CHAR_FORWARD","DELETE_LINE_BACKWARD_MAC","DELETE_LINE_FORWARD_MAC","DELETE_LINE_BACKWARD","DELETE_LINE_FORWARD","DELETE_WORD_BACKWARD_MAC","DELETE_WORD_BACKWARD_PC","DELETE_WORD_FORWARD_MAC","DELETE_WORD_FORWARD_PC","DELETE_WORD_BACKWARD","DELETE_WORD_FORWARD","RIGHT_ARROW","LEFT_ARROW","COLLAPSE_CHAR_FORWARD","EXTEND_CHAR_FORWARD","COLLAPSE_CHAR_BACKWARD","EXTEND_CHAR_BACKWARD","COLLAPSE_LINE_BACKWARD_MAC","COLLAPSE_LINE_FORWARD_MAC","COLLAPSE_LINE_BACKWARD","COLLAPSE_LINE_FORWARD","EXTEND_LINE_BACKWARD_MAC","EXTEND_LINE_FORWARD_MAC","EXTEND_LINE_BACKWARD","EXTEND_LINE_FORWARD","UNDO","REDO_MAC","REDO_PC","REDO","TRANSPOSE_CHARACTER_MAC","TRANSPOSE_CHARACTER","CONTENTEDITABLE","COMPOSING","key","PARSER","parse","string","matches","exec","Error","original","index","parseInt","stringify","object","debug","Debug","Leaf","props","marks","text","parent","node","offsetKey","OffsetKey","renderMarks","offset","editor","stack","leaf","renderText","reduce","children","mark","element","find","block","leaves","isVoid","nodes","size","lastText","getLastText","lastChar","charAt","length","isLastText","isLastLeaf","React","Component","propTypes","SlateTypes","isRequired","Types","number","message","args","Text","decorations","style","value","decs","filter","startKey","d","endKey","startsBefore","areDescendantsSorted","endsAfter","getLeaves","map","i","child","renderLeaf","ImmutableTypes","list","defaultProps","shouldComponentUpdate","n","nextProps","p","pLast","last","nLast","equals","Void","readOnly","Tag","spacer","content","any","bool","type","id","isSelected","getFirstText","Node","selection","indexes","getSelectionIndexes","toArray","isChildSelected","start","end","renderNode","attributes","first","direction","getTextDirection","dir","placeholder","cloneElement","shouldUpdate","warn","concat","getDecorations","findDOMNode","win","isNode","querySelector","findDOMPoint","iterator","createNodeIterator","NodeFilter","SHOW_TEXT","FILTER_ACCEPT","nextNode","textContent","o","findDOMRange","range","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","isCollapsed","anchor","focus","r","createRange","setStart","setEnd","ZERO_WIDTH_ATTRIBUTE","ZERO_WIDTH_SELECTOR","OFFSET_KEY_ATTRIBUTE","RANGE_SELECTOR","TEXT_SELECTOR","VOID_SELECTOR","findPoint","nativeNode","nativeOffset","normalizeNodeAndOffset","nearestNode","nearestOffset","getWindow","parentNode","rangeNode","closest","textNode","toString","voidNode","hasAttribute","getAttribute","hasDescendant","nodeType","childNodes","isLast","getEditableChild","triedForward","triedBackward","findRange","native","anchorNode","startContainer","Range","StaticRange","startOffset","endContainer","endOffset","focusNode","domAnchor","domFocus","create","OVERFLOWS","IS_IOS_11","match","findScrollContainer","scroller","getComputedStyle","overflowY","includes","body","scrollToSelection","isWindow","documentElement","backward","getRangeAt","cloneRange","collapse","cursorRect","getBoundingClientRect","collapsed","top","height","getClientRects","width","yOffset","xOffset","scrollerTop","scrollerLeft","scrollerBordersY","scrollerBordersX","scrollerPaddingTop","scrollerPaddingBottom","scrollerPaddingLeft","scrollerPaddingRight","innerWidth","innerHeight","pageYOffset","pageXOffset","offsetWidth","offsetHeight","scrollTop","scrollLeft","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","scrollerRect","left","cursorTop","cursorLeft","x","y","scrollTo","Content","componentDidMount","addEventListener","onNativeSelectionChange","beforeinput","onNativeBeforeInput","updateSelection","componentDidUpdate","getSelection","rangeCount","isBlurred","isInEditor","removeAllRanges","blur","isUnset","current","error","tmp","isUpdatingSelection","setBaseAndExtent","addRange","ref","target","isContentEditable","event","getTargetRanges","targetRange","inputType","preventDefault","change","deleteAtRange","isInVoid","collapseToStartOfNextText","splitBlockAtRange","data","dataTransfer","getData","insertTextAtRange","select","throttle","activeElement","onSelect","forEach","handler","onEvent","removeEventListener","targetEditorNode","className","tabIndex","role","tagName","Container","isFocused","handlers","obj","WebkitUserModify","spellCheck","onBlur","onFocus","onCompositionEnd","onCompositionStart","onCopy","onCut","onDragEnd","onDragOver","onDragStart","onDrop","onInput","onKeyDown","onKeyUp","onPaste","autoCorrect","func","cloneFragment","fragment","startText","endBlock","endInline","isVoidBlock","isVoidInline","encoded","Base64","serializeNode","contents","cloneContents","attach","setEndAfter","firstChild","hasMarks","characters","slice","char","setStartBefore","call","querySelectorAll","isNewline","zw","els","removeAttribute","span","whiteSpace","appendChild","setAttribute","div","position","border","padding","margin","selectNodeContents","requestAnimationFrame","removeChild","findNode","getNode","getEventRange","nativeEvent","rect","isPrevious","moveToEndOf","getPreviousText","moveToStartOf","getNextText","caretRangeFromPoint","caretPositionFromPoint","offsetNode","TRANSFER_TYPES","FRAGMENT","HTML","NODE","RICH","TEXT","FRAGMENT_MATCHER","getEventTransfer","transfer","clipboardData","getType","html","rich","files","indexOf","full","embeddedTypes","getEmbeddedTypes","deserializeNode","items","Array","from","item","kind","getAsFile","exists","err","getTransferType","prefix","substring","JSON","types","setEventTransfer","mime","toUpperCase","setData","AfterPlugin","isDraggingInternally","onBeforeInput","insertText","onClick","hasVoidParent","collapseToEndOf","c","removeNodeByKey","delete","preserveKeys","move","collapseToStartOf","split","line","splitBlock","insertFragment","Block","isBlock","insertBlock","regenerateKey","Inline","isInline","insertInline","dispatchEvent","MouseEvent","point","getDescendant","getClosestBlock","lastLeaf","delta","corrected","collapseToEnd","entire","moveAnchorTo","moveFocusTo","HOTKEYS","deleteCharBackward","deleteCharForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","redo","undo","collapseLineBackward","collapseLineForward","extendLineBackward","extendLineForward","previousText","isPreviousInVoid","collapseCharBackward","nextText","isNextInVoid","collapseCharForward","extendCharBackward","extendCharForward","startBlock","defaultBlock","defaultMarks","getInsertMarksAtRange","frag","Plain","deserialize","anchorText","focusText","anchorInline","getClosestInline","focusInline","focusBlock","anchorBlock","set","next","normalize","renderEditor","renderPlaceholder","state","isComposing","isTextList","getBlocks","BeforePlugin","compositionCount","isCopying","isDragging","relatedTarget","contains","onChange","schema","setValue","save","setState","onDragEnter","onDragExit","onDragLeave","dropEffect","noop","Editor","updates","resolves","plugins","resolvePlugins","Stack","Schema","run","queueChange","tree","render","array","componentWillReceiveProps","flushChange","autoFocus","operations","beforePlugin","afterPlugin","editorPlugin","prop","PLUGINS_PROPS"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;AAMA,IAAMA,iBAAiB,CACrB,eADqB,EAErB,QAFqB,EAGrB,SAHqB,EAIrB,kBAJqB,EAKrB,oBALqB,EAMrB,QANqB,EAOrB,OAPqB,EAQrB,WARqB,EASrB,aATqB,EAUrB,YAVqB,EAWrB,aAXqB,EAYrB,YAZqB,EAarB,aAbqB,EAcrB,QAdqB,EAerB,SAfqB,EAgBrB,SAhBqB,EAiBrB,WAjBqB,EAkBrB,SAlBqB,EAmBrB,SAnBqB,EAoBrB,UApBqB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;;;;;;AAMA,IAAMC,2CACDD,cADC,IAEJ,cAFI,EAGJ,UAHI,EAIJ,YAJI,EAKJ,YALI,EAMJ,mBANI,EAOJ,cAPI,EAQJ,QARI,EASJ,cATI,EAAN;;ACNA;;;;;;AAMA,IAAME,gBAAgB,CACpB,CAAC,MAAD,EAAS,mBAAT,CADoB,EAEpB,CAAC,QAAD,EAAW,kDAAX,CAFoB,EAGpB,CAAC,SAAD,EAAY,6BAAZ,CAHoB,EAIpB,CAAC,OAAD,EAAU,2BAAV,CAJoB,EAKpB,CAAC,OAAD,EAAU,0BAAV,CALoB,EAMpB,CAAC,IAAD,EAAO,yCAAP,CANoB,EAOpB,CAAC,IAAD,EAAO,qCAAP,CAPoB,EAQpB,CAAC,IAAD,EAAO,cAAP,CARoB,EASpB,CAAC,SAAD,EAAY,qBAAZ,CAToB,EAUpB,CAAC,QAAD,EAAW,8BAAX,CAVoB,CAAtB;;;;;;;;AAmBA,IAAMC,cAAc,CAAC,CAAC,aAAD,EAAgB;SAAM,mBAAmBC,EAAzB;CAAhB,CAAD,CAApB;;;;;;;;AAQA,IAAMC,WAAW,CACf,CAAC,KAAD,EAAQ,6BAAR,CADe;AAEf,CAAC,OAAD,EAAU,WAAV,CAFe,EAGf,CAAC,SAAD,EAAY,UAAZ,CAHe,EAIf,CAAC,WAAD,EAAc,gDAAd,CAJe,EAKf,CAAC,SAAD,EAAY,kCAAZ,CALe,CAAjB;;;;;;AAYA,IAAIC,gBAAJ;AACA,IAAMC,SAAS,EAAf;AACA,IAAIC,WAAJ;;;;;;AAMA,IAAIC,OAAJ,EAAa;MACHC,SADG,GACWC,OAAOC,SADlB,CACHF,SADG;;;;;;;yBAGkBR,aAA7B,8HAA4C;;;;;UAAhCW,IAAgC;UAA1BC,MAA0B;;UACtCA,OAAOC,IAAP,CAAYL,SAAZ,CAAJ,EAA4B;kBAChBG,IAAV;;;;;;;;;;;;;;;;;;;;;;;;0BAKyBR,QAA7B,mIAAuC;;;;;UAA3BQ,KAA2B;UAArBC,OAAqB;;UACjCA,QAAOC,IAAP,CAAYL,SAAZ,CAAJ,EAA4B;aACrBG,KAAL;;;;;;;;;;;;;;;;;;;MAKEG,SAASL,OAAOM,QAAP,CAAgBC,aAAhB,CAA8B,KAA9B,CAAf;SACOC,eAAP,GAAyB,IAAzB;;;;;;;0BAE6BhB,WAA7B,mIAA0C;;;;;UAA9BU,MAA8B;UAAxBO,MAAwB;;aACjCP,MAAP,IAAeO,OAAOJ,MAAP,CAAf;;;;;;;;;;;;;;;;;;;;;;;;AAUJ,AAAO,IAAMK,YAAYf,YAAY,QAA9B;AACP,AAAO,IAAMgB,aAAahB,YAAY,SAA/B;AACP,AAAO,IAAMiB,YAAYjB,YAAY,QAA9B;AACP,AAAO,IAAMkB,QAAQlB,YAAY,IAA1B;AACP,AAAO,IAAMmB,UAAUnB,YAAY,MAA5B;;AAEP,AAAO,IAAMoB,aAAalB,OAAO,SAA1B;AACP,AAAO,IAAMmB,SAASnB,OAAO,KAAtB;AACP,AAAO,IAAMoB,SAASpB,OAAO,OAAtB;AACP;;AAEA,AAAO,IAAMqB,mBAAmBtB,MAAzB;;AC7FP;;;;;;AAMA,IAAMuB,WAAWH,UAAUC,MAA3B;;;;;;;;AAQA,IAAMG,OAAOC,YAAY,OAAZ,CAAb;AACA,IAAMC,SAASD,YAAY,OAAZ,CAAf;;AAEA,IAAME,QAAQF,YAAY,OAAZ,CAAd;AACA,IAAMG,cAAcH,YAAY,aAAZ,CAApB;AACA,IAAMI,cAAc,SAAdA,WAAc;SAAKF,MAAMG,CAAN,KAAYF,YAAYE,CAAZ,CAAjB;CAApB;;AAEA,IAAMC,YAAYN,YAAY,WAAZ,CAAlB;AACA,IAAMO,kBAAkBP,YAAY,iBAAZ,CAAxB;AACA,IAAMQ,SAASR,YAAY,QAAZ,CAAf;AACA,IAAMS,eAAeT,YAAY,cAAZ,CAArB;AACA,IAAMU,kBAAkB,SAAlBA,eAAkB;SAAKJ,UAAUD,CAAV,KAAgBE,gBAAgBF,CAAhB,CAArB;CAAxB;AACA,IAAMM,iBAAiB,SAAjBA,cAAiB;SAAKH,OAAOH,CAAP,KAAaI,aAAaJ,CAAb,CAAlB;CAAvB;;AAEA,IAAMO,2BAA2BZ,YAAY,QAAZ,CAAjC;AACA,IAAMa,0BAA0Bb,YAAY,QAAZ,CAAhC;AACA,IAAMc,uBAAuB,SAAvBA,oBAAuB;SAC3BJ,gBAAgBL,CAAhB,KAAuBP,YAAYc,yBAAyBP,CAAzB,CADR;CAA7B;AAEA,IAAMU,sBAAsB,SAAtBA,mBAAsB;SAC1BJ,eAAeN,CAAf,KAAsBP,YAAYe,wBAAwBR,CAAxB,CADR;CAA5B;;AAGA,IAAMW,2BAA2B,SAA3BA,wBAA2B;SAC/BhB,YAAY,qBAAZ,EAAmCK,CAAnC,KAAyCL,YAAY,eAAZ,EAA6BK,CAA7B,CADV;CAAjC;AAEA,IAAMY,0BAA0BjB,YAAY,QAAZ,CAAhC;AACA,IAAMkB,uBAAuB,SAAvBA,oBAAuB;SAAKpB,YAAYkB,yBAAyBX,CAAzB,CAAjB;CAA7B;AACA,IAAMc,sBAAsB,SAAtBA,mBAAsB;SAAKrB,YAAYmB,wBAAwBZ,CAAxB,CAAjB;CAA5B;;AAEA,IAAMe,2BAA2B,SAA3BA,wBAA2B;SAC/BpB,YAAY,wBAAZ,EAAsCK,CAAtC,KAA4CL,YAAY,kBAAZ,EAAgCK,CAAhC,CADb;CAAjC;AAEA,IAAMgB,0BAA0BrB,YAAY,gBAAZ,CAAhC;AACA,IAAMsB,0BAA0B,SAA1BA,uBAA0B;SAC9BtB,YAAY,qBAAZ,EAAmCK,CAAnC,KAAyCL,YAAY,eAAZ,EAA6BK,CAA7B,CADX;CAAhC;AAEA,IAAMkB,yBAAyBvB,YAAY,aAAZ,CAA/B;AACA,IAAMwB,uBAAuB,SAAvBA,oBAAuB;SAC3B1B,WAAWsB,yBAAyBf,CAAzB,CAAX,GAAyCgB,wBAAwBhB,CAAxB,CADd;CAA7B;AAEA,IAAMoB,sBAAsB,SAAtBA,mBAAsB;SAC1B3B,WAAWwB,wBAAwBjB,CAAxB,CAAX,GAAwCkB,uBAAuBlB,CAAvB,CADd;CAA5B;;AAGA,IAAMqB,cAAc1B,YAAY,OAAZ,CAApB;AACA,IAAM2B,aAAa3B,YAAY,MAAZ,CAAnB;AACA,IAAM4B,wBAAwB,SAAxBA,qBAAwB;SAAKF,YAAYrB,CAAZ,KAAkB,CAACwB,oBAAoBxB,CAApB,CAAxB;CAA9B;AACA,IAAMyB,yBAAyB,SAAzBA,sBAAyB;SAAKH,WAAWtB,CAAX,KAAiB,CAAC0B,qBAAqB1B,CAArB,CAAvB;CAA/B;;AAEA,IAAM2B,6BAA6BhC,YAAY,WAAZ,CAAnC;AACA,IAAMiC,4BAA4BjC,YAAY,aAAZ,CAAlC;AACA,IAAMkC,yBAAyB,SAAzBA,sBAAyB;SAAKpC,YAAYkC,2BAA2B3B,CAA3B,CAAjB;CAA/B;AACA,IAAM8B,wBAAwB,SAAxBA,qBAAwB;SAAKrC,YAAYmC,0BAA0B5B,CAA1B,CAAjB;CAA9B;;AAEA,IAAMwB,sBAAsB7B,YAAY,aAAZ,CAA5B;AACA,IAAM+B,uBAAuB/B,YAAY,YAAZ,CAA7B;;AAEA,IAAMoC,2BAA2BpC,YAAY,iBAAZ,CAAjC;AACA,IAAMqC,0BAA0BrC,YAAY,mBAAZ,CAAhC;AACA,IAAMsC,uBAAuB,SAAvBA,oBAAuB;SAAKxC,YAAYsC,yBAAyB/B,CAAzB,CAAjB;CAA7B;AACA,IAAMkC,sBAAsB,SAAtBA,mBAAsB;SAAKzC,YAAYuC,wBAAwBhC,CAAxB,CAAjB;CAA5B;;AAEA,IAAMmC,OAAOxC,YAAY,OAAZ,CAAb;AACA,IAAMyC,WAAWzC,YAAY,aAAZ,CAAjB;AACA,IAAM0C,UAAU1C,YAAY,OAAZ,CAAhB;AACA,IAAM2C,OAAO,SAAPA,IAAO;SAAM7C,WAAW2C,SAASpC,CAAT,CAAX,GAAyBqC,QAAQrC,CAAR,CAA/B;CAAb;;AAEA,IAAMuC,0BAA0B5C,YAAY,QAAZ,CAAhC;AACA,IAAM6C,sBAAsB,SAAtBA,mBAAsB;SAAK/C,YAAY8C,wBAAwBvC,CAAxB,CAAjB;CAA5B;;AAEA,IAAMyC,kBAAkB,SAAlBA,eAAkB;SACtB/C,KAAKM,CAAL,KACAS,qBAAqBT,CAArB,CADA,IAEAU,oBAAoBV,CAApB,CAFA,IAGAa,qBAAqBb,CAArB,CAHA,IAIAc,oBAAoBd,CAApB,CAJA,IAKAmB,qBAAqBnB,CAArB,CALA,IAMAoB,oBAAoBpB,CAApB,CANA,IAOAJ,OAAOI,CAAP,CAPA,IAQAsC,KAAKtC,CAAL,CARA,IASAD,YAAYC,CAAZ,CATA,IAUAwC,oBAAoBxC,CAApB,CAVA,IAWAmC,KAAKnC,CAAL,CAZsB;CAAxB;;AAcA,IAAM0C,YAAY,SAAZA,SAAY;SAChB1C,EAAE2C,GAAF,IAAS,WAAT,IACA3C,EAAE2C,GAAF,IAAS,WADT,IAEA3C,EAAE2C,GAAF,IAAS,YAFT,IAGA3C,EAAE2C,GAAF,IAAS,SAHT,IAIA3C,EAAE2C,GAAF,IAAS,WAJT,IAKA3C,EAAE2C,GAAF,IAAS,OANO;CAAlB;;;;;;;;AAcA,cAAe;YAAA;gDAAA;8CAAA;8CAAA;gDAAA;sBAAA;kCAAA;4CAAA;0CAAA;4CAAA;0CAAA;4CAAA;0CAAA;4CAAA;0CAAA;0CAAA;4CAAA;gBAAA;YAAA;0BAAA;;CAAf;;AC9GA;;;;;;AAMA,IAAMC,SAAS,uBAAf;;;;;;;;;AASA,SAASC,KAAT,CAAeC,MAAf,EAAuB;MACfC,UAAUH,OAAOI,IAAP,CAAYF,MAAZ,CAAhB;;MAEI,CAACC,OAAL,EAAc;UACN,IAAIE,KAAJ,kCAAwCH,MAAxC,SAAN;;;+BAG6BC,OAPV;MAOdG,QAPc;MAOJP,GAPI;MAOCQ,KAPD;;;SAQd;YAAA;WAEEC,SAASD,KAAT,EAAgB,EAAhB;GAFT;;;;;;;;;;;;AAeF,SAASE,SAAT,CAAmBC,MAAnB,EAA2B;SACfA,OAAOX,GAAjB,SAAwBW,OAAOH,KAA/B;;;;;;;;;AASF,gBAAe;cAAA;;CAAf;;ACzCA;;;;;;AAMA,IAAMI,QAAQC,MAAM,cAAN,CAAd;;;;;;;;IAQMC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAqCkBC,OAAO;;UAGzBA,MAAMP,KAAN,IAAe,KAAKO,KAAL,CAAWP,KAA1B,IACAO,MAAMC,KAAN,IAAe,KAAKD,KAAL,CAAWC,KAD1B,IAEAD,MAAME,IAAN,IAAc,KAAKF,KAAL,CAAWE,IAFzB,IAGAF,MAAMG,MAAN,IAAgB,KAAKH,KAAL,CAAWG,MAJ7B,EAKE;eACO,IAAP;;;;aAIK,KAAP;;;;;;;;;;;6BASO;WACFN,KAAL,CAAW,QAAX,EAAqB,IAArB;;mBAEwB,KAAKG,KAHtB;UAGCI,IAHD,UAGCA,IAHD;UAGOX,KAHP,UAGOA,KAHP;;UAIDY,YAAYC,UAAUX,SAAV,CAAoB;aAC/BS,KAAKnB,GAD0B;;OAApB,CAAlB;;aAKO;;UAAM,mBAAiBoB,SAAvB;aAAwCE,WAAL;OAA1C;;;;;;;;;;;kCASY;oBACkC,KAAKP,KADvC;UACJC,KADI,WACJA,KADI;UACGG,IADH,WACGA,IADH;UACSI,MADT,WACSA,MADT;UACiBN,IADjB,WACiBA,IADjB;UACuBO,MADvB,WACuBA,MADvB;UAEJC,KAFI,GAEMD,MAFN,CAEJC,KAFI;;UAGNC,OAAO,KAAKC,UAAL,EAAb;;aAEOX,MAAMY,MAAN,CAAa,UAACC,QAAD,EAAWC,IAAX,EAAoB;YAChCf,QAAQ,EAAES,cAAF,EAAUM,UAAV,EAAgBd,YAAhB,EAAuBG,UAAvB,EAA6BI,cAA7B,EAAqCN,UAArC,EAA2CY,kBAA3C,EAAd;YACME,UAAUN,MAAMO,IAAN,CAAW,YAAX,EAAyBjB,KAAzB,CAAhB;eACOgB,WAAWF,QAAlB;OAHK,EAIJH,IAJI,CAAP;;;;;;;;;;;iCAaW;oBAC0C,KAAKX,KAD/C;UACHkB,KADG,WACHA,KADG;UACId,IADJ,WACIA,IADJ;UACUD,MADV,WACUA,MADV;UACkBD,IADlB,WACkBA,IADlB;UACwBT,KADxB,WACwBA,KADxB;UAC+B0B,MAD/B,WAC+BA,MAD/B;;;;;UAKPhB,OAAOiB,MAAX,EAAmB;eACV;;YAAM,yBAAsB,GAA5B;;SAAP;;;;;;UAOAlB,SAAS,EAAT,IACAC,OAAOP,MAAP,KAAkB,OADlB,IAEAO,OAAOD,IAAP,KAAgB,EAFhB,IAGAC,OAAOkB,KAAP,CAAaC,IAAb,KAAsB,CAJxB,EAKE;eACO;;YAAM,yBAAsB,GAA5B;;SAAP;;;;;;UAMEpB,SAAS,EAAb,EAAiB;eACR;;YAAM,yBAAsB,GAA5B;;SAAP;;;;;UAKIqB,WAAWL,MAAMM,WAAN,EAAjB;UACMC,WAAWvB,KAAKwB,MAAL,CAAYxB,KAAKyB,MAAL,GAAc,CAA1B,CAAjB;UACMC,aAAaxB,SAASmB,QAA5B;UACMM,aAAapC,UAAU0B,OAAOG,IAAP,GAAc,CAA3C;UACIM,cAAcC,UAAd,IAA4BJ,aAAa,IAA7C,EAAmD,OAAUvB,IAAV;;;aAG5CA,IAAP;;;;EAnIe4B,MAAMC;;;;;;;;AAAnBhC,KAOGiC,YAAY;SACVC,WAAWf,KAAX,CAAiBgB,UADP;UAETC,MAAMvC,MAAN,CAAasC,UAFJ;SAGVC,MAAMC,MAAN,CAAaF,UAHH;UAITD,WAAWd,MAAX,CAAkBe,UAJT;SAKVD,WAAWhC,KAAX,CAAiBiC,UALP;QAMXD,WAAW7B,IAAX,CAAgB8B,UANL;UAOTC,MAAMC,MAAN,CAAaF,UAPJ;UAQTD,WAAW7B,IAAX,CAAgB8B,UARP;QASXC,MAAM/C,MAAN,CAAa8C,UATF;;;;;OAmBnBrC,QAAQ,UAACwC,OAAD,EAAsB;uCAATC,IAAS;UAAA;;;4BACtBD,OAAN,EAAkB,OAAKrC,KAAL,CAAWI,IAAX,CAAgBnB,GAAlC,SAAyC,OAAKe,KAAL,CAAWP,KAApD,SAAgE6C,IAAhE;;;;ACxCJ;;;;;;AAMA,IAAMzC,UAAQC,MAAM,YAAN,CAAd;;;;;;;;IAQMyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BA+EK;;;WACF1C,KAAL,CAAW,QAAX,EAAqB,IAArB;;mBAE6C,KAAKG,KAH3C;UAGCwC,WAHD,UAGCA,WAHD;UAGc/B,MAHd,UAGcA,MAHd;UAGsBL,IAHtB,UAGsBA,IAHtB;UAG4BqC,KAH5B,UAG4BA,KAH5B;UAICC,KAJD,GAIWjC,MAJX,CAICiC,KAJD;UAKCxH,QALD,GAKcwH,KALd,CAKCxH,QALD;UAMC+D,GAND,GAMSmB,IANT,CAMCnB,GAND;;;UAQD0D,OAAOH,YAAYI,MAAZ,CAAmB,aAAK;YAC3BC,QAD2B,GACNC,CADM,CAC3BD,QAD2B;YACjBE,MADiB,GACND,CADM,CACjBC,MADiB;;YAE/BF,YAAY5D,GAAZ,IAAmB8D,UAAU9D,GAAjC,EAAsC,OAAO,IAAP;YAChC+D,eAAe9H,SAAS+H,oBAAT,CAA8BJ,QAA9B,EAAwC5D,GAAxC,CAArB;YACMiE,YAAYhI,SAAS+H,oBAAT,CAA8BhE,GAA9B,EAAmC8D,MAAnC,CAAlB;eACOC,gBAAgBE,SAAvB;OALW,CAAb;;UAQM/B,SAASf,KAAK+C,SAAL,CAAeR,IAAf,CAAf;UACInC,SAAS,CAAb;;UAEMM,WAAWK,OAAOiC,GAAP,CAAW,UAACzC,IAAD,EAAO0C,CAAP,EAAa;YACjCC,QAAQ,OAAKC,UAAL,CAAgBpC,MAAhB,EAAwBR,IAAxB,EAA8B0C,CAA9B,EAAiC7C,MAAjC,CAAd;kBACUG,KAAKT,IAAL,CAAUyB,MAApB;eACO2B,KAAP;OAHe,CAAjB;;aAOE;;UAAM,YAAUrE,GAAhB,EAAqB,OAAOwD,KAA5B;;OADF;;;;;;;;;;;;;;;EAxGeX,MAAMC;;;;;;;;AAAnBQ,OAOGP,YAAY;SACVC,WAAWf,KADD;eAEJsC,eAAeC,IAAf,CAAoBvB,UAFhB;UAGTC,MAAMvC,MAAN,CAAasC,UAHJ;QAIXD,WAAW7B,IAAX,CAAgB8B,UAJL;UAKTD,WAAW7B,IAAX,CAAgB8B,UALP;SAMVC,MAAMvC,MANI;AAPf2C,OAsBGmB,eAAe;SACb,IADa;;;;;OAWtB7D,QAAQ,UAACwC,OAAD,EAAsB;uCAATC,IAAS;UAAA;;;QACpBlC,IADoB,GACX,OAAKJ,KADM,CACpBI,IADoB;QAEpBnB,GAFoB,GAEZmB,IAFY,CAEpBnB,GAFoB;;8BAGtBoD,OAAN,EAAkBpD,GAAlB,qBAAmCqD,IAAnC;;;OAWFqB,wBAAwB,qBAAa;QAC3B3D,KAD2B,UAC3BA,KAD2B;;QAE7B4D,IAAIC,SAAV;QACMC,IAAI9D,KAAV;;;;;;QAMI4D,EAAExD,IAAF,IAAU0D,EAAE1D,IAAhB,EAAsB,OAAO,IAAP;;;;QAIlBwD,EAAEzD,MAAF,CAASP,MAAT,IAAmB,OAAvB,EAAgC;UACxBmE,QAAQD,EAAE3D,MAAF,CAASkB,KAAT,CAAe2C,IAAf,EAAd;UACMC,QAAQL,EAAEzD,MAAF,CAASkB,KAAT,CAAe2C,IAAf,EAAd;UACIF,EAAE1D,IAAF,IAAU2D,KAAV,IAAmBH,EAAExD,IAAF,IAAU6D,KAAjC,EAAwC,OAAO,IAAP;;;;QAItC,CAACL,EAAEpB,WAAF,CAAc0B,MAAd,CAAqBJ,EAAEtB,WAAvB,CAAL,EAA0C,OAAO,IAAP;;;WAGnC,KAAP;;;OAmDFe,aAAa,UAACpC,MAAD,EAASR,IAAT,EAAelB,KAAf,EAAsBe,MAAtB,EAAiC;kBACJ,OAAKR,KADD;QACpCkB,KADoC,WACpCA,KADoC;QAC7Bd,IAD6B,WAC7BA,IAD6B;QACvBD,MADuB,WACvBA,MADuB;QACfM,MADe,WACfA,MADe;QAEpCP,IAFoC,GAEpBS,IAFoB,CAEpCT,IAFoC;QAE9BD,KAF8B,GAEpBU,IAFoB,CAE9BV,KAF8B;;;WAK1C,oBAAC,IAAD;WACUG,KAAKnB,GAAb,SAAoBQ,KADtB;aAESyB,KAFT;cAGUT,MAHV;aAIShB,KAJT;aAKSQ,KALT;YAMQG,IANR;cAOUI,MAPV;cAQUL,MARV;cASUgB,MATV;YAUQjB;MAXV;;;;AC5IJ;;;;;;AAMA,IAAML,UAAQC,MAAM,YAAN,CAAd;;;;;;;;IAQMqE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAoCK;UACCnE,KADD,GACW,IADX,CACCA,KADD;UAECc,QAFD,GAE8Bd,KAF9B,CAECc,QAFD;UAEWV,IAFX,GAE8BJ,KAF9B,CAEWI,IAFX;UAEiBgE,QAFjB,GAE8BpE,KAF9B,CAEiBoE,QAFjB;;UAGDC,MAAMjE,KAAKR,MAAL,IAAe,OAAf,GAAyB,KAAzB,GAAiC,MAA7C;UACM6C,QAAQ;gBACJ,GADI;eAEL,aAFK;iBAGH;OAHX;;UAMM6B,SACJ;WAAA;;+BAAA;mCAAA;8CAAA;iBAIS7B;;aAED7B,UAAL;OAPL;;UAWM2D,UAAU;WAAA;UAAK,WAAWH,WAAW,IAAX,GAAkB,IAAlC;;OAAhB;;WAEKvE,KAAL,CAAW,QAAX,EAAqB,EAAEG,YAAF,EAArB;;aAGE;WAAA;;iCAAA;sBAEYI,KAAKnB,GAFjB;2BAGmBmF,WAAW,IAAX,GAAkB;;mBAEvB,IAAX,GAAkBE,MALrB;;OADF;;;;;;;;;;;;;;;;EA7DexC,MAAMC;;;;;;;;AAAnBoC,KAOGnC,YAAY;SACVC,WAAWf,KADD;YAEPiB,MAAMqC,GAAN,CAAUtC,UAFH;UAGTC,MAAMvC,MAAN,CAAasC,UAHJ;QAIXD,WAAW7B,IAAX,CAAgB8B,UAJL;UAKTD,WAAW7B,IAAX,CAAgB8B,UALP;YAMPC,MAAMsC,IAAN,CAAWvC,UANJ;;;;;OAgBnBrC,QAAQ,UAACwC,OAAD,EAAsB;uCAATC,IAAS;UAAA;;;QACpBlC,IADoB,GACX,OAAKJ,KADM,CACpBI,IADoB;QAEpBnB,GAFoB,GAENmB,IAFM,CAEpBnB,GAFoB;QAEfyF,IAFe,GAENtE,IAFM,CAEfsE,IAFe;;QAGtBC,KAAQ1F,GAAR,UAAgByF,IAAhB,MAAN;8BACMrC,OAAN,OAAkBsC,EAAlB,SAA2BrC,IAA3B;;;OAyDF1B,aAAa,YAAM;iBAQb,OAAKZ,KARQ;QAEfkB,KAFe,UAEfA,KAFe;QAGfsB,WAHe,UAGfA,WAHe;QAIfoC,UAJe,UAIfA,UAJe;QAKfxE,IALe,UAKfA,IALe;QAMfgE,QANe,UAMfA,QANe;QAOf3D,MAPe,UAOfA,MAPe;;QASX6C,QAAQlD,KAAKyE,YAAL,EAAd;WAEE,oBAACtC,MAAD;aACSnC,KAAKR,MAAL,IAAe,OAAf,GAAyBQ,IAAzB,GAAgCc,KADzC;mBAEesB,WAFf;cAGU/B,MAHV;kBAIcmE,UAJd;WAKOtB,MAAMrE,GALb;YAMQqE,KANR;cAOUlD,IAPV;gBAQYgE;MATd;;;;ACzGJ;;;;;;AAMA,IAAMvE,UAAQC,MAAM,YAAN,CAAd;;;;;;;;IAQMgF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BA8FK;;;WACFjF,KAAL,CAAW,QAAX,EAAqB,IAArB;;mBAEuD,KAAKG,KAHrD;UAGCS,MAHD,UAGCA,MAHD;UAGSmE,UAHT,UAGSA,UAHT;UAGqBxE,IAHrB,UAGqBA,IAHrB;UAG2BD,MAH3B,UAG2BA,MAH3B;UAGmCiE,QAHnC,UAGmCA,QAHnC;UAIC1B,KAJD,GAIWjC,MAJX,CAICiC,KAJD;UAKCqC,SALD,GAKerC,KALf,CAKCqC,SALD;UAMCrE,KAND,GAMWD,MANX,CAMCC,KAND;;UAODsE,UAAU5E,KAAK6E,mBAAL,CAAyBF,SAAzB,EAAoCH,UAApC,CAAhB;UACI9D,WAAWV,KAAKiB,KAAL,CAAW6D,OAAX,GAAqB9B,GAArB,CAAyB,UAACE,KAAD,EAAQD,CAAR,EAAc;YAC9C8B,kBAAkB,CAAC,CAACH,OAAF,IAAaA,QAAQI,KAAR,IAAiB/B,CAA9B,IAAmCA,IAAI2B,QAAQK,GAAvE;eACO,OAAKC,UAAL,CAAgBhC,KAAhB,EAAuB6B,eAAvB,CAAP;OAFa,CAAf;;;;UAOMI,aAAa,EAAE,YAAYnF,KAAKnB;;;;OAAtC,CAIA,IAAImB,KAAKR,MAAL,IAAe,OAAf,IAA0BQ,KAAKiB,KAAL,CAAWmE,KAAX,GAAmB5F,MAAnB,IAA6B,OAA3D,EAAoE;YAC5D6F,YAAYrF,KAAKsF,gBAAL,EAAlB;YACID,aAAa,KAAjB,EAAwBF,WAAWI,GAAX,GAAiB,KAAjB;;;UAGpB3F,QAAQ;aACPI,KAAKnB,GADE;sBAAA;8BAAA;kBAAA;sBAAA;;OAAd;;UASI2G,cAAclF,MAAMO,IAAN,CAAW,mBAAX,EAAgCjB,KAAhC,CAAlB;;UAEI4F,WAAJ,EAAiB;sBACD9D,MAAM+D,YAAN,CAAmBD,WAAnB,EAAgC;eACpCxF,KAAKnB,GAAb;SADY,CAAd;oBAGY2G,WAAZ,2BAA4B9E,QAA5B;;;UAGIE,UAAUN,MAAMO,IAAN,CAAW,YAAX,eACXjB,KADW;8BAAA;;SAAhB;;aAMOI,KAAKgB,MAAL,GAAc;YAAA;aAAepB,KAAf;;OAAd,GAAuDgB,OAA9D;;;;;;;;;;;;;EA9Iec,MAAMC;;;;;;;;AAAnB+C,OAOG9C,YAAY;SACVC,WAAWf,KADD;eAEJsC,eAAeC,IAAf,CAAoBvB,UAFhB;UAGTC,MAAMvC,MAAN,CAAasC,UAHJ;cAILC,MAAMsC,IAAN,CAAWvC,UAJN;QAKXD,WAAW7B,IAAX,CAAgB8B,UALL;UAMTD,WAAW7B,IAAX,CAAgB8B,UANP;YAOPC,MAAMsC,IAAN,CAAWvC,UAPJ;;;;;OAiBnBrC,QAAQ,UAACwC,OAAD,EAAsB;uCAATC,IAAS;UAAA;;;QACpBlC,IADoB,GACX,OAAKJ,KADM,CACpBI,IADoB;QAEpBnB,GAFoB,GAENmB,IAFM,CAEpBnB,GAFoB;QAEfyF,IAFe,GAENtE,IAFM,CAEfsE,IAFe;;8BAGtBrC,OAAN,EAAkBpD,GAAlB,UAA0ByF,IAA1B,eAAsCpC,IAAtC;;;OAWFqB,wBAAwB,qBAAa;QAC3B3D,KAD2B,UAC3BA,KAD2B;QAE3BU,KAF2B,GAEjBV,MAAMS,MAFW,CAE3BC,KAF2B;;QAG7BoF,eAAepF,MAAMO,IAAN,CACnB,2BADmB,EAEnBjB,KAFmB,EAGnB6D,SAHmB,CAArB;QAKMD,IAAIC,SAAV;QACMC,IAAI9D,KAAV;;;;;QAKI8F,gBAAgB,IAApB,EAA0B;UACpBA,YAAJ,EAAkB;eACT,IAAP;;;UAGEA,iBAAiB,KAArB,EAA4B;eACnBC,IAAP,CACE,8LADF;;;;;;QAQAnC,EAAEQ,QAAF,IAAcN,EAAEM,QAApB,EAA8B,OAAO,IAAP;;;;;;QAM1BR,EAAExD,IAAF,IAAU0D,EAAE1D,IAAhB,EAAsB,OAAO,IAAP;;;;;;;QAOlBwD,EAAEgB,UAAF,IAAgBd,EAAEc,UAAtB,EAAkC,OAAO,IAAP;;;QAG9B,CAAChB,EAAEpB,WAAF,CAAc0B,MAAd,CAAqBJ,EAAEtB,WAAvB,CAAL,EAA0C,OAAO,IAAP;;;WAGnC,KAAP;;;OAoEF8C,aAAa,UAAChC,KAAD,EAAQsB,UAAR,EAAuB;kBACqB,OAAK5E,KAD1B;QAC1BkB,KAD0B,WAC1BA,KAD0B;QACnBsB,WADmB,WACnBA,WADmB;QACN/B,MADM,WACNA,MADM;QACEL,IADF,WACEA,IADF;QACQgE,QADR,WACQA,QADR;QAE1B1D,KAF0B,GAEhBD,MAFgB,CAE1BC,KAF0B;;QAG5BqB,YAAYuB,MAAM1D,MAAN,IAAgB,MAAhB,GAAyB2C,MAAzB,GAAgCuC,MAAlD;QACMnC,OAAOH,YAAYwD,MAAZ,CAAmB5F,KAAK6F,cAAL,CAAoBvF,KAApB,CAAnB,CAAb;WAEE,oBAAC,SAAD;aACSN,KAAKR,MAAL,IAAe,OAAf,GAAyBQ,IAAzB,GAAgCc,KADzC;mBAEeyB,IAFf;cAGUlC,MAHV;kBAIcmE,UAJd;WAKOtB,MAAMrE,GALb;YAMQqE,KANR;cAOUlD,IAPV;gBAQYgE;MATd;;;;ACpLJ;;;;;;;;AAQA,SAAS8B,aAAT,CAAqBjH,GAArB,EAAwC;MAAdkH,GAAc,uEAARvL,MAAQ;;MAClCkK,KAAKsB,MAAL,CAAYnH,GAAZ,CAAJ,EAAsB;UACdA,IAAIA,GAAV;;;MAGI5E,KAAK8L,IAAIjL,QAAJ,CAAamL,aAAb,iBAAyCpH,GAAzC,QAAX;;MAEI,CAAC5E,EAAL,EAAS;UACD,IAAIkF,KAAJ,qCAC8BN,GAD9B,6FAAN;;;SAKK5E,EAAP;;;ACrBF;;;;;;;;;AASA,SAASiM,YAAT,CAAsBrH,GAAtB,EAA2BuB,MAA3B,EAAiD;MAAd2F,GAAc,uEAARvL,MAAQ;;MACzCP,KAAK6L,cAAYjH,GAAZ,EAAiBkH,GAAjB,CAAX;MACIf,QAAQ,CAAZ;MACIxB,UAAJ;;;;MAIM2C,WAAWJ,IAAIjL,QAAJ,CAAasL,kBAAb,CACfnM,EADe,EAEfoM,WAAWC,SAFI,EAGf;WAAMD,WAAWE,aAAjB;GAHe,EAIf,KAJe,CAAjB;;SAOQ/C,IAAI2C,SAASK,QAAT,EAAZ,EAAkC;QACxBjF,MADwB,GACbiC,EAAEiD,WADW,CACxBlF,MADwB;;QAE1B0D,MAAMD,QAAQzD,MAApB;;QAEInB,UAAU6E,GAAd,EAAmB;UACXyB,IAAItG,SAAS4E,KAAnB;aACO,EAAEhF,MAAMwD,CAAR,EAAWpD,QAAQsG,KAAK,CAAL,GAASA,CAAT,GAAa,CAAhC,EAAP;;;YAGMzB,GAAR;;;SAGK,IAAP;;;ACnCF;;;;;;;;AAQA,SAAS0B,YAAT,CAAsBC,KAAtB,EAA2C;MAAdb,GAAc,uEAARvL,MAAQ;MAEvCqM,SAFuC,GAQrCD,KARqC,CAEvCC,SAFuC;MAGvCC,YAHuC,GAQrCF,KARqC,CAGvCE,YAHuC;MAIvCC,QAJuC,GAQrCH,KARqC,CAIvCG,QAJuC;MAKvCC,WALuC,GAQrCJ,KARqC,CAKvCI,WALuC;MAMvCC,aANuC,GAQrCL,KARqC,CAMvCK,UANuC;MAOvCC,WAPuC,GAQrCN,KARqC,CAOvCM,WAPuC;;MASnCC,SAASjB,aAAaW,SAAb,EAAwBC,YAAxB,EAAsCf,GAAtC,CAAf;MACMqB,QAAQF,cAAcC,MAAd,GAAuBjB,aAAaa,QAAb,EAAuBC,WAAvB,EAAoCjB,GAApC,CAArC;MACI,CAACoB,MAAD,IAAW,CAACC,KAAhB,EAAuB,OAAO,IAAP;;MAEjBC,IAAItB,IAAIjL,QAAJ,CAAawM,WAAb,EAAV;MACMtC,QAAQiC,gBAAaG,KAAb,GAAqBD,MAAnC;MACMlC,MAAMgC,gBAAaE,MAAb,GAAsBC,KAAlC;IACEG,QAAF,CAAWvC,MAAMhF,IAAjB,EAAuBgF,MAAM5E,MAA7B;IACEoH,MAAF,CAASvC,IAAIjF,IAAb,EAAmBiF,IAAI7E,MAAvB;SACOiH,CAAP;;;ACxBF;;;;;;AAMA,AAAO,IAAMI,uBAAuB,uBAA7B;AACP,AAAO,IAAMC,4BAA0BD,oBAA1B,MAAN;AACP,IAAME,uBAAuB,iBAA7B;AACA,IAAMC,uBAAqBD,oBAArB,MAAN;AACA,IAAME,4BAAN;AACA,IAAMC,gBAAgB,mBAAtB;;;;;;;;;;;AAWA,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,YAA/B,EAA6C3F,KAA7C,EAAoD;8BACG4F,uBACnDF,UADmD,EAEnDC,YAFmD,CADH;MACpCE,WADoC,yBAC1CnI,IAD0C;MACfoI,aADe,yBACvBhI,MADuB;;MAM5C5F,SAAS6N,UAAUL,UAAV,CAAf;MACQM,UAP0C,GAO3BH,WAP2B,CAO1CG,UAP0C;;MAQ9CC,YAAYD,WAAWE,OAAX,CAAmBZ,cAAnB,CAAhB;MACIxH,eAAJ;MACIJ,aAAJ;;;;MAIIuI,SAAJ,EAAe;QACP3B,QAAQpM,OAAOM,QAAP,CAAgBwM,WAAhB,EAAd;QACMmB,WAAWF,UAAUC,OAAV,CAAkBX,aAAlB,CAAjB;UACMN,QAAN,CAAekB,QAAf,EAAyB,CAAzB;UACMjB,MAAN,CAAaW,WAAb,EAA0BC,aAA1B;WACOK,QAAP;aACS7B,MAAM8B,QAAN,GAAiBnH,MAA1B;GANF,MAOO;;;QAGCoH,WAAWL,WAAWE,OAAX,CAAmBV,aAAnB,CAAjB;QACI,CAACa,QAAL,EAAe,OAAO,IAAP;gBACHA,SAAS1C,aAAT,CAAuB2B,cAAvB,CAAZ;QACI,CAACW,SAAL,EAAgB,OAAO,IAAP;WACTA,SAAP;aACSvI,KAAKyG,WAAL,CAAiBlF,MAA1B;;;;;;;MAQAnB,UAAUJ,KAAKyG,WAAL,CAAiBlF,MAA3B,IACA+G,WAAWM,YAAX,CAAwBnB,oBAAxB,CAFF,EAGE;;;;;MAKIxH,YAAYsI,UAAUM,YAAV,CAAuBlB,oBAAvB,CAAlB;MACI,CAAC1H,SAAL,EAAgB,OAAO,IAAP;;yBAEAC,UAAUnB,KAAV,CAAgBkB,SAAhB,CA/CkC;MA+C1CpB,GA/C0C,oBA+C1CA,GA/C0C;;;;;;;MAoD9C,CAACyD,MAAMxH,QAAN,CAAegO,aAAf,CAA6BjK,GAA7B,CAAL,EAAwC,OAAO,IAAP;;SAEjC;YAAA;;GAAP;;;;;;;;;;;;AAeF,SAASqJ,sBAAT,CAAgClI,IAAhC,EAAsCI,MAAtC,EAA8C;;;MAGxCJ,KAAK+I,QAAL,IAAiB,CAAjB,IAAsB/I,KAAKgJ,UAAL,CAAgBzH,MAA1C,EAAkD;QAC1C0H,SAAS7I,UAAUJ,KAAKgJ,UAAL,CAAgBzH,MAAzC;QACM8D,YAAY4D,SAAS,UAAT,GAAsB,SAAxC;QACM5J,QAAQ4J,SAAS7I,SAAS,CAAlB,GAAsBA,MAApC;WACO8I,iBAAiBlJ,IAAjB,EAAuBX,KAAvB,EAA8BgG,SAA9B,CAAP;;;;WAIOrF,KAAK+I,QAAL,IAAiB,CAAjB,IAAsB/I,KAAKgJ,UAAL,CAAgBzH,MAA7C,EAAqD;UAC7C0B,IAAIgG,SAASjJ,KAAKgJ,UAAL,CAAgBzH,MAAhB,GAAyB,CAAlC,GAAsC,CAAhD;aACO2H,iBAAiBlJ,IAAjB,EAAuBiD,CAAvB,EAA0BoC,SAA1B,CAAP;;;;aAIO4D,SAASjJ,KAAKyG,WAAL,CAAiBlF,MAA1B,GAAmC,CAA5C;;;;SAIK,EAAEvB,UAAF,EAAQI,cAAR,EAAP;;;;;;;;;;;;;AAaF,SAAS8I,gBAAT,CAA0BnJ,MAA1B,EAAkCV,KAAlC,EAAyCgG,SAAzC,EAAoD;MAC1C2D,UAD0C,GAC3BjJ,MAD2B,CAC1CiJ,UAD0C;;MAE9C9F,QAAQ8F,WAAW3J,KAAX,CAAZ;MACI4D,IAAI5D,KAAR;MACI8J,eAAe,KAAnB;MACIC,gBAAgB,KAApB;;;;SAKElG,MAAM6F,QAAN,IAAkB,CAAlB,IACC7F,MAAM6F,QAAN,IAAkB,CAAlB,IAAuB7F,MAAM8F,UAAN,CAAiBzH,MAAjB,IAA2B,CADnD,IAEC2B,MAAM6F,QAAN,IAAkB,CAAlB,IAAuB7F,MAAM2F,YAAN,CAAmB,iBAAnB,KAAyC,OAHnE,EAIE;QACIM,gBAAgBC,aAApB,EAAmC;;QAE/BnG,KAAK+F,WAAWzH,MAApB,EAA4B;qBACX,IAAf;UACIlC,QAAQ,CAAZ;kBACY,UAAZ;;;;QAIE4D,IAAI,CAAR,EAAW;sBACO,IAAhB;UACI5D,QAAQ,CAAZ;kBACY,SAAZ;;;;YAIM2J,WAAW/F,CAAX,CAAR;QACIoC,aAAa,SAAjB,EAA4BpC;QACxBoC,aAAa,UAAjB,EAA6BpC;;;SAGxBC,SAAS,IAAhB;;;AC5JF;;;;;;;;AAQA,SAASmG,SAAT,CAAmBC,MAAnB,EAA2BhH,KAA3B,EAAkC;MAC1BrI,KAAKqP,OAAOC,UAAP,IAAqBD,OAAOE,cAAvC;MACI,CAACvP,EAAL,EAAS,OAAO,IAAP;;MAEHO,SAAS6N,UAAUpO,EAAV,CAAf;;;;MAKEqP,kBAAkB9O,OAAOiP,KAAzB,IACCjP,OAAOkP,WAAP,IAAsBJ,kBAAkB9O,OAAOkP,WAFlD,EAGE;aACS;kBACKJ,OAAOE,cADZ;oBAEOF,OAAOK,WAFd;iBAGIL,OAAOM,YAHX;mBAIMN,OAAOO;KAJtB;;;gBAcEP,MA1B4B;MAqB9BC,UArB8B,WAqB9BA,UArB8B;MAsB9BzC,YAtB8B,WAsB9BA,YAtB8B;MAuB9BgD,SAvB8B,WAuB9BA,SAvB8B;MAwB9B9C,WAxB8B,WAwB9BA,WAxB8B;MAyB9BE,WAzB8B,WAyB9BA,WAzB8B;;MA2B1BC,SAASY,UAAUwB,UAAV,EAAsBzC,YAAtB,EAAoCxE,KAApC,CAAf;MACM8E,QAAQF,cAAcC,MAAd,GAAuBY,UAAU+B,SAAV,EAAqB9C,WAArB,EAAkC1E,KAAlC,CAArC;MACI,CAAC6E,MAAD,IAAW,CAACC,KAAhB,EAAuB,OAAO,IAAP;;;;;MAKnB/L,SAASC,OAAb,EAAsB;QACdyO,YAAY7D,aAAaiB,OAAOtI,GAApB,EAAyBsI,OAAO/G,MAAhC,CAAlB;QACM4J,WAAW9D,aAAakB,MAAMvI,GAAnB,EAAwBuI,MAAMhH,MAA9B,CAAjB;;aAES;kBACK2J,UAAU/J,IADf;oBAEO+J,UAAU3J,MAFjB;iBAGI4J,SAAShK,IAHb;mBAIMgK,SAAS5J;KAJxB;;;MAQIwG,QAAQ6C,MAAMQ,MAAN,CAAa;eACd9C,OAAOtI,GADO;kBAEXsI,OAAO/G,MAFI;cAGfgH,MAAMvI,GAHS;iBAIZuI,MAAMhH,MAJM;gBAKb8G,cAAc,KAAd,GAAsBD,WAAWqC,MAAX,CALT;eAMd;GANC,CAAd;;SASO1C,KAAP;;;ACnEF;;;;;;AAMA,IAAMsD,YAAY,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAAlB;;;;;;AAMA,IAAMC,YAAY3O,UAAU,CAAC,CAAChB,OAAOC,SAAP,CAAiBF,SAAjB,CAA2B6P,KAA3B,CAAiC,SAAjC,CAA9B;;;;;;;;AAQA,SAASC,mBAAT,CAA6BpQ,EAA7B,EAAiCO,MAAjC,EAAyC;MACnCuF,SAAS9F,GAAGqO,UAAhB;MACIgC,iBAAJ;;SAEO,CAACA,QAAR,EAAkB;QACZ,CAACvK,OAAOuI,UAAZ,EAAwB;;QAElBjG,QAAQ7H,OAAO+P,gBAAP,CAAwBxK,MAAxB,CAAd;QACQyK,SAJQ,GAIMnI,KAJN,CAIRmI,SAJQ;;;QAMZN,UAAUO,QAAV,CAAmBD,SAAnB,CAAJ,EAAmC;iBACtBzK,MAAX;;;;aAIOA,OAAOuI,UAAhB;;;;;;;;MAQE,CAACgC,QAAL,EAAe;WACN9P,OAAOM,QAAP,CAAgB4P,IAAvB;;;SAGKJ,QAAP;;;;;;;;;AASF,SAASK,iBAAT,CAA2BhG,SAA3B,EAAsC;MAChCwF,SAAJ,EAAe;MACX,CAACxF,UAAU4E,UAAf,EAA2B;;MAErB/O,SAAS6N,UAAU1D,UAAU4E,UAApB,CAAf;MACMe,WAAWD,oBAAoB1F,UAAU4E,UAA9B,EAA0C/O,MAA1C,CAAjB;MACMoQ,WACJN,YAAY9P,OAAOM,QAAP,CAAgB4P,IAA5B,IACAJ,YAAY9P,OAAOM,QAAP,CAAgB+P,eAF9B;MAGMC,WAAW7D,WAAWtC,SAAX,CAAjB;;MAEMiC,QAAQjC,UAAUoG,UAAV,CAAqB,CAArB,EAAwBC,UAAxB,EAAd;QACMC,QAAN,CAAeH,QAAf;MACII,aAAatE,MAAMuE,qBAAN,EAAjB;;;;;;;MAOI/P,SAAJ,EAAe;QACTwL,MAAMwE,SAAN,IAAmBF,WAAWG,GAAX,IAAkB,CAArC,IAA0CH,WAAWI,MAAX,IAAqB,CAAnE,EAAsE;UAChE1E,MAAM+C,WAAN,IAAqB,CAAzB,EAA4B;cACpBnC,MAAN,CAAaZ,MAAMgD,YAAnB,EAAiC,CAAjC;OADF,MAEO;cACCrC,QAAN,CAAeX,MAAM4C,cAArB,EAAqC5C,MAAM+C,WAAN,GAAoB,CAAzD;;;mBAGW/C,MAAMuE,qBAAN,EAAb;;UAEID,WAAWG,GAAX,IAAkB,CAAlB,IAAuBH,WAAWI,MAAX,IAAqB,CAAhD,EAAmD;YAC7C1E,MAAM2E,cAAN,GAAuBhK,MAA3B,EAAmC;uBACpBqF,MAAM2E,cAAN,GAAuB,CAAvB,CAAb;;;;;;MAMJC,cAAJ;MACIF,eAAJ;MACIG,gBAAJ;MACIC,gBAAJ;MACIC,cAAc,CAAlB;MACIC,eAAe,CAAnB;MACIC,mBAAmB,CAAvB;MACIC,mBAAmB,CAAvB;MACIC,qBAAqB,CAAzB;MACIC,wBAAwB,CAA5B;MACIC,sBAAsB,CAA1B;MACIC,uBAAuB,CAA3B;;MAEItB,QAAJ,EAAc;QACJuB,UADI,GACkD3R,MADlD,CACJ2R,UADI;QACQC,WADR,GACkD5R,MADlD,CACQ4R,WADR;QACqBC,WADrB,GACkD7R,MADlD,CACqB6R,WADrB;QACkCC,WADlC,GACkD9R,MADlD,CACkC8R,WADlC;;YAEJH,UAAR;aACSC,WAAT;cACUC,WAAV;cACUC,WAAV;GALF,MAMO;QACGC,WADH,GACwDjC,QADxD,CACGiC,WADH;QACgBC,YADhB,GACwDlC,QADxD,CACgBkC,YADhB;QAC8BC,SAD9B,GACwDnC,QADxD,CAC8BmC,SAD9B;QACyCC,UADzC,GACwDpC,QADxD,CACyCoC,UADzC;;gCAWDlS,OAAO+P,gBAAP,CAAwBD,QAAxB,CAXC;QAGHqC,cAHG,yBAGHA,cAHG;QAIHC,iBAJG,yBAIHA,iBAJG;QAKHC,eALG,yBAKHA,eALG;QAMHC,gBANG,yBAMHA,gBANG;QAOHC,UAPG,yBAOHA,UAPG;QAQHC,aARG,yBAQHA,aARG;QASHC,WATG,yBASHA,WATG;QAUHC,YAVG,yBAUHA,YAVG;;QAaCC,eAAe7C,SAASa,qBAAT,EAArB;YACQoB,WAAR;aACSC,YAAT;kBACcW,aAAa9B,GAAb,GAAmB/L,SAASqN,cAAT,EAAyB,EAAzB,CAAjC;mBACeQ,aAAaC,IAAb,GAAoB9N,SAASuN,eAAT,EAA0B,EAA1B,CAAnC;uBAEEvN,SAASqN,cAAT,EAAyB,EAAzB,IAA+BrN,SAASsN,iBAAT,EAA4B,EAA5B,CADjC;uBAGEtN,SAASuN,eAAT,EAA0B,EAA1B,IAAgCvN,SAASwN,gBAAT,EAA2B,EAA3B,CADlC;yBAEqBxN,SAASyN,UAAT,EAAqB,EAArB,CAArB;4BACwBzN,SAAS0N,aAAT,EAAwB,EAAxB,CAAxB;0BACsB1N,SAAS2N,WAAT,EAAsB,EAAtB,CAAtB;2BACuB3N,SAAS4N,YAAT,EAAuB,EAAvB,CAAvB;cACUT,SAAV;cACUC,UAAV;;;MAGIW,YAAYnC,WAAWG,GAAX,GAAiBI,OAAjB,GAA2BE,WAA7C;MACM2B,aAAapC,WAAWkC,IAAX,GAAkB1B,OAAlB,GAA4BE,YAA/C;;MAEI2B,IAAI7B,OAAR;MACI8B,IAAI/B,OAAR;;MAEI6B,aAAa5B,OAAjB,EAA0B;;QAEpB4B,aAAarB,mBAAjB;GAFF,MAGO,IACLqB,aAAapC,WAAWM,KAAxB,GAAgCM,gBAAhC,GACAJ,UAAUF,KAFL,EAGL;;QAEI8B,aAAaxB,gBAAb,GAAgCI,oBAAhC,GAAuDV,KAA3D;;;MAGE6B,YAAY5B,OAAhB,EAAyB;;QAEnB4B,YAAYtB,kBAAhB;GAFF,MAGO,IACLsB,YAAYnC,WAAWI,MAAvB,GAAgCO,gBAAhC,GACAJ,UAAUH,MAFL,EAGL;;QAGE+B,YACAxB,gBADA,GAEAG,qBAFA,GAGAd,WAAWI,MAHX,GAIAA,MALF;;;MAQEV,QAAJ,EAAc;WACL6C,QAAP,CAAgBF,CAAhB,EAAmBC,CAAnB;GADF,MAEO;aACIf,SAAT,GAAqBe,CAArB;aACSd,UAAT,GAAsBa,CAAtB;;;;ACrKJ;;;;;;AAMA,IAAM9N,UAAQC,MAAM,eAAN,CAAd;;;;;;;;IAQMgO;;;;;;;;;;;;;;;mBAqCQ9N,KAAZ,EAAmB;;;iHACXA,KADW;;UAoBnB+N,iBApBmB,GAoBC,YAAM;UAClBnT,SAAS6N,UAAU,MAAKzH,OAAf,CAAf;;aAEO9F,QAAP,CAAgB8S,gBAAhB,CACE,iBADF,EAEE,MAAKC,uBAFP;;;UAMI,CAACrS,UAAUD,UAAX,KAA0BG,iBAAiBoS,WAA/C,EAA4D;cACrDlN,OAAL,CAAagN,gBAAb,CAA8B,aAA9B,EAA6C,MAAKG,mBAAlD;;;YAGGC,eAAL;KAjCiB;;UA4DnBC,kBA5DmB,GA4DE,YAAM;YACpBD,eAAL;KA7DiB;;UAoEnBA,eApEmB,GAoED,YAAM;UACd3N,MADc,GACH,MAAKT,KADF,CACdS,MADc;UAEdiC,KAFc,GAEJjC,MAFI,CAEdiC,KAFc;UAGdqC,SAHc,GAGArC,KAHA,CAGdqC,SAHc;UAIdsC,aAJc,GAICtC,SAJD,CAIdsC,UAJc;;UAKhBzM,SAAS6N,UAAU,MAAKzH,OAAf,CAAf;UACM0I,SAAS9O,OAAO0T,YAAP,EAAf;UACQC,UAPc,GAOa7E,MAPb,CAOd6E,UAPc;UAOF5E,UAPE,GAOaD,MAPb,CAOFC,UAPE;;;;UAUlB,CAAC4E,UAAD,IAAexJ,UAAUyJ,SAA7B,EAAwC;;;;UAIpCzJ,UAAUyJ,SAAd,EAAyB;YACnB,CAAC,MAAKC,UAAL,CAAgB9E,UAAhB,CAAL,EAAkC;eAC3B+E,eAAP;cACK1N,OAAL,CAAa2N,IAAb;gBACM,iBAAN,EAAyB,EAAE5J,oBAAF,EAAa2E,cAAb,EAAzB;;;;;UAKE3E,UAAU6J,OAAd,EAAuB;;;UAGjBC,UAAU,CAAC,CAACN,UAAF,IAAgB7E,OAAOyB,UAAP,CAAkB,CAAlB,CAAhC;UACMnE,QAAQD,aAAahC,SAAb,EAAwBnK,MAAxB,CAAd;;UAEI,CAACoM,KAAL,EAAY;eACH8H,KAAP,CACE,+DADF,EAEE,EAAE/J,oBAAF,EAFF;;;;UAOM6E,cArCc,GAqC2C5C,KArC3C,CAqCd4C,cArCc;UAqCEG,WArCF,GAqC2C/C,KArC3C,CAqCE+C,WArCF;UAqCeC,YArCf,GAqC2ChD,KArC3C,CAqCegD,YArCf;UAqC6BC,SArC7B,GAqC2CjD,KArC3C,CAqC6BiD,SArC7B;;;;;;;UA2ClB4E,OAAJ,EAAa;YAERjF,kBAAkBiF,QAAQjF,cAA1B,IACCG,eAAe8E,QAAQ9E,WADxB,IAECC,gBAAgB6E,QAAQ7E,YAFzB,IAGCC,aAAa4E,QAAQ5E,SAHvB,IAICL,kBAAkBiF,QAAQ7E,YAA1B,IACCD,eAAe8E,QAAQ5E,SADxB,IAECD,gBAAgB6E,QAAQjF,cAFzB,IAGCK,aAAa4E,QAAQ9E,WARzB,EASE;;;;;;YAMCgF,GAAL,CAASC,mBAAT,GAA+B,IAA/B;aACON,eAAP;;;UAGIhF,OAAOuF,gBAAX,EAA6B;;;YAGvB5H,aAAJ,EAAgB;iBACP4H,gBAAP,CACEjI,MAAMgD,YADR,EAEEhD,MAAMiD,SAFR,EAGEjD,MAAM4C,cAHR,EAIE5C,MAAM+C,WAJR;SADF,MAOO;iBACEkF,gBAAP,CACEjI,MAAM4C,cADR,EAEE5C,MAAM+C,WAFR,EAGE/C,MAAMgD,YAHR,EAIEhD,MAAMiD,SAJR;;OAXJ,MAkBO;;eAEEiF,QAAP,CAAgBlI,KAAhB;;;;wBAIgB0C,MAAlB;;;iBAGW,YAAM;;;YAGXnO,cAAc,MAAKyF,OAAvB,EAAgC,MAAKA,OAAL,CAAawG,KAAb;cAC3BuH,GAAL,CAASC,mBAAT,GAA+B,KAA/B;OAJF;;cAOM,iBAAN,EAAyB,EAAEjK,oBAAF,EAAa2E,cAAb,EAAzB;KArKiB;;UA8KnByF,GA9KmB,GA8Kb,mBAAW;YACVnO,OAAL,GAAeA,OAAf;KA/KiB;;UA2LnByN,UA3LmB,GA2LN,kBAAU;UACbzN,OADa,SACbA,OADa;;;;UAIf3G,KAAK+U,OAAOjG,QAAP,KAAoB,CAApB,GAAwBiG,OAAO1G,UAA/B,GAA4C0G,MAAvD;aAEE/U,GAAGgV,iBAAH,KACChV,OAAO2G,OAAP,IAAkB3G,GAAGuO,OAAH,CAAW,qBAAX,MAAsC5H,OADzD,CADF;KAhMiB;;UAgSnBmN,mBAhSmB,GAgSG,iBAAS;UACzB,MAAKnO,KAAL,CAAWoE,QAAf,EAAyB;UACrB,CAAC,MAAKqK,UAAL,CAAgBa,MAAMF,MAAtB,CAAL,EAAoC;;kCAEdE,MAAMC,eAAN,EAJO;;UAItBC,WAJsB;;UAKzB,CAACA,WAAL,EAAkB;;UAEV/O,MAPqB,GAOV,MAAKT,KAPK,CAOrBS,MAPqB;;;cASrB6O,MAAMG,SAAd;aACO,uBAAL;;kBACQC,cAAN;;gBAEM1I,QAAQyC,UAAU+F,WAAV,EAAuB/O,OAAOiC,KAA9B,CAAd;mBACOiN,MAAP,CAAc;qBAAUA,OAAOC,aAAP,CAAqB5I,KAArB,CAAV;aAAd;;;;aAIG,iBAAL,CATF;aAUO,iBAAL;;kBACQ0I,cAAN;gBACM1I,SAAQyC,UAAU+F,WAAV,EAAuB/O,OAAOiC,KAA9B,CAAd;;mBAEOiN,MAAP,CAAc,kBAAU;kBAClBA,OAAOjN,KAAP,CAAamN,QAAjB,EAA2B;uBAClBC,yBAAP;eADF,MAEO;uBACEC,iBAAP,CAAyB/I,MAAzB;;aAJJ;;;;aAUG,uBAAL,CAxBF;aAyBO,YAAL;;;;;;gBAKQ9G,OACJoP,MAAMU,IAAN,IAAc,IAAd,GACIV,MAAMW,YAAN,CAAmBC,OAAnB,CAA2B,YAA3B,CADJ,GAEIZ,MAAMU,IAHZ;;gBAKI9P,QAAQ,IAAZ,EAAkB;;kBAEZwP,cAAN;;gBAEQhN,KAdS,GAcCjC,MAdD,CAcTiC,KAdS;gBAeTqC,SAfS,GAeKrC,KAfL,CAeTqC,SAfS;;gBAgBXiC,UAAQyC,UAAU+F,WAAV,EAAuB9M,KAAvB,CAAd;;mBAEOiN,MAAP,CAAc,kBAAU;qBACfQ,iBAAP,CAAyBnJ,OAAzB,EAAgC9G,IAAhC,EAAsC6E,UAAU9E,KAAhD;;;;kBAII8E,UAAU9E,KAAV,IAAmByC,MAAMxH,QAAN,IAAkByU,OAAOjN,KAAP,CAAaxH,QAAtD,EAAgE;uBACvDkV,MAAP,CAAc,EAAEnQ,OAAO,IAAT,EAAd;;aANJ;;;;;KApVa;;UA4WnBgO,uBA5WmB,GA4WOoC,SAAS,iBAAS;UACtC,MAAKrQ,KAAL,CAAWoE,QAAf,EAAyB;;UAEnBxJ,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;UACQkB,aAJkC,GAIhB1V,OAAOM,QAJS,CAIlCoV,aAJkC;;UAKtCA,kBAAkB,MAAKtP,OAA3B,EAAoC;;YAE/BhB,KAAL,CAAWuQ,QAAX,CAAoBjB,KAApB;KAPwB,EAQvB,GARuB,CA5WP;;UAodnBhK,UApdmB,GAodN,UAAChC,KAAD,EAAQsB,UAAR,EAAuB;wBACL,MAAK5E,KADA;UAC1BS,MAD0B,eAC1BA,MAD0B;UAClB2D,QADkB,eAClBA,QADkB;UAE1B1B,KAF0B,GAEhBjC,MAFgB,CAE1BiC,KAF0B;UAG1BxH,QAH0B,GAGAwH,KAHA,CAG1BxH,QAH0B;UAGhBsH,WAHgB,GAGAE,KAHA,CAGhBF,WAHgB;UAI1B9B,KAJ0B,GAIhBD,MAJgB,CAI1BC,KAJ0B;;UAK9BiC,OAAOzH,SAAS+K,cAAT,CAAwBvF,KAAxB,CAAX;UACI8B,WAAJ,EAAiBG,OAAOH,YAAYwD,MAAZ,CAAmBrD,IAAnB,CAAP;aAEf,oBAACmC,MAAD;eACS,IADT;gBAEUrE,MAFV;qBAGekC,IAHf;oBAIciC,UAJd;aAKOtB,MAAMrE,GALb;cAMQqE,KANR;gBAOUpI,QAPV;kBAQYkJ;QATd;KA3diB;;UAEZ2K,GAAL,GAAW,EAAX;UACKA,GAAL,CAAS9P,GAAT,GAAe,CAAf;UACK8P,GAAL,CAASC,mBAAT,GAA+B,KAA/B;;mBAEewB,OAAf,CAAuB,mBAAW;YAC3BC,OAAL,IAAgB,iBAAS;cAClBC,OAAL,CAAaD,OAAb,EAAsBnB,KAAtB;OADF;KADF;;;;;;;;;;;;;;;;;;;;;;;;;2CAkCqB;UACf1U,SAAS6N,UAAU,KAAKzH,OAAf,CAAf;;UAEIpG,MAAJ,EAAY;eACHM,QAAP,CAAgByV,mBAAhB,CACE,iBADF,EAEE,KAAK1C,uBAFP;;;;UAOE,CAACrS,UAAUD,UAAX,KAA0BG,iBAAiBoS,WAA/C,EAA4D;aACrDlN,OAAL,CAAa2P,mBAAb,CAAiC,aAAjC,EAAgD,KAAKxC,mBAArD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAyJIsC,SAASnB,OAAO;cAChB,SAAN,EAAiBmB,OAAjB;;;;UAIIA,WAAW,kBAAf,EAAmC;aAC5B1B,GAAL,CAAS9P,GAAT;;;;;UAMA,KAAK8P,GAAL,CAASC,mBAAT,KACCyB,WAAW,UAAX,IAAyBA,WAAW,QAApC,IAAgDA,WAAW,SAD5D,CADF,EAGE;;;;;;;;;UASEA,WAAW,UAAf,EAA2B;YACjBhQ,MADiB,GACN,KAAKT,KADC,CACjBS,MADiB;YAEjBiC,KAFiB,GAEPjC,MAFO,CAEjBiC,KAFiB;YAGjBqC,SAHiB,GAGHrC,KAHG,CAGjBqC,SAHiB;;YAInBnK,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;YACM1F,SAAS9O,OAAO0T,YAAP,EAAf;YACMtH,QAAQyC,UAAUC,MAAV,EAAkBhH,KAAlB,CAAd;;YAEIsE,SAASA,MAAM9C,MAAN,CAAaa,SAAb,CAAb,EAAsC;eAC/BqJ,eAAL;;;;;;UAOFqC,WAAW,WAAX,IACAA,WAAW,aADX,IAEAA,WAAW,YAFX,IAGAA,WAAW,aAHX,IAIAA,WAAW,YAJX,IAKAA,WAAW,aALX,IAMAA,WAAW,QAPb,EAQE;YACQrB,MADR,GACmBE,KADnB,CACQF,MADR;;YAEMwB,mBAAmBxB,OAAOxG,OAAP,CAAe,qBAAf,CAAzB;YACIgI,qBAAqB,KAAK5P,OAA9B,EAAuC;;;;;UAMvCyP,WAAW,eAAX,IACAA,WAAW,QADX,IAEAA,WAAW,kBAFX,IAGAA,WAAW,oBAHX,IAIAA,WAAW,QAJX,IAKAA,WAAW,OALX,IAMAA,WAAW,SANX,IAOAA,WAAW,SAPX,IAQAA,WAAW,WARX,IASAA,WAAW,SATX,IAUAA,WAAW,SAVX,IAWAA,WAAW,UAZb,EAaE;YACI,CAAC,KAAKhC,UAAL,CAAgBa,MAAMF,MAAtB,CAAL,EAAoC;;;WAGjCpP,KAAL,CAAWyQ,OAAX,EAAoBnB,KAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAwGO;;;UACCtP,KADD,GACW,IADX,CACCA,KADD;UAEC6Q,SAFD,GAE0D7Q,KAF1D,CAEC6Q,SAFD;UAEYzM,QAFZ,GAE0DpE,KAF1D,CAEYoE,QAFZ;UAEsB3D,MAFtB,GAE0DT,KAF1D,CAEsBS,MAFtB;UAE8BqQ,QAF9B,GAE0D9Q,KAF1D,CAE8B8Q,QAF9B;UAEwCC,IAFxC,GAE0D/Q,KAF1D,CAEwC+Q,IAFxC;UAE8CC,OAF9C,GAE0DhR,KAF1D,CAE8CgR,OAF9C;UAGCtO,KAHD,GAGWjC,MAHX,CAGCiC,KAHD;;UAIDuO,YAAYD,OAAlB;UACQ9V,QALD,GAKyBwH,KALzB,CAKCxH,QALD;UAKW6J,SALX,GAKyBrC,KALzB,CAKWqC,SALX;;UAMDC,UAAU9J,SAAS+J,mBAAT,CAA6BF,SAA7B,EAAwCA,UAAUmM,SAAlD,CAAhB;UACMpQ,WAAW5F,SAASmG,KAAT,CAAe6D,OAAf,GAAyB9B,GAAzB,CAA6B,UAACE,KAAD,EAAQD,CAAR,EAAc;YACpDuB,aAAa,CAAC,CAACI,OAAF,IAAaA,QAAQI,KAAR,IAAiB/B,CAA9B,IAAmCA,IAAI2B,QAAQK,GAAlE;eACO,OAAKC,UAAL,CAAgBhC,KAAhB,EAAuBsB,UAAvB,CAAP;OAFe,CAAjB;;UAKMuM,WAAWlX,eAAe4G,MAAf,CAAsB,UAACuQ,GAAD,EAAMX,OAAN,EAAkB;YACnDA,OAAJ,IAAe,OAAKA,OAAL,CAAf;eACOW,GAAP;OAFe,EAGd,EAHc,CAAjB;;UAKM3O;;iBAEK,MAFL;;oBAIQ,UAJR;;kBAMM;SAIN2B,WAAW,EAAX,GAAgB,EAAEiN,kBAAkB,2BAApB,EAVhB,EAYDrR,MAAMyC,KAZL,CAAN;;;;;UAkBM6O,aAAa/V,aAAa,KAAb,GAAqByE,MAAMsR,UAA9C;;cAEM,QAAN,EAAgB,EAAEtR,YAAF,EAAhB;;aAGE;iBAAA;qBACMmR,QADN;mCAAA;eAGO,KAAKpC,GAAL,CAAS9P,GAHhB;eAIO,KAAKkQ,GAJZ;sBAKYjU,SAAS+D,GALrB;2BAMmBmF,WAAW,IAAX,GAAkB,IANrC;8CAAA;qBAQayM,SARb;kBASU,KAAKU,MATf;mBAUW,KAAKC,OAVhB;4BAWoB,KAAKC,gBAXzB;8BAYsB,KAAKC,kBAZ3B;kBAaU,KAAKC,MAbf;iBAcS,KAAKC,KAdd;qBAea,KAAKC,SAflB;sBAgBc,KAAKC,UAhBnB;uBAiBe,KAAKC,WAjBpB;kBAkBU,KAAKC,MAlBf;mBAmBW,KAAKC,OAnBhB;qBAoBa,KAAKC,SApBlB;mBAqBW,KAAKC,OArBhB;mBAsBW,KAAKC,OAtBhB;oBAuBY,KAAK7B,QAvBjB;uBAwBevQ,MAAMqS,WAAN,GAAoB,IAApB,GAA2B,KAxB1C;sBAyBcf,UAzBd;iBA0BS7O,KA1BT;gBA2BQ2B,WAAW,IAAX,GAAkB2M,QAAQ,SA3BlC;oBA4BYD;;;;YAIV,cAAY;;gBAhCd;aAmCQ9Q,KAAL,CAAWc;OApChB;;;;;;;;;;;;;EAxckBgB,MAAMC;;;;;;AAAtB+L,QAOG9L,YAAY;eACJG,MAAMsC,IAAN,CAAWvC,UADP;YAEPC,MAAMqC,GAAN,CAAUtC,UAFH;aAGNC,MAAM/C,MAHA;UAIT+C,MAAMvC,MAAN,CAAasC,UAJJ;YAKPC,MAAMsC,IAAN,CAAWvC,UALJ;QAMXC,MAAM/C,MANK;cAOL+C,MAAMsC,IAAN,CAAWvC,UAPN;SAQVC,MAAMvC,MARI;YASPuC,MAAMC,MATC;WAURD,MAAM/C,MAVE;AAPf0O,QA0BGpK,eAAe;SACb,EADa;WAEX,KAFW;AAyfxBzJ,eAAeuW,OAAf,CAAuB,mBAAW;UACxBxO,SAAR,CAAkByO,OAAlB,IAA6BtO,MAAMmQ,IAAN,CAAWpQ,UAAxC;CADF;;AC7iBA;;;;;;;;AAQA,SAASqQ,aAAT,CAAuBjD,KAAvB,EAA8B5M,KAA9B,EAAgE;MAA3B8P,QAA2B,uEAAhB9P,MAAM8P,QAAU;;MACxD5X,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;MACM1F,SAAS9O,OAAO0T,YAAP,EAAf;MACQzL,QAHsD,GAGDH,KAHC,CAGtDG,QAHsD;MAG5CE,MAH4C,GAGDL,KAHC,CAG5CK,MAH4C;MAGpC0P,SAHoC,GAGD/P,KAHC,CAGpC+P,SAHoC;MAGzBC,QAHyB,GAGDhQ,KAHC,CAGzBgQ,QAHyB;MAGfC,SAHe,GAGDjQ,KAHC,CAGfiQ,SAHe;;MAIxDC,cAAcF,YAAYA,SAAStR,MAAzC;MACMyR,eAAeF,aAAaA,UAAUvR,MAA5C;MACMA,SAASwR,eAAeC,YAA9B;;;MAGInJ,OAAOpC,WAAP,IAAsB,CAAClG,MAA3B,EAAmC;;;;MAI7B0R,UAAUC,OAAOC,aAAP,CAAqBR,QAArB,CAAhB;MACMxL,QAAQ0C,OAAOyB,UAAP,CAAkB,CAAlB,CAAd;MACI8H,WAAWjM,MAAMkM,aAAN,EAAf;MACIC,SAASF,SAAS7J,UAAT,CAAoB,CAApB,CAAb;;;;MAIIhI,MAAJ,EAAY;QACJqG,KAAIT,MAAMoE,UAAN,EAAV;QACMxH,IAAIgP,cAAcF,QAAd,GAAyBC,SAAnC;QACMvS,OAAO8F,cAAYtC,CAAZ,EAAehJ,MAAf,CAAb;OACEwY,WAAF,CAAchT,IAAd;eACWqH,GAAEyL,aAAF,EAAX;aACSD,SAAS7J,UAAT,CAAoB6J,SAAS7J,UAAT,CAAoBzH,MAApB,GAA6B,CAAjD,EAAoD0R,UAA7D;;;;;;;;MAQE,CAAC/X,aAAaE,SAAd,KAA4B,CAAC4F,MAA7B,IAAuCyB,aAAaE,MAAxD,EAAgE;QACxDuQ,WACJb,UAAUc,UAAV,CACGC,KADH,CACS9Q,MAAMqC,SAAN,CAAgBmC,YADzB,EACuCxE,MAAMqC,SAAN,CAAgBqC,WADvD,EAEGxE,MAFH,CAEU;aAAQ6Q,KAAKxT,KAAL,CAAWqB,IAAX,KAAoB,CAA5B;KAFV,EAEyCA,IAFzC,KAEkD,CAHpD;QAIIgS,QAAJ,EAAc;UACN7L,MAAIT,MAAMoE,UAAN,EAAV;UACMhL,QAAO8F,cAAYuM,SAAZ,EAAuB7X,MAAvB,CAAb;UACE8Y,cAAF,CAAiBtT,KAAjB;iBACWqH,IAAEyL,aAAF,EAAX;eACSD,SAAS7J,UAAT,CAAoB6J,SAAS7J,UAAT,CAAoBzH,MAApB,GAA6B,CAAjD,EAAoD0R,UAA7D;;;;;;EAMH,GAAGG,KAAH,CAASG,IAAT,CAAcV,SAASW,gBAAT,CAA0B9L,mBAA1B,CAAd,EAA8D0I,OAA9D,CAAsE,cAAM;QACrEqD,YAAYC,GAAG7K,YAAH,CAAgBpB,oBAAhB,MAA0C,GAA5D;OACGhB,WAAH,GAAiBgN,YAAY,IAAZ,GAAmB,EAApC;GAFD;;;;;MAQGvY,aAAaE,SAAjB,EAA4B;QACpBuY,MAAM,GAAGP,KAAH,CAASG,IAAT,CACVV,SAASW,gBAAT,CAA0B,2BAA1B,CADU,CAAZ;QAGIpD,OAAJ,CAAY;aAAMnW,GAAG2Z,eAAH,CAAmB,iBAAnB,CAAN;KAAZ;;;;;;MAMEb,OAAOhK,QAAP,IAAmB,CAAvB,EAA0B;QAClB8K,OAAOrZ,OAAOM,QAAP,CAAgBC,aAAhB,CAA8B,MAA9B,CAAb;;;;SAIKsH,KAAL,CAAWyR,UAAX,GAAwB,KAAxB;;SAEKC,WAAL,CAAiBhB,MAAjB;aACSgB,WAAT,CAAqBF,IAArB;aACSA,IAAT;;;SAGKG,YAAP,CAAoB,qBAApB,EAA2CtB,OAA3C;;;MAGMrS,SAAS6O,MAAMF,MAAN,CAAaxG,OAAb,CAAqB,qBAArB,CAAf;MACMyL,MAAMzZ,OAAOM,QAAP,CAAgBC,aAAhB,CAA8B,KAA9B,CAAZ;MACIiZ,YAAJ,CAAiB,iBAAjB,EAAoC,IAApC;MACI3R,KAAJ,CAAU6R,QAAV,GAAqB,UAArB;MACI7R,KAAJ,CAAU+K,IAAV,GAAiB,SAAjB;;;;;MAKI/K,KAAJ,CAAU8R,MAAV,GAAmB,KAAnB;MACI9R,KAAJ,CAAU+R,OAAV,GAAoB,KAApB;MACI/R,KAAJ,CAAUgS,MAAV,GAAmB,KAAnB;MACIhS,KAAJ,CAAUgJ,GAAV,IAAmB7Q,OAAO6R,WAAP,IACjB7R,OAAOM,QAAP,CAAgB+P,eAAhB,CAAgC4B,SADlC;;MAGIsH,WAAJ,CAAgBlB,QAAhB;SACOkB,WAAP,CAAmBE,GAAnB;;;;MAIM5M,IAAI7M,OAAOM,QAAP,CAAgBwM,WAAhB,EAAV;IACEgN,kBAAF,CAAqBL,GAArB;SACO3F,eAAP;SACOQ,QAAP,CAAgBzH,CAAhB;;;SAGOkN,qBAAP,CAA6B,YAAM;WAC1BC,WAAP,CAAmBP,GAAnB;WACO3F,eAAP;WACOQ,QAAP,CAAgBlI,KAAhB;GAHF;;;AC5HF;;;;;;;;AAQA,SAAS6N,QAAT,CAAkB7T,OAAlB,EAA2B0B,KAA3B,EAAkC;MAC1BkG,UAAU5H,QAAQ4H,OAAR,CAAgB,YAAhB,CAAhB;MACI,CAACA,OAAL,EAAc,OAAO,IAAP;;MAER3J,MAAM2J,QAAQK,YAAR,CAAqB,UAArB,CAAZ;MACI,CAAChK,GAAL,EAAU,OAAO,IAAP;;MAEJmB,OAAOsC,MAAMxH,QAAN,CAAe4Z,OAAf,CAAuB7V,GAAvB,CAAb;SACOmB,QAAQ,IAAf;;;ACVF;;;;;;;;AAQA,SAAS2U,aAAT,CAAuBzF,KAAvB,EAA8B5M,KAA9B,EAAqC;MAC/B4M,MAAM0F,WAAV,EAAuB;YACb1F,MAAM0F,WAAd;;;eAGuB1F,KALU;MAK3B3B,CAL2B,UAK3BA,CAL2B;MAKxBC,CALwB,UAKxBA,CALwB;MAKrBwB,MALqB,UAKrBA,MALqB;;MAM/BzB,KAAK,IAAL,IAAaC,KAAK,IAAtB,EAA4B,OAAO,IAAP;;MAEpB1S,QAR2B,GAQdwH,KARc,CAQ3BxH,QAR2B;;MAS7BkF,OAAOyU,SAASzF,MAAT,EAAiB1M,KAAjB,CAAb;MACI,CAACtC,IAAL,EAAW,OAAO,IAAP;;;;;MAKPA,KAAKgB,MAAT,EAAiB;QACT6T,OAAO7F,OAAO7D,qBAAP,EAAb;QACM2J,aACJ9U,KAAKR,MAAL,IAAe,QAAf,GACI+N,IAAIsH,KAAKzH,IAAT,GAAgByH,KAAKzH,IAAL,GAAYyH,KAAKrJ,KAAjB,GAAyB+B,CAD7C,GAEIC,IAAIqH,KAAKxJ,GAAT,GAAewJ,KAAKxJ,GAAL,GAAWwJ,KAAKvJ,MAAhB,GAAyBkC,CAH9C;;QAKM1N,OAAOE,KAAKyE,YAAL,EAAb;QACMmC,SAAQ6C,MAAMQ,MAAN,EAAd;WACO6K,aACHlO,OAAMmO,WAAN,CAAkBja,SAASka,eAAT,CAAyBlV,KAAKjB,GAA9B,CAAlB,CADG,GAEH+H,OAAMqO,aAAN,CAAoBna,SAASoa,WAAT,CAAqBpV,KAAKjB,GAA1B,CAApB,CAFJ;;;;MAMIrE,SAAS6N,UAAU2G,MAAV,CAAf;MACI1F,eAAJ;;;MAGI9O,OAAOM,QAAP,CAAgBqa,mBAApB,EAAyC;aAC9B3a,OAAOM,QAAP,CAAgBqa,mBAAhB,CAAoC5H,CAApC,EAAuCC,CAAvC,CAAT;GADF,MAEO;QACC0G,WAAW1Z,OAAOM,QAAP,CAAgBsa,sBAAhB,CAAuC7H,CAAvC,EAA0CC,CAA1C,CAAjB;aACShT,OAAOM,QAAP,CAAgBwM,WAAhB,EAAT;WACOC,QAAP,CAAgB2M,SAASmB,UAAzB,EAAqCnB,SAAS9T,MAA9C;WACOoH,MAAP,CAAc0M,SAASmB,UAAvB,EAAmCnB,SAAS9T,MAA5C;;;;MAIIwG,QAAQyC,UAAUC,MAAV,EAAkBhH,KAAlB,CAAd;MACI,CAACsE,KAAL,EAAY,OAAO,IAAP;;SAELA,KAAP;;;AC7DF;;;;;;AAMA,IAAM0O,iBAAiB;YACX,8BADW;QAEf,WAFe;QAGf,0BAHe;QAIf,UAJe;QAKf;;;;;;;;CALR;;ACFA;;;;;;IAMQC,WAAqCD,eAArCC;IAAUC,OAA2BF,eAA3BE;IAAMC,OAAqBH,eAArBG;IAAMC,OAAeJ,eAAfI;IAAMC,OAASL,eAATK;;;;;;;;AAQpC,IAAMC,mBAAmB,kCAAzB;;;;;;;;;AASA,SAASC,gBAAT,CAA0B3G,KAA1B,EAAiC;MAC3BA,MAAM0F,WAAV,EAAuB;YACb1F,MAAM0F,WAAd;;;MAGIkB,WAAW5G,MAAMW,YAAN,IAAsBX,MAAM6G,aAA7C;MACI3D,WAAW4D,QAAQF,QAAR,EAAkBP,QAAlB,CAAf;MACIvV,OAAOgW,QAAQF,QAAR,EAAkBL,IAAlB,CAAX;MACMQ,OAAOD,QAAQF,QAAR,EAAkBN,IAAlB,CAAb;MACMU,OAAOF,QAAQF,QAAR,EAAkBJ,IAAlB,CAAb;MACI5V,OAAOkW,QAAQF,QAAR,EAAkBH,IAAlB,CAAX;MACIQ,cAAJ;;;;MAII,CAAC/D,QAAD,IAAa6D,IAAb,IAAqB,CAACA,KAAKG,OAAL,CAAa,wBAAb,CAA1B,EAAkE;QAC1DnX,UAAU2W,iBAAiB1W,IAAjB,CAAsB+W,IAAtB,CAAhB;;iCACwBhX,OAFwC;QAEzDoX,IAFyD;QAEnD3D,OAFmD;;;QAG5DA,OAAJ,EAAaN,WAAWM,OAAX;;;;;MAKX5S,IAAJ,EAAU;QACFwW,gBAAgBC,iBAAiBzW,IAAjB,CAAtB;;QAEIwW,cAAcf,QAAd,CAAJ,EAA6BnD,WAAWkE,cAAcf,QAAd,CAAX;QACzBe,cAAcb,IAAd,CAAJ,EAAyBzV,OAAOsW,cAAcb,IAAd,CAAP;QACrBa,cAAcX,IAAd,CAAJ,EAAyB7V,OAAOwW,cAAcX,IAAd,CAAP;;;;MAIvBvD,QAAJ,EAAcA,WAAWO,OAAO6D,eAAP,CAAuBpE,QAAvB,CAAX;MACVpS,IAAJ,EAAUA,OAAO2S,OAAO6D,eAAP,CAAuBxW,IAAvB,CAAP;;;;MAIN;;QAEE8V,SAASW,KAAT,IAAkBX,SAASW,KAAT,CAAelV,MAArC,EAA6C;cACnCmV,MAAMC,IAAN,CAAWb,SAASW,KAApB,EACLzT,GADK,CACD;eAAS4T,KAAKC,IAAL,IAAa,MAAb,GAAsBD,KAAKE,SAAL,EAAtB,GAAyC,IAAlD;OADC,EAELtU,MAFK,CAEE;eAAUuU,MAAV;OAFF,CAAR;KADF,MAIO,IAAIjB,SAASK,KAAT,IAAkBL,SAASK,KAAT,CAAe5U,MAArC,EAA6C;cAC1CmV,MAAMC,IAAN,CAAWb,SAASK,KAApB,CAAR;;GAPJ,CASE,OAAOa,GAAP,EAAY;QACRlB,SAASK,KAAT,IAAkBL,SAASK,KAAT,CAAe5U,MAArC,EAA6C;cACnCmV,MAAMC,IAAN,CAAWb,SAASK,KAApB,CAAR;;;;;MAKEvG,OAAO,EAAEuG,YAAF,EAAS/D,kBAAT,EAAmB6D,UAAnB,EAAyBjW,UAAzB,EAA+BkW,UAA/B,EAAqCpW,UAArC,EAAb;OACKwE,IAAL,GAAY2S,gBAAgBrH,IAAhB,CAAZ;SACOA,IAAP;;;;;;;;;;;AAWF,SAAS2G,gBAAT,CAA0BzW,IAA1B,EAAgC;MACxBoX,SAAS,oBAAf;;MAEIpX,KAAKqX,SAAL,CAAe,CAAf,EAAkBD,OAAO3V,MAAzB,KAAoC2V,MAAxC,EAAgD;WACvC,EAAEvB,MAAM7V,IAAR,EAAP;;;;;MAKE;WACKsX,KAAKrY,KAAL,CAAWe,KAAKqX,SAAL,CAAeD,OAAO3V,MAAtB,CAAX,CAAP;GADF,CAEE,OAAOyV,GAAP,EAAY;UACN,IAAI7X,KAAJ,CAAU,+CAAV,CAAN;;;;;;;;;;;AAWJ,SAAS8X,eAAT,CAAyBrH,IAAzB,EAA+B;MACzBA,KAAKwC,QAAT,EAAmB,OAAO,UAAP;MACfxC,KAAK5P,IAAT,EAAe,OAAO,MAAP;;;;;;MAMX4P,KAAKsG,IAAL,IAAatG,KAAKqG,IAAtB,EAA4B,OAAO,MAAP;MACxBrG,KAAKsG,IAAL,IAAatG,KAAK9P,IAAtB,EAA4B,OAAO,MAAP;;MAExB8P,KAAKuG,KAAL,IAAcvG,KAAKuG,KAAL,CAAW5U,MAA7B,EAAqC,OAAO,OAAP;MACjCqO,KAAKqG,IAAT,EAAe,OAAO,MAAP;MACXrG,KAAK9P,IAAT,EAAe,OAAO,MAAP;SACR,SAAP;;;;;;;;;;;;AAYF,SAASkW,OAAT,CAAiBF,QAAjB,EAA2BxR,IAA3B,EAAiC;MAC3B,CAACwR,SAASuB,KAAV,IAAmB,CAACvB,SAASuB,KAAT,CAAe9V,MAAvC,EAA+C;;;WAGtC+C,QAAQqR,IAAR,GAAeG,SAAShG,OAAT,CAAiB,MAAjB,KAA4B,IAA3C,GAAkD,IAAzD;;;;MAIIuH,QAAQX,MAAMC,IAAN,CAAWb,SAASuB,KAApB,CAAd;;SAEOA,MAAMjB,OAAN,CAAc9R,IAAd,MAAwB,CAAC,CAAzB,GAA6BwR,SAAShG,OAAT,CAAiBxL,IAAjB,KAA0B,IAAvD,GAA8D,IAArE;;;ACtJF;;;;;;IAMQqR,SAASL,eAATK;;;;;;;;;;;;;AAaR,SAAS2B,gBAAT,CAA0BpI,KAA1B,EAAiC5K,IAAjC,EAAuCH,OAAvC,EAAgD;MACxCoT,OAAOjC,eAAehR,KAAKkT,WAAL,EAAf,CAAb;;MAEI,CAACD,IAAL,EAAW;UACH,IAAIpY,KAAJ,wCAA+CoY,IAA/C,QAAN;;;MAGErI,MAAM0F,WAAV,EAAuB;YACb1F,MAAM0F,WAAd;;;MAGIkB,WAAW5G,MAAMW,YAAN,IAAsBX,MAAM6G,aAA7C;;MAEI;aACO0B,OAAT,CAAiBF,IAAjB,EAAuBpT,OAAvB;GADF,CAEE,OAAO6S,GAAP,EAAY;QACNE,SAAS,oBAAf;QACMpX,OAAOgW,SAAShG,OAAT,CAAiB6F,MAAjB,CAAb;QACI3E,MAAM,EAAV;;;QAGIlR,KAAKqX,SAAL,CAAe,CAAf,EAAkBD,OAAO3V,MAAzB,MAAqC2V,MAAzC,EAAiD;UAC3C;cACIE,KAAKrY,KAAL,CAAWe,KAAKqX,SAAL,CAAeD,OAAO3V,MAAtB,CAAX,CAAN;OADF,CAEE,OAAOrF,CAAP,EAAU;cACJ,IAAIiD,KAAJ,CACJ,wDADI,CAAN;;KAJJ,MAQO;;UAEDwW,MAAJ,IAAY7V,IAAZ;;;QAGEyX,IAAJ,IAAYpT,OAAZ;QACMnF,cAAYkY,MAAZ,GAAqBE,KAAK7X,SAAL,CAAeyR,GAAf,CAA3B;aACSyG,OAAT,CAAiB9B,MAAjB,EAAuB3W,MAAvB;;;;ACrCJ;;;;;;AAMA,IAAMS,UAAQC,MAAM,aAAN,CAAd;;;;;;;;AAQA,SAASgY,WAAT,GAAuB;MACjBC,uBAAuB,IAA3B;;;;;;;;;;WAUSC,aAAT,CAAuB1I,KAAvB,EAA8BK,MAA9B,EAAsClP,MAAtC,EAA8C;YACtC,eAAN,EAAuB,EAAE6O,YAAF,EAAvB;;UAEMI,cAAN;WACOuI,UAAP,CAAkB3I,MAAMU,IAAxB;;;;;;;;;;;WAWOuB,MAAT,CAAgBjC,KAAhB,EAAuBK,MAAvB,EAA+BlP,MAA/B,EAAuC;YAC/B,QAAN,EAAgB,EAAE6O,YAAF,EAAhB;;WAEOX,IAAP;;;;;;;;;;;WAWOuJ,OAAT,CAAiB5I,KAAjB,EAAwBK,MAAxB,EAAgClP,MAAhC,EAAwC;QAClCA,OAAOT,KAAP,CAAaoE,QAAjB,EAA2B,OAAO,IAAP;;QAEnB1B,KAH8B,GAGpBiN,MAHoB,CAG9BjN,KAH8B;QAI9BxH,QAJ8B,GAIjBwH,KAJiB,CAI9BxH,QAJ8B;;QAKhCkF,OAAOyU,SAASvF,MAAMF,MAAf,EAAuB1M,KAAvB,CAAb;QACMtB,SAAShB,SAASA,KAAKgB,MAAL,IAAelG,SAASid,aAAT,CAAuB/X,KAAKnB,GAA5B,CAAxB,CAAf;;QAEImC,MAAJ,EAAY;;;;;aAKHoG,KAAP,GAAe4Q,eAAf,CAA+BhY,IAA/B;;;YAGI,SAAN,EAAiB,EAAEkP,YAAF,EAAjB;;;;;;;;;;;WAWOqC,MAAT,CAAgBrC,KAAhB,EAAuBK,MAAvB,EAA+BlP,MAA/B,EAAuC;YAC/B,QAAN,EAAgB,EAAE6O,YAAF,EAAhB;;kBAEcA,KAAd,EAAqBK,OAAOjN,KAA5B;;;;;;;;;;;WAWOkP,KAAT,CAAetC,KAAf,EAAsBK,MAAtB,EAA8BlP,MAA9B,EAAsC;YAC9B,OAAN,EAAe,EAAE6O,YAAF,EAAf;;kBAEcA,KAAd,EAAqBK,OAAOjN,KAA5B;QACM9H,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;;;;WAIOuF,qBAAP,CAA6B,YAAM;;;UAGzBjS,KAHyB,GAGfiN,MAHe,CAGzBjN,KAHyB;UAIzBgQ,QAJyB,GAIYhQ,KAJZ,CAIzBgQ,QAJyB;UAIfC,SAJe,GAIYjQ,KAJZ,CAIfiQ,SAJe;UAIJrL,WAJI,GAIY5E,KAJZ,CAIJ4E,WAJI;;UAK3BsL,cAAcF,YAAYA,SAAStR,MAArB,IAA+BkG,WAAnD;UACMuL,eAAeF,aAAaA,UAAUvR,MAAvB,IAAiCkG,WAAtD;;UAEIsL,WAAJ,EAAiB;eACRjD,MAAP,CAAc;iBAAK0I,EAAEC,eAAF,CAAkB5F,SAASzT,GAA3B,CAAL;SAAd;OADF,MAEO,IAAI4T,YAAJ,EAAkB;eAChBlD,MAAP,CAAc;iBAAK0I,EAAEC,eAAF,CAAkB3F,UAAU1T,GAA5B,CAAL;SAAd;OADK,MAEA;eACE0Q,MAAP,CAAc;iBAAK0I,EAAEE,MAAF,EAAL;SAAd;;KAbJ;;;;;;;;;;;WA0BO1G,SAAT,CAAmBvC,KAAnB,EAA0BK,MAA1B,EAAkClP,MAAlC,EAA0C;YAClC,WAAN,EAAmB,EAAE6O,YAAF,EAAnB;;2BAEuB,IAAvB;;;;;;;;;;;WAWOwC,UAAT,CAAoBxC,KAApB,EAA2BK,MAA3B,EAAmClP,MAAnC,EAA2C;YACnC,YAAN,EAAoB,EAAE6O,YAAF,EAApB;;2BAEuB,KAAvB;;;;;;;;;;;WAWOyC,WAAT,CAAqBzC,KAArB,EAA4BK,MAA5B,EAAoClP,MAApC,EAA4C;YACpC,aAAN,EAAqB,EAAE6O,YAAF,EAArB;;2BAEuB,IAAvB;;QAEQ5M,KALkC,GAKxBiN,MALwB,CAKlCjN,KALkC;QAMlCxH,QANkC,GAMrBwH,KANqB,CAMlCxH,QANkC;;QAOpCkF,OAAOyU,SAASvF,MAAMF,MAAf,EAAuB1M,KAAvB,CAAb;QACMtB,SAAShB,SAASA,KAAKgB,MAAL,IAAelG,SAASid,aAAT,CAAuB/X,KAAKnB,GAA5B,CAAxB,CAAf;;QAEImC,MAAJ,EAAY;UACJ0R,UAAUC,OAAOC,aAAP,CAAqB5S,IAArB,EAA2B,EAAEoY,cAAc,IAAhB,EAA3B,CAAhB;uBACiBlJ,KAAjB,EAAwB,MAAxB,EAAgCwD,OAAhC;KAFF,MAGO;UACGN,QADH,GACgB9P,KADhB,CACG8P,QADH;;UAECM,WAAUC,OAAOC,aAAP,CAAqBR,QAArB,CAAhB;uBACiBlD,KAAjB,EAAwB,UAAxB,EAAoCwD,QAApC;;;;;;;;;;;;WAYKd,MAAT,CAAgB1C,KAAhB,EAAuBK,MAAvB,EAA+BlP,MAA/B,EAAuC;YAC/B,QAAN,EAAgB,EAAE6O,YAAF,EAAhB;;QAEQ5M,KAH6B,GAGnBiN,MAHmB,CAG7BjN,KAH6B;QAI7BxH,QAJ6B,GAILwH,KAJK,CAI7BxH,QAJ6B;QAInB6J,SAJmB,GAILrC,KAJK,CAInBqC,SAJmB;;QAK/BnK,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;QACIA,SAAS2F,cAAczF,KAAd,EAAqB5M,KAArB,CAAb;QACI,CAAC0M,MAAL,EAAa;;QAEP8G,WAAWD,iBAAiB3G,KAAjB,CAAjB;QACQ5K,IAV6B,GAUEwR,QAVF,CAU7BxR,IAV6B;QAUvB8N,QAVuB,GAUE0D,QAVF,CAUvB1D,QAVuB;QAUbpS,IAVa,GAUE8V,QAVF,CAUb9V,IAVa;QAUPF,IAVO,GAUEgW,QAVF,CAUPhW,IAVO;;;WAY9BsH,KAAP;;;;QAKEuQ,wBACAhT,UAAUhC,MAAV,IAAoBqM,OAAOrM,MAD3B,IAEAgC,UAAUkF,SAAV,GAAsBmF,OAAOnF,SAH/B,EAIE;eACSmF,OAAOqJ,IAAP,CACP1T,UAAUlC,QAAV,IAAsBkC,UAAUhC,MAAhC,GACI,IAAIgC,UAAUkF,SAAd,GAA0BlF,UAAUgF,WADxC,GAEI,IAAIhF,UAAUkF,SAHX,CAAT;;;QAOE8N,oBAAJ,EAA0B;aACjBQ,MAAP;;;WAGKnI,MAAP,CAAchB,MAAd;;QAEI1K,QAAQ,MAAR,IAAkBA,QAAQ,MAA9B,EAAsC;oBACd0K,MADc;UAC5BnI,SAD4B,WAC5BA,SAD4B;;UAEhCkR,gBAAgBjd,SAASid,aAAT,CAAuBlR,SAAvB,CAApB;;UAEIkR,aAAJ,EAAmB;YACbvU,IAAI1I,SAAS4Z,OAAT,CAAiB7N,SAAjB,CAAR;;eAEOkR,aAAP,EAAsB;cAChBjd,SAASoa,WAAT,CAAqB1R,EAAE3E,GAAvB,CAAJ;cACI,CAAC2E,CAAL,EAAQ;0BACQ1I,SAASid,aAAT,CAAuBvU,EAAE3E,GAAzB,CAAhB;;;YAGE2E,CAAJ,EAAO+L,OAAO+I,iBAAP,CAAyB9U,CAAzB;;;UAGL1D,IAAJ,EAAU;aACHyY,KAAL,CAAW,IAAX,EAAiBnI,OAAjB,CAAyB,UAACoI,IAAD,EAAOvV,CAAP,EAAa;cAChCA,IAAI,CAAR,EAAWsM,OAAOkJ,UAAP;iBACJZ,UAAP,CAAkBW,IAAlB;SAFF;;;;QAOAlU,QAAQ,UAAZ,EAAwB;aACfoU,cAAP,CAAsBtG,QAAtB;;;QAGE9N,QAAQ,MAAR,IAAkBqU,MAAMC,OAAN,CAAc5Y,IAAd,CAAtB,EAA2C;aAClC6Y,WAAP,CAAmB7Y,KAAK8Y,aAAL,EAAnB,EAAyCZ,eAAzC,CAAyDlY,KAAKnB,GAA9D;;;QAGEyF,QAAQ,MAAR,IAAkByU,OAAOC,QAAP,CAAgBhZ,IAAhB,CAAtB,EAA6C;aACpCiZ,YAAP,CAAoBjZ,KAAK8Y,aAAL,EAApB,EAA0CZ,eAA1C,CAA0DlY,KAAKnB,GAA/D;;;;;;;QAOIiL,YAAYhP,SAAS4Z,OAAT,CAAiB1F,OAAOjI,QAAxB,CAAlB;QACM9M,KAAK6L,cAAYgE,SAAZ,EAAuBtP,MAAvB,CAAX;QACI,CAACP,EAAL,EAAS;;OAENif,aAAH,CACE,IAAIC,UAAJ,CAAe,SAAf,EAA0B;YAClB3e,MADkB;eAEf,IAFe;kBAGZ;KAHd,CADF;;;;;;;;;;WAgBOqX,OAAT,CAAiB3C,KAAjB,EAAwBK,MAAxB,EAAgClP,MAAhC,EAAwC;YAChC,SAAN,EAAiB,EAAE6O,YAAF,EAAjB;;QAEM1U,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;QACQ1M,KAJ8B,GAIpBiN,MAJoB,CAI9BjN,KAJ8B;;;;QAOhCgH,SAAS9O,OAAO0T,YAAP,EAAf;QACQ3E,UAR8B,GAQDD,MARC,CAQ9BC,UAR8B;QAQlBzC,YARkB,GAQDwC,MARC,CAQlBxC,YARkB;;QAShCsS,QAAQrR,UAAUwB,UAAV,EAAsBzC,YAAtB,EAAoCxE,KAApC,CAAd;QACI,CAAC8W,KAAL,EAAY;;;QAGJte,QAb8B,GAaNwH,KAbM,CAa9BxH,QAb8B;QAapB6J,SAboB,GAaNrC,KAbM,CAapBqC,SAboB;;QAchC3E,OAAOlF,SAASue,aAAT,CAAuBD,MAAMva,GAA7B,CAAb;QACMiC,QAAQhG,SAASwe,eAAT,CAAyBtZ,KAAKnB,GAA9B,CAAd;QACMkC,SAASf,KAAK+C,SAAL,EAAf;QACM5B,WAAWL,MAAMM,WAAN,EAAjB;QACMmY,WAAWxY,OAAO6C,IAAP,EAAjB;QACIoB,QAAQ,CAAZ;QACIC,MAAM,CAAV;;QAEM1E,OACJQ,OAAOF,IAAP,CAAY,aAAK;cACPoE,GAAR;aACOoC,EAAEvH,IAAF,CAAOyB,MAAd;UACI0D,OAAOmU,MAAMhZ,MAAjB,EAAyB,OAAO,IAAP;KAH3B,KAIMmZ,QALR;;;QAQQzZ,IA9B8B,GA8BrBS,IA9BqB,CA8B9BT,IA9B8B;QA+BhC2G,WA/BgC,GA+BhB8C,UA/BgB,CA+BhC9C,WA/BgC;;QAgChCjF,aAAaxB,QAAQmB,QAA3B;QACMM,aAAalB,QAAQgZ,QAA3B;QACMlY,WAAWoF,YAAYnF,MAAZ,CAAmBmF,YAAYlF,MAAZ,GAAqB,CAAxC,CAAjB;;;;;QAKIC,cAAcC,UAAd,IAA4BJ,YAAY,IAA5C,EAAkD;oBAClCoF,YAAY2M,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAd;;;;QAIE3M,eAAe3G,IAAnB,EAAyB;;;QAGnB0Z,QAAQ/S,YAAYlF,MAAZ,GAAqBzB,KAAKyB,MAAxC;QACMkY,YAAY9U,UAAU+U,aAAV,GAA0BrB,IAA1B,CAA+BmB,KAA/B,CAAlB;QACMG,SAAShV,UACZiV,YADY,CACCR,MAAMva,GADP,EACYmG,KADZ,EAEZ6U,WAFY,CAEAT,MAAMva,GAFN,EAEWoG,GAFX,CAAf;;;WAKO8K,iBAAP,CAAyB4J,MAAzB,EAAiClT,WAAjC,EAA8ClG,KAAKV,KAAnD,EAA0DmQ,MAA1D,CAAiEyJ,SAAjE;;;;;;;;;;;WAWO3H,SAAT,CAAmB5C,KAAnB,EAA0BK,MAA1B,EAAkClP,MAAlC,EAA0C;YAClC,WAAN,EAAmB,EAAE6O,YAAF,EAAnB;;QAEQ5M,KAHgC,GAGtBiN,MAHsB,CAGhCjN,KAHgC;;;;;;QAQpCwX,QAAQ7d,WAAR,CAAoBiT,KAApB,KAA8B,CAAC1T,MAAnC,EAA2C;aAClC8G,MAAMmN,QAAN,GACHF,OAAOG,yBAAP,EADG,GAEHH,OAAOkJ,UAAP,EAFJ;;;QAKEqB,QAAQnd,oBAAR,CAA6BuS,KAA7B,KAAuC,CAAC1T,MAA5C,EAAoD;aAC3C+T,OAAOwK,kBAAP,EAAP;;;QAGED,QAAQld,mBAAR,CAA4BsS,KAA5B,KAAsC,CAAC1T,MAA3C,EAAmD;aAC1C+T,OAAOyK,iBAAP,EAAP;;;QAGEF,QAAQ/c,oBAAR,CAA6BmS,KAA7B,CAAJ,EAAyC;aAChCK,OAAO0K,kBAAP,EAAP;;;QAGEH,QAAQ9c,mBAAR,CAA4BkS,KAA5B,CAAJ,EAAwC;aAC/BK,OAAO2K,iBAAP,EAAP;;;QAGEJ,QAAQzc,oBAAR,CAA6B6R,KAA7B,CAAJ,EAAyC;aAChCK,OAAO4K,kBAAP,EAAP;;;QAGEL,QAAQxc,mBAAR,CAA4B4R,KAA5B,CAAJ,EAAwC;aAC/BK,OAAO6K,iBAAP,EAAP;;;QAGEN,QAAQtb,IAAR,CAAa0Q,KAAb,CAAJ,EAAyB;aAChBK,OAAO8K,IAAP,EAAP;;;QAGEP,QAAQzb,IAAR,CAAa6Q,KAAb,CAAJ,EAAyB;aAChBK,OAAO+K,IAAP,EAAP;;;;;;QAMER,QAAQ/b,sBAAR,CAA+BmR,KAA/B,CAAJ,EAA2C;YACnCI,cAAN;aACOC,OAAOgL,oBAAP,EAAP;;;QAGET,QAAQ9b,qBAAR,CAA8BkR,KAA9B,CAAJ,EAA0C;YAClCI,cAAN;aACOC,OAAOiL,mBAAP,EAAP;;;QAGEV,QAAQ3b,oBAAR,CAA6B+Q,KAA7B,CAAJ,EAAyC;YACjCI,cAAN;aACOC,OAAOkL,kBAAP,EAAP;;;QAGEX,QAAQ1b,mBAAR,CAA4B8Q,KAA5B,CAAJ,EAAwC;YAChCI,cAAN;aACOC,OAAOmL,iBAAP,EAAP;;;;;;QAMEZ,QAAQnc,sBAAR,CAA+BuR,KAA/B,CAAJ,EAA2C;UACjCpU,QADiC,GACewH,KADf,CACjCxH,QADiC;UACvB2U,QADuB,GACenN,KADf,CACvBmN,QADuB;UACbkL,YADa,GACerY,KADf,CACbqY,YADa;UACCtI,SADD,GACe/P,KADf,CACC+P,SADD;;UAEnCuI,mBACJD,gBAAgB7f,SAASid,aAAT,CAAuB4C,aAAa9b,GAApC,CADlB;UAEI4Q,YAAYmL,gBAAZ,IAAgCvI,UAAUvS,IAAV,IAAkB,EAAtD,EAA0D;cAClDwP,cAAN;eACOC,OAAOsL,oBAAP,EAAP;;;;QAIAf,QAAQrc,qBAAR,CAA8ByR,KAA9B,CAAJ,EAA0C;UAChCpU,SADgC,GACYwH,KADZ,CAChCxH,QADgC;UACtB2U,SADsB,GACYnN,KADZ,CACtBmN,QADsB;UACZqL,QADY,GACYxY,KADZ,CACZwY,QADY;UACFzI,UADE,GACY/P,KADZ,CACF+P,SADE;;UAElC0I,eAAeD,YAAYhgB,UAASid,aAAT,CAAuB+C,SAASjc,GAAhC,CAAjC;UACI4Q,aAAYsL,YAAZ,IAA4B1I,WAAUvS,IAAV,IAAkB,EAAlD,EAAsD;cAC9CwP,cAAN;eACOC,OAAOyL,mBAAP,EAAP;;;;QAIAlB,QAAQlc,oBAAR,CAA6BsR,KAA7B,CAAJ,EAAyC;UAC/BpU,UAD+B,GACiBwH,KADjB,CAC/BxH,QAD+B;UACrB2U,UADqB,GACiBnN,KADjB,CACrBmN,QADqB;UACXkL,aADW,GACiBrY,KADjB,CACXqY,YADW;UACGtI,WADH,GACiB/P,KADjB,CACG+P,SADH;;UAEjCuI,oBACJD,iBAAgB7f,WAASid,aAAT,CAAuB4C,cAAa9b,GAApC,CADlB;UAEI4Q,cAAYmL,iBAAZ,IAAgCvI,YAAUvS,IAAV,IAAkB,EAAtD,EAA0D;cAClDwP,cAAN;eACOC,OAAO0L,kBAAP,EAAP;;;;QAIAnB,QAAQpc,mBAAR,CAA4BwR,KAA5B,CAAJ,EAAwC;UAC9BpU,UAD8B,GACcwH,KADd,CAC9BxH,QAD8B;UACpB2U,UADoB,GACcnN,KADd,CACpBmN,QADoB;UACVqL,SADU,GACcxY,KADd,CACVwY,QADU;UACAzI,WADA,GACc/P,KADd,CACA+P,SADA;;UAEhC0I,gBAAeD,aAAYhgB,WAASid,aAAT,CAAuB+C,UAASjc,GAAhC,CAAjC;UACI4Q,cAAYsL,aAAZ,IAA4B1I,YAAUvS,IAAV,IAAkB,EAAlD,EAAsD;cAC9CwP,cAAN;eACOC,OAAO2L,iBAAP,EAAP;;;;;;;;;;;;;WAaGlJ,OAAT,CAAiB9C,KAAjB,EAAwBK,MAAxB,EAAgClP,MAAhC,EAAwC;YAChC,SAAN,EAAiB,EAAE6O,YAAF,EAAjB;;QAEM4G,WAAWD,iBAAiB3G,KAAjB,CAAjB;QACQ5K,IAJ8B,GAILwR,QAJK,CAI9BxR,IAJ8B;QAIxB8N,QAJwB,GAIL0D,QAJK,CAIxB1D,QAJwB;QAIdtS,IAJc,GAILgW,QAJK,CAIdhW,IAJc;;;QAMlCwE,QAAQ,UAAZ,EAAwB;aACfoU,cAAP,CAAsBtG,QAAtB;;;QAGE9N,QAAQ,MAAR,IAAkBA,QAAQ,MAA9B,EAAsC;UAChC,CAACxE,IAAL,EAAW;UACHwC,KAF4B,GAElBiN,MAFkB,CAE5BjN,KAF4B;UAG5BxH,QAH4B,GAGQwH,KAHR,CAG5BxH,QAH4B;UAGlB6J,SAHkB,GAGQrC,KAHR,CAGlBqC,SAHkB;UAGPwW,UAHO,GAGQ7Y,KAHR,CAGP6Y,UAHO;;UAIhCA,WAAWna,MAAf,EAAuB;;UAEjBoa,eAAeD,UAArB;UACME,eAAevgB,SAASwgB,qBAAT,CAA+B3W,SAA/B,CAArB;UACM4W,OAAOC,MAAMC,WAAN,CAAkB3b,IAAlB,EAAwB,EAAEsb,0BAAF,EAAgBC,0BAAhB,EAAxB,EACVvgB,QADH;aAEO4d,cAAP,CAAsB6C,IAAtB;;;;;;;;;;;;WAYKpL,QAAT,CAAkBjB,KAAlB,EAAyBK,MAAzB,EAAiClP,MAAjC,EAAyC;YACjC,UAAN,EAAkB,EAAE6O,YAAF,EAAlB;;QAEM1U,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;QACQ1M,KAJ+B,GAIrBiN,MAJqB,CAI/BjN,KAJ+B;QAK/BxH,QAL+B,GAKlBwH,KALkB,CAK/BxH,QAL+B;;QAMjCwO,SAAS9O,OAAO0T,YAAP,EAAf;;;QAGI,CAAC5E,OAAO6E,UAAZ,EAAwB;aACfI,IAAP;;;;;QAKE3H,QAAQyC,UAAUC,MAAV,EAAkBhH,KAAlB,CAAZ;QACI,CAACsE,KAAL,EAAY;;iBAE+CA,KAlBpB;QAkB/BC,SAlB+B,UAkB/BA,SAlB+B;QAkBpBC,YAlBoB,UAkBpBA,YAlBoB;QAkBNC,QAlBM,UAkBNA,QAlBM;QAkBIC,WAlBJ,UAkBIA,WAlBJ;;QAmBjC0U,aAAa5gB,SAAS4Z,OAAT,CAAiB7N,SAAjB,CAAnB;QACM8U,YAAY7gB,SAAS4Z,OAAT,CAAiB3N,QAAjB,CAAlB;QACM6U,eAAe9gB,SAAS+gB,gBAAT,CAA0BhV,SAA1B,CAArB;QACMiV,cAAchhB,SAAS+gB,gBAAT,CAA0B9U,QAA1B,CAApB;QACMgV,aAAajhB,SAASwe,eAAT,CAAyBvS,QAAzB,CAAnB;QACMiV,cAAclhB,SAASwe,eAAT,CAAyBzS,SAAzB,CAApB;;;;;;;;;QAUEmV,eACA,CAACA,YAAYhb,MADb,IAEA8F,gBAAgB,CAFhB,IAGAiV,UAHA,IAIAA,WAAW/a,MAJX,IAKAgG,eAAe,CANjB,EAOE;cACQJ,MAAMqV,GAAN,CAAU,aAAV,EAAyB,CAAzB,CAAR;;;;;;QAOAL,gBACA,CAACA,aAAa5a,MADd,IAEA8F,gBAAgB4U,WAAW5b,IAAX,CAAgByB,MAHlC,EAIE;UACMT,QAAQhG,SAASwe,eAAT,CAAyBzS,SAAzB,CAAd;UACMqV,OAAOpb,MAAMoU,WAAN,CAAkBrO,SAAlB,CAAb;UACIqV,IAAJ,EAAUtV,QAAQA,MAAMgT,YAAN,CAAmBsC,KAAKrd,GAAxB,EAA6B,CAA7B,CAAR;;;QAIVid,eACA,CAACA,YAAY9a,MADb,IAEAgG,eAAe2U,UAAU7b,IAAV,CAAeyB,MAHhC,EAIE;UACMT,SAAQhG,SAASwe,eAAT,CAAyBvS,QAAzB,CAAd;UACMmV,QAAOpb,OAAMoU,WAAN,CAAkBnO,QAAlB,CAAb;UACImV,KAAJ,EAAUtV,QAAQA,MAAMiT,WAAN,CAAkBqC,MAAKrd,GAAvB,EAA4B,CAA5B,CAAR;;;YAGJ+H,MAAMuV,SAAN,CAAgBrhB,QAAhB,CAAR;WACOkV,MAAP,CAAcpJ,KAAd;;;;;;;;;;;WAWOwV,YAAT,CAAsBxc,KAAtB,EAA6BS,MAA7B,EAAqC;QAC7B0Q,WAAWlX,eAAe4G,MAAf,CAAsB,UAACuQ,GAAD,EAAMX,OAAN,EAAkB;UACnDA,OAAJ,IAAehQ,OAAOgQ,OAAP,CAAf;aACOW,GAAP;KAFe,EAGd,EAHc,CAAjB;;WAME,oBAAC,OAAD,eACMD,QADN;mBAEenR,MAAMqS,WAFrB;iBAGarS,MAAM6Q,SAHnB;gBAIY7Q,MAAMc,QAJlB;cAKUL,MALV;gBAMYT,MAAMoE,QANlB;YAOQpE,MAAM+Q,IAPd;kBAQc/Q,MAAMsR,UARpB;aASStR,MAAMyC,KATf;gBAUYzC,MAAM8Q,QAVlB;eAWW9Q,MAAMgR;OAZnB;;;;;;;;;;WAwBO1L,UAAT,CAAoBtF,KAApB,EAA2B;QACjBuF,UADiB,GACcvF,KADd,CACjBuF,UADiB;QACLzE,QADK,GACcd,KADd,CACLc,QADK;QACKV,IADL,GACcJ,KADd,CACKI,IADL;;QAErBA,KAAKR,MAAL,IAAe,OAAf,IAA0BQ,KAAKR,MAAL,IAAe,QAA7C,EAAuD;QACjDyE,MAAMjE,KAAKR,MAAL,IAAe,OAAf,GAAyB,KAAzB,GAAiC,MAA7C;QACM6C,QAAQ,EAAE6R,UAAU,UAAZ,EAAd;WAEE;SAAA;mBAAS/O,UAAT,IAAqB,OAAO9C,KAA5B;;KADF;;;;;;;;;;WAcOga,iBAAT,CAA2Bzc,KAA3B,EAAkC;QACxBS,MADwB,GACPT,KADO,CACxBS,MADwB;QAChBL,IADgB,GACPJ,KADO,CAChBI,IADgB;;QAE5B,CAACK,OAAOT,KAAP,CAAa4F,WAAlB,EAA+B;QAC3BnF,OAAOic,KAAP,CAAaC,WAAjB,EAA8B;QAC1Bvc,KAAKR,MAAL,IAAe,OAAnB,EAA4B;QACxB,CAAC2C,KAAKqa,UAAL,CAAgBxc,KAAKiB,KAArB,CAAL,EAAkC;QAC9BjB,KAAKF,IAAL,IAAa,EAAjB,EAAqB;QACjBO,OAAOiC,KAAP,CAAaxH,QAAb,CAAsB2hB,SAAtB,GAAkCvb,IAAlC,GAAyC,CAA7C,EAAgD;;QAE1CmB,QAAQ;qBACG,MADH;eAEH,cAFG;aAGL,GAHK;gBAIF,MAJE;kBAKA,QALA;eAMH;KANX;;WAUE;;QAAM,iBAAiB,KAAvB,EAA8B,OAAOA,KAArC;aACUzC,KAAP,CAAa4F;KAFlB;;;;;;;;;SAaK;gCAAA;kBAAA;oBAAA;kBAAA;gBAAA;wBAAA;0BAAA;4BAAA;kBAAA;oBAAA;wBAAA;oBAAA;sBAAA;8BAAA;0BAAA;;GAAP;;;ACrpBF;;;;;;AAMA,IAAM/F,UAAQC,MAAM,cAAN,CAAd;;;;;;;;AAQA,SAASgd,YAAT,GAAwB;MAClBxM,gBAAgB,IAApB;MACIyM,mBAAmB,CAAvB;MACIJ,cAAc,KAAlB;MACIK,YAAY,KAAhB;MACIC,aAAa,KAAjB;;;;;;;;;;WAUSjF,aAAT,CAAuB1I,KAAvB,EAA8BK,MAA9B,EAAsClP,MAAtC,EAA8C;QACxCA,OAAOT,KAAP,CAAaoE,QAAjB,EAA2B,OAAO,IAAP;;;;;;;;;;QAUvB,CAACxI,UAAUD,UAAX,KAA0BG,iBAAiBoS,WAA/C,EAA4D,OAAO,IAAP;;YAEtD,eAAN,EAAuB,EAAEoB,YAAF,EAAvB;;;;;;;;;;;WAWOiC,MAAT,CAAgBjC,KAAhB,EAAuBK,MAAvB,EAA+BlP,MAA/B,EAAuC;QACjCuc,SAAJ,EAAe,OAAO,IAAP;QACXvc,OAAOT,KAAP,CAAaoE,QAAjB,EAA2B,OAAO,IAAP;;QAEnB1B,KAJ6B,GAInBiN,MAJmB,CAI7BjN,KAJ6B;QAK7Bwa,aAL6B,GAKH5N,KALG,CAK7B4N,aAL6B;QAKd9N,MALc,GAKHE,KALG,CAKdF,MALc;;QAM/BxU,SAAS6N,UAAU2G,MAAV,CAAf;;;;;;QAMIkB,iBAAiB1V,OAAOM,QAAP,CAAgBoV,aAArC,EAAoD,OAAO,IAAP;;;;QAIhD4M,aAAJ,EAAmB;UACX7iB,KAAK6L,YAAYzF,MAAZ,CAAX;;;;;UAKIyc,iBAAiB7iB,EAArB,EAAyB,OAAO,IAAP;;;;UAIrB6iB,cAAclU,YAAd,CAA2B,mBAA3B,CAAJ,EAAqD,OAAO,IAAP;;;;;UAK/C5I,OAAOyU,SAASqI,aAAT,EAAwBxa,KAAxB,CAAb;UACIrI,GAAG8iB,QAAH,CAAYD,aAAZ,KAA8B9c,IAA9B,IAAsC,CAACA,KAAKgB,MAAhD,EAAwD,OAAO,IAAP;;;YAGpD,QAAN,EAAgB,EAAEkO,YAAF,EAAhB;;;;;;;;;;WAUO8N,QAAT,CAAkBzN,MAAlB,EAA0BlP,MAA1B,EAAkC;QACxBiC,KADwB,GACdiN,MADc,CACxBjN,KADwB;;;;;;QAM5BA,MAAM2a,MAAN,IAAgB5c,OAAO4c,MAA3B,EAAmC;aAC1BC,QAAP,CAAgB,EAAED,QAAQ5c,OAAO4c,MAAjB,EAAhB,EAA2C,EAAEE,MAAM,KAAR,EAA3C,EAA4DhB,SAA5D;;;YAGI,UAAN;;;;;;;;;;;WAWO9K,gBAAT,CAA0BnC,KAA1B,EAAiCK,MAAjC,EAAyClP,MAAzC,EAAiD;QACzCmD,IAAImZ,gBAAV;;;;;WAKOpI,qBAAP,CAA6B,YAAM;UAC7BoI,mBAAmBnZ,CAAvB,EAA0B;oBACZ,KAAd;;;;;aAKO4Z,QAAP,CAAgB,EAAEb,aAAa,KAAf,EAAhB;KAPF;;YAUM,kBAAN,EAA0B,EAAErN,YAAF,EAA1B;;;;;;;;;;;WAWOoC,kBAAT,CAA4BpC,KAA5B,EAAmCK,MAAnC,EAA2ClP,MAA3C,EAAmD;kBACnC,IAAd;;;;;;WAMO+c,QAAP,CAAgB,EAAEb,aAAa,IAAf,EAAhB;;YAEM,oBAAN,EAA4B,EAAErN,YAAF,EAA5B;;;;;;;;;;;WAWOqC,MAAT,CAAgBrC,KAAhB,EAAuBK,MAAvB,EAA+BlP,MAA/B,EAAuC;QAC/B7F,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;gBACY,IAAZ;WACOuF,qBAAP,CAA6B;aAAOqI,YAAY,KAAnB;KAA7B;;YAEM,QAAN,EAAgB,EAAE1N,YAAF,EAAhB;;;;;;;;;;;WAWOsC,KAAT,CAAetC,KAAf,EAAsBK,MAAtB,EAA8BlP,MAA9B,EAAsC;QAChCA,OAAOT,KAAP,CAAaoE,QAAjB,EAA2B,OAAO,IAAP;;QAErBxJ,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;gBACY,IAAZ;WACOuF,qBAAP,CAA6B;aAAOqI,YAAY,KAAnB;KAA7B;;YAEM,OAAN,EAAe,EAAE1N,YAAF,EAAf;;;;;;;;;;;WAWOuC,SAAT,CAAmBvC,KAAnB,EAA0BK,MAA1B,EAAkClP,MAAlC,EAA0C;iBAC3B,KAAb;;YAEM,WAAN,EAAmB,EAAE6O,YAAF,EAAnB;;;;;;;;;;;WAWOmO,WAAT,CAAqBnO,KAArB,EAA4BK,MAA5B,EAAoClP,MAApC,EAA4C;YACpC,aAAN,EAAqB,EAAE6O,YAAF,EAArB;;;;;;;;;;;WAWOoO,UAAT,CAAoBpO,KAApB,EAA2BK,MAA3B,EAAmClP,MAAnC,EAA2C;YACnC,YAAN,EAAoB,EAAE6O,YAAF,EAApB;;;;;;;;;;;WAWOqO,WAAT,CAAqBrO,KAArB,EAA4BK,MAA5B,EAAoClP,MAApC,EAA4C;YACpC,aAAN,EAAqB,EAAE6O,YAAF,EAArB;;;;;;;;;;;WAWOwC,UAAT,CAAoBxC,KAApB,EAA2BK,MAA3B,EAAmClP,MAAnC,EAA2C;;;;;QAKnCL,OAAOyU,SAASvF,MAAMF,MAAf,EAAuB3O,OAAOiC,KAA9B,CAAb;QACItC,KAAKgB,MAAT,EAAiBkO,MAAMI,cAAN;;;QAGbuN,UAAJ,EAAgB,OAAO,IAAP;;iBAEH,IAAb;UACMjI,WAAN,CAAkB/E,YAAlB,CAA+B2N,UAA/B,GAA4C,MAA5C;;YAEM,YAAN,EAAoB,EAAEtO,YAAF,EAApB;;;;;;;;;;;WAWOyC,WAAT,CAAqBzC,KAArB,EAA4BK,MAA5B,EAAoClP,MAApC,EAA4C;iBAC7B,IAAb;;YAEM,aAAN,EAAqB,EAAE6O,YAAF,EAArB;;;;;;;;;;;WAWO0C,MAAT,CAAgB1C,KAAhB,EAAuBK,MAAvB,EAA+BlP,MAA/B,EAAuC;;QAEjCA,OAAOT,KAAP,CAAaoE,QAAjB,EAA2B,OAAO,IAAP;;;UAGrBsL,cAAN;;YAEM,QAAN,EAAgB,EAAEJ,YAAF,EAAhB;;;;;;;;;;;WAWOkC,OAAT,CAAiBlC,KAAjB,EAAwBK,MAAxB,EAAgClP,MAAhC,EAAwC;QAClCuc,SAAJ,EAAe,OAAO,IAAP;QACXvc,OAAOT,KAAP,CAAaoE,QAAjB,EAA2B,OAAO,IAAP;;QAErB/J,KAAK6L,YAAYzF,MAAZ,CAAX;;;QAGM7F,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;oBACgBxU,OAAOM,QAAP,CAAgBoV,aAAhC;;;;;QAKI/U,cAAc+T,MAAMF,MAAN,IAAgB/U,EAAlC,EAAsC;SACjCmN,KAAH;aACO,IAAP;;;YAGI,SAAN,EAAiB,EAAE8H,YAAF,EAAjB;;;;;;;;;;;WAWO2C,OAAT,CAAiB3C,KAAjB,EAAwBK,MAAxB,EAAgClP,MAAhC,EAAwC;QAClCkc,WAAJ,EAAiB,OAAO,IAAP;QACbhN,OAAOjN,KAAP,CAAa8L,SAAjB,EAA4B,OAAO,IAAP;;YAEtB,SAAN,EAAiB,EAAEc,YAAF,EAAjB;;;;;;;;;;;WAWO4C,SAAT,CAAmB5C,KAAnB,EAA0BK,MAA1B,EAAkClP,MAAlC,EAA0C;QACpCA,OAAOT,KAAP,CAAaoE,QAAjB,EAA2B,OAAO,IAAP;;;;;QAKvBuY,WAAJ,EAAiB;UACXzC,QAAQlb,SAAR,CAAkBsQ,KAAlB,CAAJ,EAA8BA,MAAMI,cAAN;aACvB,IAAP;;;;;QAKEwK,QAAQnb,eAAR,CAAwBuQ,KAAxB,KAAkC,CAAC1T,MAAvC,EAA+C;YACvC8T,cAAN;;;YAGI,WAAN,EAAmB,EAAEJ,YAAF,EAAnB;;;;;;;;;;;WAWO8C,OAAT,CAAiB9C,KAAjB,EAAwBK,MAAxB,EAAgClP,MAAhC,EAAwC;QAClCA,OAAOT,KAAP,CAAaoE,QAAjB,EAA2B,OAAO,IAAP;;;UAGrBsL,cAAN;;YAEM,SAAN,EAAiB,EAAEJ,YAAF,EAAjB;;;;;;;;;;;WAWOiB,QAAT,CAAkBjB,KAAlB,EAAyBK,MAAzB,EAAiClP,MAAjC,EAAyC;QACnCuc,SAAJ,EAAe,OAAO,IAAP;QACXL,WAAJ,EAAiB,OAAO,IAAP;QACblc,OAAOT,KAAP,CAAaoE,QAAjB,EAA2B,OAAO,IAAP;;;QAGrBxJ,SAAS6N,UAAU6G,MAAMF,MAAhB,CAAf;oBACgBxU,OAAOM,QAAP,CAAgBoV,aAAhC;;YAEM,UAAN,EAAkB,EAAEhB,YAAF,EAAlB;;;;;;;;;SASK;gCAAA;kBAAA;sBAAA;sCAAA;0CAAA;kBAAA;gBAAA;wBAAA;4BAAA;0BAAA;4BAAA;0BAAA;4BAAA;kBAAA;oBAAA;oBAAA;wBAAA;oBAAA;;GAAP;;;AC3aF;;;;;;AAMA,SAASuO,IAAT,GAAgB;;ACQhB;;;;;;AAMA,IAAMhe,UAAQC,MAAM,cAAN,CAAd;;;;;;;;IAQMge;;;;;;;;;;;;;;;kBA6CQ9d,KAAZ,EAAmB;;;+GACXA,KADW;;;;UAEZ0c,KAAL,GAAa,EAAb;UACK3N,GAAL,GAAW,EAAX;UACKA,GAAL,CAASgP,OAAT,GAAmB,CAAnB;UACKhP,GAAL,CAASiP,QAAT,GAAoB,CAApB;;;QAGMC,UAAU,MAAKC,cAAL,CAAoBle,MAAMie,OAA1B,EAAmCje,MAAMqd,MAAzC,CAAhB;QACM3c,QAAQyd,MAAM9T,MAAN,CAAa,EAAE4T,gBAAF,EAAb,CAAd;QACMZ,SAASe,OAAO/T,MAAP,CAAc,EAAE4T,gBAAF,EAAd,CAAf;UACKvB,KAAL,CAAWW,MAAX,GAAoBA,MAApB;UACKX,KAAL,CAAWhc,KAAX,GAAmBA,KAAnB;;;;QAIMiP,SAAS3P,MAAM0C,KAAN,CAAYiN,MAAZ,EAAf;UACM0O,GAAN,CAAU,UAAV,EAAsB1O,MAAtB;UACK2O,WAAL,CAAiB3O,MAAjB;UACK+M,KAAL,CAAWha,KAAX,GAAmBiN,OAAOjN,KAA1B;;;mBAGe8N,OAAf,CAAuB,mBAAW;YAC3BC,OAAL,IAAgB,YAAa;0CAATnO,IAAS;cAAA;;;cACtBoO,OAAL,eAAaD,OAAb,SAAyBnO,IAAzB;OADF;KADF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAqLO;cACD,QAAN,EAAgB,IAAhB;;UAEMxB,WAAW,KAAKJ,KAAL,CACd0C,GADc,CACV,cADU,EACM,KAAKV,KADX,EACkB,IADlB,EAEdU,GAFc,CAEV,UAACE,KAAD,EAAQD,CAAR;eACH;gBAAA;YAAQ,KAAKA,CAAb,EAAgB,cAAhB;;SADG;OAFU,CAAjB;;UAQMrD,qBAAa,KAAKA,KAAlB,IAAyBc,kBAAzB,GAAN;UACMyd,OAAO,KAAK7d,KAAL,CAAW8d,MAAX,CAAkB,cAAlB,EAAkCxe,KAAlC,EAAyC,IAAzC,CAAb;aACOue,IAAP;;;;;;;;;;;;;;;;;;;;;;;;;2BA5DW;aACJ,KAAK7B,KAAL,CAAWW,MAAlB;;;;2BAGU;aACH,KAAKX,KAAL,CAAWhc,KAAlB;;;;2BAGU;aACH,KAAKgc,KAAL,CAAWha,KAAlB;;;;;;;;;;;;;;;;;;EAlNiBZ,MAAMC;;;;;;AAArB+b,OAOG9b,YAAY;eACJG,MAAMsC,IADF;aAENtC,MAAMsC,IAFA;aAGNtC,MAAM/C,MAHA;YAIP+C,MAAMmQ,IAJC;eAKJnQ,MAAMqC,GALF;WAMRrC,MAAMsc,KANE;YAOPtc,MAAMsC,IAPC;QAQXtC,MAAM/C,MARK;UAST+C,MAAMvC,MATG;cAULuC,MAAMsC,IAVD;SAWVtC,MAAMvC,MAXI;YAYPuC,MAAMC,MAZC;SAaVH,WAAWS,KAAX,CAAiBR,UAbP;AAPf4b,OA6BGpa,eAAe;aACT,KADS;eAEP,IAFO;YAGVma,IAHU;WAIX,EAJW;YAKV,KALU;UAMZ,EANY;cAOR,IAPQ;;;;;OAoDtBa,4BAA4B,iBAAS;QAC7BrB,MAD6B,UAC7BA,MAD6B;QACrB3c,KADqB,UACrBA,KADqB;;;;WAI9BqO,GAAL,CAASgP,OAAT;;;;QAKE/d,MAAMie,OAAN,IAAiB,OAAKje,KAAL,CAAWie,OAA5B,IACAje,MAAMqd,MAAN,IAAgB,OAAKrd,KAAL,CAAWqd,MAF7B,EAGE;UACMY,UAAU,OAAKC,cAAL,CAAoBle,MAAMie,OAA1B,EAAmCje,MAAMqd,MAAzC,CAAhB;cACQc,MAAM9T,MAAN,CAAa,EAAE4T,gBAAF,EAAb,CAAR;eACSG,OAAO/T,MAAP,CAAc,EAAE4T,gBAAF,EAAd,CAAT;aACKT,QAAL,CAAc,EAAEH,cAAF,EAAU3c,YAAV,EAAd;;;aAGKqO,GAAL,CAASiP,QAAT;;;;UAII,OAAKjP,GAAL,CAASiP,QAAT,GAAoB,CAApB,IAAyB,OAAKjP,GAAL,CAASiP,QAAT,IAAqB,OAAKjP,GAAL,CAASgP,OAA3D,EAAoE;eAC3DhY,IAAP,CACE,yQADF;;;;;;QAQE4J,SAAS3P,MAAM0C,KAAN,CAAYiN,MAAZ,EAAf;UACM0O,GAAN,CAAU,UAAV,EAAsB1O,MAAtB;WACK2O,WAAL,CAAiB3O,MAAjB;WACK6N,QAAL,CAAc,EAAE9a,OAAOiN,OAAOjN,KAAhB,EAAd;;;OAQFqL,oBAAoB,YAAM;WACnB4Q,WAAL;;QAEI,OAAK3e,KAAL,CAAW4e,SAAf,EAA0B;aACnBpX,KAAL;;;;OAQJ6G,qBAAqB,YAAM;WACpBsQ,WAAL;;;OAYFL,cAAc,kBAAU;QAClB3O,OAAOkP,UAAP,CAAkBvd,IAAtB,EAA4B;cACpB,aAAN,EAAqB,EAAEqO,cAAF,EAArB;aACKZ,GAAL,CAASY,MAAT,GAAkBA,MAAlB;;;;OASJgP,cAAc,YAAM;QACVhP,MADU,GACC,OAAKZ,GADN,CACVY,MADU;;;QAGdA,MAAJ,EAAY;cACJ,aAAN,EAAqB,EAAEA,cAAF,EAArB;aACO,OAAKZ,GAAL,CAASY,MAAhB;aACK3P,KAAL,CAAWod,QAAX,CAAoBzN,MAApB;;;;OAUJA,SAAS,YAAa;;;QACdA,SAAS,wBAAKjN,KAAL,CAAWiN,MAAX,IAAoBgE,IAApB,gCAAf;WACKyJ,QAAL,CAAczN,MAAd;;;OAOFhB,OAAO,YAAM;WACNgB,MAAL,CAAY;aAAK0I,EAAE1J,IAAF,EAAL;KAAZ;;;OAOFnH,QAAQ,YAAM;WACPmI,MAAL,CAAY;aAAK0I,EAAE7Q,KAAF,EAAL;KAAZ;;;OA0BFkJ,UAAU,UAACD,OAAD,EAAUnB,KAAV,EAAoB;WACvBK,MAAL,CAAY,kBAAU;aACfjP,KAAL,CAAW2d,GAAX,CAAe5N,OAAf,EAAwBnB,KAAxB,EAA+BK,MAA/B;KADF;;;OAWFyN,WAAW,kBAAU;YACb,UAAN,EAAkB,EAAEzN,cAAF,EAAlB;;WAEKjP,KAAL,CAAW2d,GAAX,CAAe,UAAf,EAA2B1O,MAA3B;QACQjN,KAJW,GAIDiN,MAJC,CAIXjN,KAJW;QAKX0a,QALW,GAKE,OAAKpd,KALP,CAKXod,QALW;;QAMf1a,SAAS,OAAKA,KAAlB,EAAyB;aAChBiN,MAAT;;;OAuCFuO,iBAAiB,UAACD,OAAD,EAAUZ,MAAV,EAAqB;QAC9ByB,eAAehC,cAArB;QACMiC,cAAcjH,aAApB;QACMkH,eAAe;cACX3B,UAAU;KADpB;;+BAIW4B,KAPyB;;UAS9BA,SAAQ,UAAZ,EAAwB;;;;UAIpBA,SAAQ,QAAZ,EAAsB;;;mBAGTA,KAAb,IAAqB,YAAa;;;eACzB,OAAKjf,KAAL,CAAWif,KAAX,KAAoB,iBAAKjf,KAAL,EAAWif,KAAX,0BAA3B;OADF;;;;;;;;4BATiBC,YAAnB,mIAAkC;YAAvBD,KAAuB;;yBAAvBA,KAAuB;;iCAMV;;;;;;;;;;;;;;;;;YAQhBH,YAAR,EAAsBE,YAAtB,2BAAwCf,WAAW,EAAnD,IAAwDc,WAAxD;;;;;;;;;yBAQe9kB,cAAnB,wIAAmC;QAAxBglB,IAAwB;;WAC1Bjd,SAAP,CAAiBid,IAAjB,IAAyB9c,MAAMmQ,IAA/B;;;;;;;;;;;;;;;;;;;;;;;AChTF,YAAe;gBAAA;8BAAA;4BAAA;4BAAA;oBAAA;sBAAA;8BAAA;oCAAA;oCAAA;0BAAA;;CAAf;;;;;"}